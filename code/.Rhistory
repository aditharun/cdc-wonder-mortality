message("An error occurred:", conditionMessage(e))
df <- NA
})
return(df)
}
#was there every a 1d jump greater than 50% defined as close from previous day to close of next day
spike_status <- function(data, pct_thresh = 50){
if (is.na(data)){
return(NA)
}
data$close_prev <- c(data$open[1], data$close[1:(nrow(data)-1)])
data <- data %>% mutate(jump_pct = ((close - close_prev) / close_prev)*100)
data <- data %>% mutate(idx = 1:n()) %>% arrange(desc(jump_pct)) %>% mutate(spike = ifelse(jump_pct > 50, TRUE, FALSE))
return(data)
}
#ok, for the single day spikes, I want to know what happened to the stock after
#so i want a plot of where it was on the close before spike, and the 2 months after spike
chart_spike <- function(data, symbol, duration = 90, count_only = TRUE){
if (is.na(data)){
return(NULL)
}
data <- data %>% dplyr::mutate(endidx = ifelse((idx + duration) < nrow(data), idx+duration, nrow(data)))
spikes <- data %>% filter(spike)
print(symbol)
if (nrow(spikes)==0){
return(NULL)
}
if (count_only){
return(nrow(spikes))
}
pltlist <- list()
for (i in 1:nrow(spikes)){
range <- c(spikes$idx[i], spikes$endidx[i])
keydate <- spikes$date[i]
#get the day before close value unless its on the first day
range[1] <- max((range[1]-1), 1)
df <- data %>% filter(idx %in% c(range[1]:range[2])) %>% arrange(idx) %>% mutate(index = 1:n())
spikeprice <- df$close[df$idx==spikes$idx[i]]
df <- df %>% mutate(pct_spike = close * (100/spikeprice))
pltlist[[i]] <- df %>% ggplot(aes(x=index, y=pct_spike)) + geom_point(size = 3, color = "grey40", alpha = 0.6) + geom_line(size = 0.75, alpha = 0.8, color = "grey40") + theme_minimal() + theme(panel.background = element_blank(), panel.grid = element_blank(), panel.border = element_rect(color = "black", fill = "transparent"), axis.title = element_text(size = 14), axis.text = element_text(size = 14), plot.title = element_text(hjust = 0.5, size = 16) ) + scale_y_continuous(name = "% of Spike Price", breaks = scales::pretty_breaks(n = 10)) + xlab("Days Since Spike") + scale_x_continuous(breaks = scales::pretty_breaks(n = 8)) + ggtitle(paste0(symbol,": ", keydate)) + theme(axis.ticks = element_line(color = "grey70"))
}
return(cowplot::plot_grid(plotlist = pltlist))
}
stocklist
results <- lapply(stocklist, function(x) x %>% get_data(.) %>% spike_status(., pct_thresh=50) %>% chart_spike(., x, duration=120, count_only = FALSE))
library(quantmod)
library(tidyverse)
#Biotech company jumps like crazy screen then what happens? Drops how much in what scale? Or does it not drop if the rest of market goes up? Or if rest of biotech sector does?
stocklist <- "~/Downloads/BTEC_holdings.csv" %>% read_csv() %>% pull(1) %>% unique()
stocklist <- stocklist[grep("^[A-Z]+$", stocklist)]
#for each stock, check in the past 10 years
get_data <- function(symbol){
tryCatch({
df <- quantmod::getSymbols(symbol,auto.assign = FALSE) %>% as.data.frame()
dates <- rownames(df)
df %>% as_tibble() %>% mutate(date = dates) %>% magrittr::set_colnames(c("open", "high", "low", "close", "vol", "adj", "date"))
}, error = function(e) {
# Error handling code
message("An error occurred:", conditionMessage(e))
df <- NA
})
return(df)
}
#was there every a 1d jump greater than 50% defined as close from previous day to close of next day
spike_status <- function(data, pct_thresh = 50){
if (is.na(data)){
return(NA)
}
data$close_prev <- c(data$open[1], data$close[1:(nrow(data)-1)])
data <- data %>% mutate(jump_pct = ((close - close_prev) / close_prev)*100)
data <- data %>% mutate(idx = 1:n()) %>% arrange(desc(jump_pct)) %>% mutate(spike = ifelse(jump_pct > 50, TRUE, FALSE))
return(data)
}
#ok, for the single day spikes, I want to know what happened to the stock after
#so i want a plot of where it was on the close before spike, and the 2 months after spike
chart_spike <- function(data, symbol, duration = 90, count_only = TRUE){
print(symbol)
if (is.na(data)){
return(NULL)
}
data <- data %>% dplyr::mutate(endidx = ifelse((idx + duration) < nrow(data), idx+duration, nrow(data)))
spikes <- data %>% filter(spike)
if (nrow(spikes)==0){
return(NULL)
}
if (count_only){
return(nrow(spikes))
}
pltlist <- list()
for (i in 1:nrow(spikes)){
range <- c(spikes$idx[i], spikes$endidx[i])
keydate <- spikes$date[i]
#get the day before close value unless its on the first day
range[1] <- max((range[1]-1), 1)
df <- data %>% filter(idx %in% c(range[1]:range[2])) %>% arrange(idx) %>% mutate(index = 1:n())
spikeprice <- df$close[df$idx==spikes$idx[i]]
df <- df %>% mutate(pct_spike = close * (100/spikeprice))
pltlist[[i]] <- df %>% ggplot(aes(x=index, y=pct_spike)) + geom_point(size = 3, color = "grey40", alpha = 0.6) + geom_line(size = 0.75, alpha = 0.8, color = "grey40") + theme_minimal() + theme(panel.background = element_blank(), panel.grid = element_blank(), panel.border = element_rect(color = "black", fill = "transparent"), axis.title = element_text(size = 14), axis.text = element_text(size = 14), plot.title = element_text(hjust = 0.5, size = 16) ) + scale_y_continuous(name = "% of Spike Price", breaks = scales::pretty_breaks(n = 10)) + xlab("Days Since Spike") + scale_x_continuous(breaks = scales::pretty_breaks(n = 8)) + ggtitle(paste0(symbol,": ", keydate)) + theme(axis.ticks = element_line(color = "grey70"))
}
return(cowplot::plot_grid(plotlist = pltlist))
}
results <- lapply(stocklist, function(x) x %>% get_data(.) %>% spike_status(., pct_thresh=50) %>% chart_spike(., x, duration=120, count_only = FALSE))
pdf("~/Downloads/biotech-jumper-results.pdf")
results
dev.off()
n.nospike <- lapply(results, function(x) is.null(x)) %>% unlist() %>% sum()
n.spike <- length(stocklist) - n.nospike
n.spike.pct <- (n.spike*100) / length(stocklist)
print(paste0("Number of No Spikes: ", n.nospike))
print(paste0("Number of Spikes: ", n.spike))
print(paste0("Spike Percentage: ", round(n.spike.pct, 2)))
#
get_data("VRTX")
x <- get_data("VRTX")
x
x %>% as.data.frame()
x %>% as.data.frame() %>% as_tibble()
library(quantmod)
library(tidyverse)
#Biotech company jumps like crazy screen then what happens? Drops how much in what scale? Or does it not drop if the rest of market goes up? Or if rest of biotech sector does?
stocklist <- "~/Downloads/BTEC_holdings.csv" %>% read_csv() %>% pull(1) %>% unique()
stocklist <- stocklist[grep("^[A-Z]+$", stocklist)]
#for each stock, check in the past 10 years
get_data <- function(symbol){
tryCatch({
df <- quantmod::getSymbols(symbol,auto.assign = FALSE) %>% as.data.frame()
dates <- rownames(df)
df <- df %>% as_tibble() %>% mutate(date = dates) %>% magrittr::set_colnames(c("open", "high", "low", "close", "vol", "adj", "date"))
}, error = function(e) {
# Error handling code
message("An error occurred:", conditionMessage(e))
df <- NA
})
return(df)
}
#was there every a 1d jump greater than 50% defined as close from previous day to close of next day
spike_status <- function(data, pct_thresh = 50){
if (is.na(data)){
return(NA)
}
data$close_prev <- c(data$open[1], data$close[1:(nrow(data)-1)])
data <- data %>% mutate(jump_pct = ((close - close_prev) / close_prev)*100)
data <- data %>% mutate(idx = 1:n()) %>% arrange(desc(jump_pct)) %>% mutate(spike = ifelse(jump_pct > 50, TRUE, FALSE))
return(data)
}
#ok, for the single day spikes, I want to know what happened to the stock after
#so i want a plot of where it was on the close before spike, and the 2 months after spike
chart_spike <- function(data, symbol, duration = 90, count_only = TRUE){
print(symbol)
if (is.na(data)){
return(NULL)
}
data <- data %>% dplyr::mutate(endidx = ifelse((idx + duration) < nrow(data), idx+duration, nrow(data)))
spikes <- data %>% filter(spike)
if (nrow(spikes)==0){
return(NULL)
}
if (count_only){
return(nrow(spikes))
}
pltlist <- list()
for (i in 1:nrow(spikes)){
range <- c(spikes$idx[i], spikes$endidx[i])
keydate <- spikes$date[i]
#get the day before close value unless its on the first day
range[1] <- max((range[1]-1), 1)
df <- data %>% filter(idx %in% c(range[1]:range[2])) %>% arrange(idx) %>% mutate(index = 1:n())
spikeprice <- df$close[df$idx==spikes$idx[i]]
df <- df %>% mutate(pct_spike = close * (100/spikeprice))
pltlist[[i]] <- df %>% ggplot(aes(x=index, y=pct_spike)) + geom_point(size = 3, color = "grey40", alpha = 0.6) + geom_line(size = 0.75, alpha = 0.8, color = "grey40") + theme_minimal() + theme(panel.background = element_blank(), panel.grid = element_blank(), panel.border = element_rect(color = "black", fill = "transparent"), axis.title = element_text(size = 14), axis.text = element_text(size = 14), plot.title = element_text(hjust = 0.5, size = 16) ) + scale_y_continuous(name = "% of Spike Price", breaks = scales::pretty_breaks(n = 10)) + xlab("Days Since Spike") + scale_x_continuous(breaks = scales::pretty_breaks(n = 8)) + ggtitle(paste0(symbol,": ", keydate)) + theme(axis.ticks = element_line(color = "grey70"))
}
return(cowplot::plot_grid(plotlist = pltlist))
}
results <- lapply(stocklist, function(x) x %>% get_data(.) %>% spike_status(., pct_thresh=50) %>% chart_spike(., x, duration=120, count_only = FALSE))
pdf("~/Downloads/biotech-jumper-results.pdf")
results
dev.off()
n.nospike <- lapply(results, function(x) is.null(x)) %>% unlist() %>% sum()
n.spike <- length(stocklist) - n.nospike
n.spike.pct <- (n.spike*100) / length(stocklist)
print(paste0("Number of No Spikes: ", n.nospike))
print(paste0("Number of Spikes: ", n.spike))
print(paste0("Spike Percentage: ", round(n.spike.pct, 2)))
#
100*0.2%
100*0-2
100*0.2
100*(1-0l2)
100*1.5
(100*1.5)/2
\frac{\left(\frac{2.159}{2}\ -\ x\right)\left(20.4\right)}{20.4\cdot2}
(((2.159/2) - x)*20.4)/(20.4*2)
lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2))
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01))
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble()
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=x, y=y)) + geom_point() + geom_line()
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=x, y=y)) + geom_point() + geom_smooth()
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=x, y=y)) + geom_point() + geom_line() + theme_minimal()
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=x, y=y)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"))
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=x, y=y)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"), panel.background = element_blank(()))
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=x, y=y)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"), panel.background = element_blank())
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=y, y=x)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"), panel.background = element_blank()) + xlab("Position of the Weight") + ylab("Center of Mass of the System")
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=y, y=x)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"), panel.background = element_blank()) + xlab("Position of the Weight") + ylab("Center of Mass of the System") + theme(axis.title = element_text(size = 16), axis.text = element_text(suze = 14))
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=y, y=x)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"), panel.background = element_blank()) + xlab("Position of the Weight") + ylab("Center of Mass of the System") + theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14))
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=y, y=x)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"), panel.background = element_blank()) + xlab("Position of the Weight") + ylab("Center of Mass of the System") + theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + geom_hline(yintercept = 0.388, color = "grey70", size = 1)
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=y, y=x)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"), panel.background = element_blank()) + xlab("Position of the Weight") + ylab("Center of Mass of the System") + theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + geom_hline(yintercept = 0.388, color = "grey70", size = 1)
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=y, y=x)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"), panel.background = element_blank()) + xlab("Position of the Weight") + ylab("Center of Mass of the System") + theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + geom_hline(yintercept = 0.388, color = "grey70", size = 1) + geom_vline(xintercept = 0.30, color = "red", size = 0.5)
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=y, y=x)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"), panel.background = element_blank()) + xlab("Position of the Weight") + ylab("Center of Mass of the System") + theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + geom_hline(yintercept = 0.388, color = "grey70", size = 1)
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=y, y=x)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"), panel.background = element_blank()) + xlab("Position of the Weight") + ylab("Center of Mass of the System") + theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + geom_hline(yintercept = 0.388, color = "grey70", size = 1) + ggtitle("Finding the Critical COM") + theme(plot.title = element_text(size = 16, hjust = 0.5))
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=y, y=x)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"), panel.background = element_blank()) + xlab("Position of the Weight") + ylab("Center of Mass of the System") + theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + geom_hline(yintercept = 0.388, color = "grey70", size = 1) + ggtitle("Finding the Critical COM") + theme(plot.title = element_text(size = 16, hjust = 0.5))
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=y, y=x)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"), panel.background = element_rect(fill="grey30")) + xlab("Position of the Weight") + ylab("Center of Mass of the System") + theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + geom_hline(yintercept = 0.388, color = "grey70", size = 1) + ggtitle("Finding the Critical COM") + theme(plot.title = element_text(size = 16, hjust = 0.5))
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=y, y=x)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"), panel.background = element_rect(fill="grey80")) + xlab("Position of the Weight") + ylab("Center of Mass of the System") + theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + geom_hline(yintercept = 0.388, color = "grey70", size = 1) + ggtitle("Finding the Critical COM") + theme(plot.title = element_text(size = 16, hjust = 0.5))
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=y, y=x)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"), panel.background = element_rect(fill="grey90")) + xlab("Position of the Weight") + ylab("Center of Mass of the System") + theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + geom_hline(yintercept = 0.388, color = "grey70", size = 1) + ggtitle("Finding the Critical COM") + theme(plot.title = element_text(size = 16, hjust = 0.5))
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=y, y=x)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"), panel.background = element_rect(fill="grey95")) + xlab("Position of the Weight") + ylab("Center of Mass of the System") + theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + geom_hline(yintercept = 0.388, color = "grey70", size = 1) + ggtitle("Finding the Critical COM") + theme(plot.title = element_text(size = 16, hjust = 0.5))
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=y, y=x)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"), panel.background = element_rect(fill="grey98")) + xlab("Position of the Weight") + ylab("Center of Mass of the System") + theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + geom_hline(yintercept = 0.388, color = "grey70", size = 1) + ggtitle("Finding the Critical COM") + theme(plot.title = element_text(size = 16, hjust = 0.5))
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% as_tibble() %>% ggplot(aes(x=y, y=x)) + geom_point() + geom_line() + theme(panel.grid = element_blank(), panel.border = element_rect(color = "black", fill="transparent"), panel.background = element_rect(fill="grey97")) + xlab("Position of the Weight") + ylab("Center of Mass of the System") + theme(axis.title = element_text(size = 16), axis.text = element_text(size = 14)) + geom_hline(yintercept = 0.388, color = "grey70", size = 1) + ggtitle("Finding the Critical COM") + theme(plot.title = element_text(size = 16, hjust = 0.5))
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01))
data.frame(x = lapply(seq(0, 0.388, 0.01), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% filter(x <= 0.388)
data.frame(x = lapply(seq(0, 0.388, 0.001), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.01)) %>% filter(x <= 0.388)
data.frame(x = lapply(seq(0, 0.388, 0.001), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.001)) %>% filter(x <= 0.388)
data.frame(x = lapply(seq(0, 0.388, 0.001), function(x) (((2.159/2) - x)*20.4)/(20.4*2)) %>% unlist(), y= seq(0, 0.388, 0.001)) %>% filter(x <= 0.388) %>% as_tibble()
15.3-11.96
data.frame(x = lapply(seq(0, 225, 1), function(x) (((2.159/2) - 0.388)*20.4)/(20.4+x)) %>% unlist(), y= seq(0, 225, 1))
library(tidyverse)
ypll_file <- "~/Downloads/Underlying Cause of Death, 1999-2020 (22).txt" %>% read_delim(., delim='\t') %>% slice(1:(38652-93))
ageadj_file <- "~/Downloads/Underlying Cause of Death, 1999-2020 (23).txt" %>% read_delim(., delim='\t') %>% slice(1:(1675-91))
ageadj <- ageadj_file %>% select(Year, `ICD-10 113 Cause List`, Race, Gender, Deaths, Population, `Age Adjusted Rate`) %>% magrittr::set_colnames(c("year", "icd", "race", "gender", "deaths", "population", "ageadjrate"))
ageadj <- ageadj %>% mutate(race = ifelse(race == "White", "white", "black"))
ageadj <- ageadj %>% group_by(year, icd, gender) %>% summarize(unadj_excess_num = deaths[race=="black"] - (population[race=="black"] * (deaths[race=="white"]/population[race=="black"])), ageadj_excess = ageadjrate[race=="black"] - ageadjrate[race=="white"]) %>% ungroup()
icd_map <- ageadj %>% select(icd) %>% distinct() %>% mutate(name=c("Accidents", "Alzheimer's", "Assault", "Cerebrovascular Diseases", "Perinatal Period Conditions", "Chronic Liver Disease and Cirrhosis", "Chronic Lower Respiratory Diseases", "Diabetes", "Heart Disease", "Hypertension", "HIV", "Influenza and Pneumonia", "Suicide", "Cancer", "Nephritis", "Parkinson's", "Pneumonitis due to Solids/Liquids", "Septicemia"))
ypll <- ypll_file %>% select(`Five-Year Age Groups Code`, Year, Gender, `ICD-10 113 Cause List`, Race, Deaths, Population, `Crude Rate`) %>% magrittr::set_colnames(c("agegroup", "year", "gender", "icd", "race", "deaths", "population", "cruderate"))
ypll <- ypll %>% filter(agegroup != "NS") %>% filter(cruderate != "Unreliable") %>% filter(cruderate != "Not Applicable") %>% mutate(age_lb = str_sub(agegroup,1,2) %>% as.numeric())
age_intervals <- c(0, 1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, Inf)
ypll <- ypll %>% mutate(age_cat = cut(age_lb, breaks=age_intervals, right=FALSE)) %>% mutate(age_cat=as.character(age_cat))
ypll <- ypll %>% mutate(age_lb = as.numeric(sub("\\[(\\d+),.*", "\\1", age_cat)), age_ub = as.numeric(sub(".*,(\\d+)\\)", "\\1", age_cat)), age_cat = paste0(age_lb, "-", age_ub-1), age_cat=ifelse(age_cat=="0-0", "< 1", age_cat)) %>% mutate(age=age_lb) %>% select(-c(age_lb, age_ub))
lifeexp_file <- "~/Documents/GitHub/cdc-wonder-mortality/data/file_life_expectancy_1999_to_2020.dta"
life_exp <- haven::read_dta(lifeexp_file) %>% mutate(Gender=factor(gender)) %>% mutate(Gender=ifelse(Gender=="1", "Female", "Male")) %>% select(-gender) %>% mutate(Gender = as.character(Gender))
excess_by_age_over_years <- ypll %>% mutate(year = as.numeric(year)) %>% left_join(life_exp, by=c("year"="year", "age"="age_cat", "gender"="Gender")) %>%  mutate(yrs_lost = life_expectancy * as.numeric(cruderate)) %>% mutate(race = ifelse(race == "White", "white", ifelse(race=="Black or African American", "black", race))) %>% filter(race %in% c("white", "black")) %>% group_by(year, agegroup, gender, age, icd, age_cat) %>% summarize(excess = yrs_lost[race=="black"] - yrs_lost[race=="white"])
pll <- excess_by_age_over_years %>% group_by(year, gender, icd) %>% summarize(excess = mean(excess, na.rm=TRUE))
ageadj <- ageadj %>% left_join(icd_map, by=c("icd"="icd")) %>% select(-icd)
pll <- pll %>% left_join(icd_map, by=c("icd"="icd")) %>% select(-icd)
#Male till 2011 decline
ageadj %>% filter(gender == "Male") %>% ggplot(aes(x=year, y=ageadj_excess, color=name)) + geom_point() + geom_line() + theme_minimal() + facet_wrap(~name, scales="free_y") + theme(legend.position = "none") + geom_vline(xintercept = 2011)
pll %>% filter(gender == "Male") %>% ggplot(aes(x=year, y=excess, color=name)) + geom_point() + geom_line() + theme_minimal() + facet_wrap(~name) + theme(legend.position = "none") + geom_vline(xintercept = 2011)
#Female till 2012
ageadj %>% filter(gender == "Female") %>% ggplot(aes(x=year, y=ageadj_excess, color=name)) + geom_point() + geom_line() + theme_minimal() + facet_wrap(~name, scales="free_y") + theme(legend.position = "none") + geom_vline(xintercept = 2012)
pll %>% filter(gender == "Female") %>% ggplot(aes(x=year, y=excess, color=name)) + geom_point() + geom_line() + theme_minimal() + facet_wrap(~name, scales="free_y") + theme(legend.position = "none") + geom_vline(xintercept = 2012)
"~/Downloads/Figure1/age_adj_excess_mortality_rate_by_years_Figure1.csv" %>% read_csv()
"~/Downloads/Figure1/excess_ypll_rate_by_years_Figure1.csv" %>% read_csv()
"~/Downloads/Figure1/age_adj_excess_mortality_rate_by_years_Figure3.csv" %>% read_csv()
"~/Downloads/Figure3/excess_mortality_rate_by_age_Figure3.csv" %>% read_csv()
net_excess_ageadj <- "~/Downloads/Figure1/age_adj_excess_mortality_rate_by_years_Figure1.csv" %>% read_csv()
net_excess_ypll <- "~/Downloads/Figure1/excess_ypll_rate_by_years_Figure1.csv" %>% read_csv()
ageadj
net_excess_ageadj
net_excess_ageadj$race %>% unique()
ageadj %>% group_by(year, gender) %>% summarize(net = sum(ageadj_excess))
ageadj %>% group_by(year, gender) %>% summarize(net = sum(ageadj_excess)) %>% ungroup()
net_excess_ageadj
ageadj %>% group_by(year, gender) %>% summarize(net = sum(ageadj_excess)) %>% ungroup() %>% left_join(net_excess_ageadj, by=c("gender"="gender", "year"="year"))
ageadj %>% group_by(year, gender) %>% summarize(net = sum(ageadj_excess)) %>% ungroup() %>% left_join(net_excess_ageadj, by=c("gender"="gender", "year"="year")) %>% mutate(pct_captured = round((net*100) / excess_deaths_rate))
ageadj %>% group_by(year, gender) %>% summarize(net = sum(ageadj_excess)) %>% ungroup() %>% left_join(net_excess_ageadj, by=c("gender"="gender", "year"="year")) %>% mutate(pct_captured = round((net*100) / excess_deaths_rate)) %>% pull(pct_captured)
net_excess_ypll
ypll
pll
net_excess_ypll
pll %>% group_by(year, gender) %>% summarize(net = sum(excess)) %>% ungroup() %>% left_join(net_excess_ypll, by=c("gender"="gender", "year"="year")) %>% mutate(pct_captured = round((net*100) / excess_yrslost_rate)) %>% pull(pct_captured)
pll %>% group_by(year, gender) %>% summarize(net = sum(excess)) %>% ungroup() %>% left_join(net_excess_ypll, by=c("gender"="gender", "year"="year"))
pll
pll
pll$name %>% unique()
pll
pll %>% sleect(year, gender)
pll %>% select(year, gender)
pll %>% select(year, gender) %>% distinct()
pll %>% select(year, gender) %>% distinct() %>% arrange(desc(year))
library(tidyverse)
ypll_file <- "~/Downloads/Underlying Cause of Death, 1999-2020 (22).txt" %>% read_delim(., delim='\t') %>% slice(1:(38652-93))
ageadj_file <- "~/Downloads/Underlying Cause of Death, 1999-2020 (23).txt" %>% read_delim(., delim='\t') %>% slice(1:(1675-91))
ageadj <- ageadj_file %>% select(Year, `ICD-10 113 Cause List`, Race, Gender, Deaths, Population, `Age Adjusted Rate`) %>% magrittr::set_colnames(c("year", "icd", "race", "gender", "deaths", "population", "ageadjrate"))
ageadj <- ageadj %>% mutate(race = ifelse(race == "White", "white", "black"))
ageadj <- ageadj %>% group_by(year, icd, gender) %>% summarize(unadj_excess_num = deaths[race=="black"] - (population[race=="black"] * (deaths[race=="white"]/population[race=="black"])), ageadj_excess = ageadjrate[race=="black"] - ageadjrate[race=="white"]) %>% ungroup()
icd_map <- ageadj %>% select(icd) %>% distinct() %>% mutate(name=c("Accidents", "Alzheimer's", "Assault", "Cerebrovascular Diseases", "Perinatal Period Conditions", "Chronic Liver Disease and Cirrhosis", "Chronic Lower Respiratory Diseases", "Diabetes", "Heart Disease", "Hypertension", "HIV", "Influenza and Pneumonia", "Suicide", "Cancer", "Nephritis", "Parkinson's", "Pneumonitis due to Solids/Liquids", "Septicemia"))
ypll <- ypll_file %>% select(`Five-Year Age Groups Code`, Year, Gender, `ICD-10 113 Cause List`, Race, Deaths, Population, `Crude Rate`) %>% magrittr::set_colnames(c("agegroup", "year", "gender", "icd", "race", "deaths", "population", "cruderate"))
ypll <- ypll %>% filter(agegroup != "NS") %>% filter(cruderate != "Unreliable") %>% filter(cruderate != "Not Applicable") %>% mutate(age_lb = str_sub(agegroup,1,2) %>% as.numeric())
age_intervals <- c(0, 1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, Inf)
ypll <- ypll %>% mutate(age_cat = cut(age_lb, breaks=age_intervals, right=FALSE)) %>% mutate(age_cat=as.character(age_cat))
ypll <- ypll %>% mutate(age_lb = as.numeric(sub("\\[(\\d+),.*", "\\1", age_cat)), age_ub = as.numeric(sub(".*,(\\d+)\\)", "\\1", age_cat)), age_cat = paste0(age_lb, "-", age_ub-1), age_cat=ifelse(age_cat=="0-0", "< 1", age_cat)) %>% mutate(age=age_lb) %>% select(-c(age_lb, age_ub))
lifeexp_file <- "~/Documents/GitHub/cdc-wonder-mortality/data/file_life_expectancy_1999_to_2020.dta"
life_exp <- haven::read_dta(lifeexp_file) %>% mutate(Gender=factor(gender)) %>% mutate(Gender=ifelse(Gender=="1", "Female", "Male")) %>% select(-gender) %>% mutate(Gender = as.character(Gender))
excess_by_age_over_years <- ypll %>% mutate(year = as.numeric(year)) %>% left_join(life_exp, by=c("year"="year", "age"="age_cat", "gender"="Gender")) %>%  mutate(yrs_lost = life_expectancy * as.numeric(cruderate)) %>% mutate(race = ifelse(race == "White", "white", ifelse(race=="Black or African American", "black", race))) %>% filter(race %in% c("white", "black")) %>% group_by(year, agegroup, gender, age, icd, age_cat) %>% summarize(excess = yrs_lost[race=="black"] - yrs_lost[race=="white"])
pll <- excess_by_age_over_years %>% group_by(year, gender, icd) %>% summarize(excess = mean(excess, na.rm=TRUE))
ageadj <- ageadj %>% left_join(icd_map, by=c("icd"="icd")) %>% select(-icd)
pll <- pll %>% left_join(icd_map, by=c("icd"="icd")) %>% select(-icd)
#Male till 2011 decline
ageadj %>% filter(gender == "Male") %>% ggplot(aes(x=year, y=ageadj_excess, color=name)) + geom_point() + geom_line() + theme_minimal() + facet_wrap(~name, scales="free_y") + theme(legend.position = "none") + geom_vline(xintercept = 2011)
pll %>% filter(gender == "Male") %>% ggplot(aes(x=year, y=excess, color=name)) + geom_point() + geom_line() + theme_minimal() + facet_wrap(~name) + theme(legend.position = "none") + geom_vline(xintercept = 2011)
#Female till 2012
ageadj %>% filter(gender == "Female") %>% ggplot(aes(x=year, y=ageadj_excess, color=name)) + geom_point() + geom_line() + theme_minimal() + facet_wrap(~name, scales="free_y") + theme(legend.position = "none") + geom_vline(xintercept = 2012)
pll %>% filter(gender == "Female") %>% ggplot(aes(x=year, y=excess, color=name)) + geom_point() + geom_line() + theme_minimal() + facet_wrap(~name, scales="free_y") + theme(legend.position = "none") + geom_vline(xintercept = 2012)
net_excess_ageadj <- "~/Downloads/Figure1/age_adj_excess_mortality_rate_by_years_Figure1.csv" %>% read_csv()
net_excess_ypll <- "~/Downloads/Figure1/excess_ypll_rate_by_years_Figure1.csv" %>% read_csv()
#what pct of ageadj deaths excess are captured in the top causes of death yoy
ageadj %>% group_by(year, gender) %>% summarize(net = sum(ageadj_excess)) %>% ungroup() %>% left_join(net_excess_ageadj, by=c("gender"="gender", "year"="year")) %>% mutate(pct_captured = round((net*100) / excess_deaths_rate)) %>% pull(pct_captured)
#pre 2011 or 2012
#for each year
library(tidyverse)
aaaaaaaaaaaaaaaaaa
aa
ageadj
ageadj %>%
group_by(gender, name) %>% # Group data by gender and name
arrange(year) %>% # Sort by year
mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>%
ungroup()
net_excess_ageadj <- "~/Downloads/Figure1/age_adj_excess_mortality_rate_by_years_Figure1.csv" %>% read_csv()
net_excess_ageadj
net_excess_ageadj %>% group_by(gender, year) %>% mutate(ageadj_excess = excess_deaths_rate[race == "Black"] - excess_deaths_race[race == "White"]) %>% group_by(gender) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>%ungroup()
net_excess_ageadj %>% group_by(gender, year) %>% mutate(ageadj_excess = excess_deaths_rate[race == "Black"] - excess_deaths_race[race == "White"])
net_excess_ageadj %>% group_by(gender, year) %>% mutate(ageadj_excess = excess_deaths_rate[race == "Black"] - excess_deaths_rate[race == "White"])  %>% group_by(gender) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>%ungroup()
net_excess_ageadj %>% group_by(gender, year) %>% mutate(ageadj_excess = excess_deaths_rate[race == "Black"] - excess_deaths_rate[race == "White"])
net_excess_ageadj %>% group_by(gender, year) %>% group_by(gender) %>% arrange(year) %>% mutate(pct_yoy_change = ((excess_deaths_rate - lag(excess_deaths_rate)) / lag(excess_deaths_rate)) * 100) %>%ungroup()
yoy_net_pct <- net_excess_ageadj %>% group_by(gender, year) %>% group_by(gender) %>% arrange(year) %>% mutate(pct_yoy_change = ((excess_deaths_rate - lag(excess_deaths_rate)) / lag(excess_deaths_rate)) * 100) %>%ungroup()
yoy_net_pct
ggplot(aes(x=year, y = pct_yoy_change)) + geom_point()
ggplot(yoy_net_pct, aes(x=year, y = pct_yoy_change)) + geom_point()
ggplot(yoy_net_pct, aes(x=year, y = pct_yoy_change)) + geom_point() + facet_wrap(~gender)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>%ungroup()
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% ggplot(aes(x=year, y=pct_yoy_change)) + geom_histogram() + theme_minimal() + facet_wrap(~gender)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% ggplot(aes(y=pct_yoy_change)) + geom_histogram() + theme_minimal() + facet_wrap(~gender)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% ggplot(aes(x=pct_yoy_change)) + geom_histogram() + theme_minimal() + facet_wrap(~gender)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% ggplot(aes(x=pct_yoy_change, group=name)) + geom_density() + theme_minimal() + facet_wrap(~gender)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% ggplot(aes(x=pct_yoy_change, group=name, fill = name)) + geom_density(alpha = 0.65) + theme_minimal() + facet_wrap(~gender)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% filter(year <= 2012) %>% ggplot(aes(x=pct_yoy_change, group=name, fill = name)) + geom_density(alpha = 0.65) + theme_minimal() + facet_wrap(~gender)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% filter(year <= 2012) %>% ggplot(aes(x=pct_yoy_change, group=name, fill = name)) + geom_point() + theme_minimal() + facet_wrap(~gender)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% filter(year <= 2012) %>% ggplot(aes(x=year, y=pct_yoy_change, group=name, fill = name)) + geom_point() + theme_minimal() + facet_wrap(~gender)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% filter(year <= 2012) %>% ggplot(aes(x=year, y=pct_yoy_change, group=name, color = name)) + geom_point() + theme_minimal() + facet_wrap(~gender)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% filter(year <= 2012) %>% ggplot(aes(x=year, y=pct_yoy_change, group=name, color = name)) + geom_point() + theme_minimal() + facet_wrap(~gender)
ageadj
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% filter(year <= 2012) %>% ggplot(aes(x=year, y=pct_yoy_change, group=name, color = name)) + geom_bar(position = "stack") + theme_minimal() + facet_wrap(~gender)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% filter(year <= 2012) %>% ggplot(aes(x=year, y=pct_yoy_change, group=name, color = name)) + geom_bar(position = "stack", stat = "identity") + theme_minimal() + facet_wrap(~gender)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% filter(year <= 2012) %>% ggplot(aes(x=year, y=pct_yoy_change, group=name, color = name, fill = name)) + geom_bar(position = "stack", stat = "identity") + theme_minimal() + facet_wrap(~gender)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% filter(year <= 2012) %>% ggplot(aes(x=year, y=pct_yoy_change, group=name, color = name, fill = name)) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() + facet_wrap(~gender)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% filter(year <= 2012) %>% ggplot(aes(x=year, y=pct_yoy_change, group=name, color = name, fill = name)) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() + facet_wrap(~c(gender, )
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% filter(year <= 2012) %>% ggplot(aes(x=year, y=pct_yoy_change, group=name, color = name, fill = name)) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() + facet_wrap(~c(gender, name)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% filter(year <= 2012) %>% ggplot(aes(x=year, y=pct_yoy_change, group=name, color = name, fill = name)) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() + facet_wrap(~c(gender, name))
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% filter(year <= 2012) %>% filter(gender == "Male") %>% ggplot(aes(x=year, y=pct_yoy_change, group=name, color = name, fill = name)) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() + facet_wrap(~(name)
)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% filter(year <= 2012) %>% filter(gender == "Male") %>% ggplot(aes(x=year, y=pct_yoy_change, group=name, color = name, fill = name)) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() + facet_wrap(~name)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% filter(year <= 2012) %>% filter(gender == "Male") %>% ggplot(aes(x=year, y=pct_yoy_change, group=name, color = name, fill = name)) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() + facet_wrap(~name, ncol = 1)
ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change = ((ageadj_excess - lag(ageadj_excess)) / lag(ageadj_excess)) * 100) %>% ungroup() %>% filter(year <= 2012) %>% filter(gender == "Male") %>% ggplot(aes(x=year, y=pct_yoy_change, group=name, color = name, fill = name)) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() + facet_wrap(~name, ncol = 1, scales = "free")
ageadj %>% filter(gender == "Male") %>% ggplot(aes(x=year, y=ageadj_excess, color=name)) + geom_point() + geom_line() + theme_minimal() + facet_wrap(~name, scales="free_y") + theme(legend.position = "none") + geom_vline(xintercept = 2011)
(200 - 100)/100
((200 - 100)/100)8100
((200 - 100)/100)*100
(100 - 300) / 300
?news
setwd("~/Documents/GitHub/cdc-wonder-mortality/code")
args <- "HTN"
library(tidyverse)
library(haven)
library(splines)source("preprocess-function.R")
project <- args[1]
years <- seq(1999, 2021, 1)
inputfile <- file.path(file.path("../data", project), "export_age_adjusted_deaths_race_gender_year_se.tsv")
inputfile2 <- file.path(file.path("../data", project), "export_deaths_race_gender_age_year.tsv")
#output directory and file
outputdir <- file.path("../results", project, "excess-mortality-by-year")
#table directory
#plot output dir
plotdir <- file.path("../../cdc-wonder-output", project, "excess-mortality-by-year")
#palette of colors
cbb <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
tabledir <- file.path(dirname(plotdir), "tables")
create_output_dir(tabledir)
######## CODE ######
#data <- preprocess_cdc_wonder_file(inputfile)
data <- preprocess_cdc_wonder(inputfile)
cols.to.rename <- c("Crude Rate Lower 95% Confidence Interval", "Crude Rate Upper 95% Confidence Interval", "Crude Rate Standard Error", "Age Adjusted Rate Lower 95% Confidence Interval", "Age Adjusted Rate Upper 95% Confidence Interval", "Age Adjusted Rate Standard Error")
new.col.names <- c("cruderate_ci_lb", "cruderate_ci_ub", "cruderate_se", "ageadjustedrate_ci_lb", "ageadjustedrate_ci_ub", "ageadjustedrate_se")
data <- rename_columns(data, cols.to.rename, new.col.names)
data <- data %>% select(-ends_with("code"))
data <- data %>% type.convert()
#significance level of 0.05
zcrit <- qnorm(0.975)
data <- data %>% filter(is.finite(as.numeric(ageadjustedrate_se))) %>% filter(is.finite(as.numeric(`Age Adjusted Rate`)))
excess_deaths_year <- data %>% group_by(gender, Gender, Year) %>% summarize(diff_black=`Age Adjusted Rate`[Race==1] - `Age Adjusted Rate`[Race==3], diff_black_SE = sqrt(ageadjustedrate_se[Race==1]^2 + ageadjustedrate_se[Race==3]^2), diff_black_lb = diff_black - (diff_black_SE * zcrit), diff_black_ub = diff_black + (diff_black_SE * zcrit), adj_excess_deaths_rate = diff_black, ratio_adj_excess_deaths_rate = `Age Adjusted Rate`[Race==1]/`Age Adjusted Rate`[Race==3], ageadjrate_black=`Age Adjusted Rate`[Race==1], ageadjrate_white = `Age Adjusted Rate`[Race==3]) %>% ungroup()
data
library(tidyverse)
library(haven)
library(splines)
source("preprocess-function.R")
project <- args[1]
years <- seq(1999, 2021, 1)
inputfile <- file.path(file.path("../data", project), "export_age_adjusted_deaths_race_gender_year_se.tsv")
inputfile2 <- file.path(file.path("../data", project), "export_deaths_race_gender_age_year.tsv")
#output directory and file
outputdir <- file.path("../results", project, "excess-mortality-by-year")
#table directory
#plot output dir
plotdir <- file.path("../../cdc-wonder-output", project, "excess-mortality-by-year")
#palette of colors
cbb <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
tabledir <- file.path(dirname(plotdir), "tables")
create_output_dir(tabledir)
######## CODE ######
#data <- preprocess_cdc_wonder_file(inputfile)
data <- preprocess_cdc_wonder(inputfile)
cols.to.rename <- c("Crude Rate Lower 95% Confidence Interval", "Crude Rate Upper 95% Confidence Interval", "Crude Rate Standard Error", "Age Adjusted Rate Lower 95% Confidence Interval", "Age Adjusted Rate Upper 95% Confidence Interval", "Age Adjusted Rate Standard Error")
new.col.names <- c("cruderate_ci_lb", "cruderate_ci_ub", "cruderate_se", "ageadjustedrate_ci_lb", "ageadjustedrate_ci_ub", "ageadjustedrate_se")
data <- rename_columns(data, cols.to.rename, new.col.names)
data <- data %>% select(-ends_with("code"))
data <- data %>% type.convert()
zcrit <- qnorm(0.975)
data <- data %>% filter(is.finite(as.numeric(ageadjustedrate_se))) %>% filter(is.finite(as.numeric(`Age Adjusted Rate`)))
data
excess_deaths_year <- data %>% group_by(gender, Gender, Year) %>% summarize(diff_black=`Age Adjusted Rate`[Race==1] - `Age Adjusted Rate`[Race==3], diff_black_SE = sqrt(ageadjustedrate_se[Race==1]^2 + ageadjustedrate_se[Race==3]^2), diff_black_lb = diff_black - (diff_black_SE * zcrit), diff_black_ub = diff_black + (diff_black_SE * zcrit), adj_excess_deaths_rate = diff_black, ratio_adj_excess_deaths_rate = `Age Adjusted Rate`[Race==1]/`Age Adjusted Rate`[Race==3], ageadjrate_black=`Age Adjusted Rate`[Race==1], ageadjrate_white = `Age Adjusted Rate`[Race==3]) %>% ungroup()
data
excess_deaths_year
excess_deaths_year
#men and women trends
women.excess.age.adj.deaths <- gender_arima_age_adjusted_death(data, excess_deaths_year, "Female", 2015, zcrit)
men.excess.age.adj.deaths <- gender_arima_age_adjusted_death(data, excess_deaths_year, "Male", c(2007, 2011), zcrit)
excess_deaths_year %>% group_by(Gender) %>% summarize(diff_black=mean(diff_black)); data %>% group_by(Race, Gender) %>% summarize(age_adj_rate=mean(`Age Adjusted Rate`)) %>% ungroup()
data2 <- preprocess_cdc_wonder(inputfile2)
colnames(data2)[which(colnames(data2)=="Five-Year Ages")] <- "agegroup"
data2 <- data2 %>% filter(agegroup!="Not Stated") %>% filter(Population!="Not Applicable") %>% select(-ends_with("code")) %>% type.convert(as.is=TRUE)
data2 <- data2 %>% mutate(age=as.integer(factor(agegroup))-1)
data2 <- data2 %>% filter(is.finite(as.numeric(Population))) %>% filter(is.finite(as.numeric(Deaths))) %>% filter(is.finite(as.numeric(`Crude Rate`))) %>% type.convert(as.is=TRUE)
excess_deaths <- data2 %>% group_by(Gender, agegroup, age, Year) %>% summarize(expected_deaths_black = Population[Race==1]*(Deaths[Race==3]/Population[Race==3]), age_specific_rate_ratio=`Crude Rate`[Race==1]/`Crude Rate`[Race==3], observed_rate_black=(Deaths[Race==1]/Population[Race==1])*100000, observed_rate_white=(Deaths[Race==3]/Population[Race==3])*100000, expected_rate_black=(expected_deaths_black/Population[Race==1])*100000, excess_rate_black = observed_rate_black - expected_rate_black, excess_deaths_black = (excess_rate_black * Population[Race==1])/100000, observed_vs_expected_rate_ratio = observed_rate_black / expected_rate_black) %>% ungroup()
excess_deaths %>% group_by(Gender) %>% summarize(excess_deaths_black=sum(excess_deaths_black))
ageadj_mortality_rate <- left_join(excess_deaths_year, women.excess.age.adj.deaths$gender_adj_rate_arima %>% select(-diff_black), by=c("gender"="gender", "Year"="Year", "Gender"="Gender")) %>% left_join(., men.excess.age.adj.deaths$gender_adj_rate_arima %>% select(-diff_black), by=c("gender"="gender", "Year"="Year", "Gender"="Gender")) %>% mutate(pred_diff_black = ifelse(is.na(pred_diff_black.x), pred_diff_black.y, pred_diff_black.x)) %>% select(-c(pred_diff_black.y, pred_diff_black.x))
#Create Tables
aadr_indiv_table <- ageadj_mortality_rate %>% select(Gender, Year, ageadjrate_black, ageadjrate_white) %>%
pivot_longer(cols = starts_with("age"),
names_to = "AgeType",
values_to = "Value") %>%
pivot_wider(names_from = c(AgeType, Gender),
values_from = Value) %>%
rename_with(~ str_replace_all(.x, "ageadjrate_", ""),
starts_with("age"))
excess_aamr_table <- ageadj_mortality_rate %>% mutate(mrr = ageadjrate_black / ageadjrate_white) %>% select(mrr, diff_black, Gender, Year) %>% magrittr::set_colnames(c("mrr", "excess_aamr", "Gender", "Year")) %>%
pivot_longer(cols = c(excess_aamr, mrr),
names_to = "Metric",
values_to = "Value") %>%
pivot_wider(names_from = c(Gender, Metric),
values_from = Value) %>%
select(Year, ends_with("excess_aamr"), ends_with("mrr"))
write_csv(aadr_indiv_table, file = file.path(tabledir, "aadr_race_sex_year.csv"))
write_csv(excess_aamr_table, file = file.path(tabledir, "excess_aadr_year.csv"))
#GRAPHICAL COMPONENT
sizing_theme <- theme(axis.text = element_text(size=12), axis.title=element_text(size=16), legend.text=element_text(size=12), legend.title=element_text(size=16), plot.title=element_text(size=18, hjust=0.5))
year_label <- scale_x_continuous(breaks=years, labels= function(x) ifelse(x %% 2 == 1, x, ""))
panel_theme <- theme_bw() + theme(panel.grid.major.x = element_blank(), panel.grid.minor=element_blank())
indiv_ageadj_rate_fig <- ageadj_mortality_rate %>% select(Gender, Year, ageadjrate_black, ageadjrate_white) %>% ungroup() %>% pivot_longer(-c(Gender, Year)) %>% ggplot(aes(x=Year, y=value, color=name)) + geom_line(size = 0.5) + ylab("Age Adjusted Mortality Rate") + scale_color_manual(values = c("ageadjrate_black"="maroon", "ageadjrate_white"="navy"), labels = c("ageadjrate_black" = "Black", "ageadjrate_white" = "White")) + panel_theme + facet_wrap(~Gender, nrow=1) + xlab("Year") + geom_point(size = 2.5) + year_label + theme(legend.title = element_blank())
#PRED ARIMA
#Don't write this out for now
excess_death_rate_arima_fig <- ggplot() + geom_line(data=ageadj_mortality_rate, aes(x=Year, y=pred_diff_black, color=Gender), size=1) + geom_line(data=ageadj_mortality_rate %>% filter(Year>=2019) %>% mutate(diff_black=ifelse(Year==2019, pred_diff_black, diff_black)), aes(x=Year, y=diff_black, color=Gender), linetype="dashed", size=1) + geom_hline(yintercept=0, linetype="dotted") + year_label + panel_theme + geom_point(data = ageadj_mortality_rate %>% filter(Year %in% c(2015) & Gender == "Female" | Year %in% c(2007, 2011) & Gender == "Male"), aes(x=Year, y=pred_diff_black, color=Gender, shape=Gender), size=3.75) + scale_color_manual(values=c("maroon", "navy")) + sizing_theme  + ggtitle("Excess Age Adjusted Mortality Rate") + scale_y_continuous(breaks = scales::pretty_breaks(n = 8)) + ylab("Excess Deaths per 100K Individuals") + xlab("Year")
#NO PRED ARIMA, just empirical data
excess_death_rate_fig <- ggplot(data=ageadj_mortality_rate, aes(x=Year, y=diff_black, color=Gender)) + geom_line(size=1) + geom_point(size = 3) + geom_hline(yintercept=0, linetype="dotted") + year_label + panel_theme  + scale_color_manual(values=c("maroon", "navy")) + sizing_theme  + ggtitle("Excess Age Adjusted Mortality Rate") + scale_y_continuous(breaks = scales::pretty_breaks(n = 8)) + ylab("Excess Deaths per 100K Individuals") + xlab("Year")
mortality_rate_ratio_fig <- excess_deaths_year %>% ggplot(aes(x=Year, y=ratio_adj_excess_deaths_rate, color=Gender)) + geom_line(size=1.25) + panel_theme + sizing_theme + year_label + ylab("Mortality Rate Ratio (Black / White)") + scale_y_continuous(breaks = scales::pretty_breaks(n=8)) + geom_hline(yintercept=1, linetype="dashed") + scale_color_manual(values=c("maroon", "navy")) + ggtitle("Age Adjusted Mortality Rate Ratio")
edy <- excess_deaths_year %>% select(Gender, ageadjrate_white, ageadjrate_black, Year) %>% pivot_longer(-c(Gender, Year)) %>% mutate(Race=gsub(".*_", "", name) %>% str_to_title(.)) %>% select(-name)
age_adj_deaths_race_sex_fig <-  edy %>% ggplot(aes(x=Year, y=value, color=Race, shape=Gender, linetype=Gender)) + geom_line(size=0.5) + geom_point(size=2) + panel_theme + sizing_theme + year_label + scale_y_continuous(breaks=scales::pretty_breaks(n=8)) + ylab("Mortality Rate per 100K Individuals") + ggtitle("Age Adjusted Mortality Rate") + scale_color_manual(values=cbb[1:2])
edb <- excess_deaths %>% group_by(Year, Gender) %>% summarize(excess_deaths_black=sum(excess_deaths_black))
mortality_excess_numbers_fig <-  edb %>% ggplot(aes(x=Year, y=excess_deaths_black, color=Gender)) + geom_point() + geom_line() + panel_theme + sizing_theme + year_label + scale_color_manual(name="", values=c("maroon", "navy")) + scale_y_continuous(limits=c(0,max(edb$excess_deaths_black, na.rm=TRUE)*1.15), breaks=seq(0,max(edb$excess_deaths_black, na.rm=TRUE)*1.15, 1000)) + ggtitle("Estimated Excess Deaths Among the Black Population") + ylab("Number of Deaths")
edb
cumedb <- excess_deaths %>% group_by(Year, Gender) %>% summarize(excess_deaths_black=sum(excess_deaths_black)) %>% ungroup() %>% group_by(Gender) %>% arrange(Year) %>% summarize(excess_deaths_black = cumsum(excess_deaths_black), Year=Year) %>% ungroup() %>% mutate(edb=excess_deaths_black/1000)
cumedb
cumedb %>% arrange(desc(edb))
cumedb %>% arrange(desc(edb)) %>% filter(Year == 2022)
cumedb %>% arrange(desc(edb)) %>% filter(Year == 2022) %>% pull(excess_deaths_black)
cumedb %>% arrange(desc(edb)) %>% filter(Year == 2022) %>% pull(excess_deaths_black) %>% sum()
source("preprocess-function.R")
project <- args[1]
basedir <- file.path("../results", project)
file.path(basedir, "excess-mortality-by-year", "mortality_rate_ratio.rds") %>% readRDS()
file.path(basedir, "excess-mortality-by-year", "mortality_rate_ratio.rds")
file.path(basedir, "excess-mortality-by-year", "mortality_rate_ratio_fig.rds") %>% readRDS()
aadr_indiv <- file.path(basedir, "excess-mortality-by-year", "indiv_ageadj_rate_fig.rds") %>% readRDS()
aadr_indiv
aadr_indiv <- file.path(basedir, "excess-mortality-by-year", "age_adj_deaths_race_sex_fig.rds") %>% readRDS()
aadr_indiv
file.path(basedir, "excess-mortality-by-year", "excess_death_rate_fig.rds") %>% readRDS()
file.path(basedir, "life-years-lost-by-year", "excess_pll_fig.rds") %>% readRDS()
aadr_indiv
aadr_indiv + ylim(0, 95)
aadr_indiv + scale_y_continuous(breaks = scales::pretty_breaks(n = 10), limits = c(0, 95))
pll
pll <- file.path(basedir, "life-years-lost-by-year", "excess_pll_fig.rds") %>% readRDS()
pll
pll + scale_y_continuous(breaks = scales::pretty_breaks(n = 10), limits = c(0, 160000))
pll + scale_y_continuous(breaks = scales::pretty_breaks(n = 10), limits = c(0, 180000))
pll + scale_y_continuous(breaks = scales::pretty_breaks(n = 10), limits = c(0, 170000))
cowplot::plot_grid(aadr_indiv, mrr, excess_aadr, pll, nrow = 2, ncol = 2, labels = c("A", "B", "C", "D"), label_size = 25)
project <- args[1]
basedir <- file.path("../results", project)
#panel a
aadr_indiv <- file.path(basedir, "excess-mortality-by-year", "age_adj_deaths_race_sex_fig.rds") %>% readRDS()
#panel b
mrr <- file.path(basedir, "excess-mortality-by-year", "mortality_rate_ratio_fig.rds") %>% readRDS()
#panel c (no longer uses ARIMA to smooth predictions)
excess_aadr <- file.path(basedir, "excess-mortality-by-year", "excess_death_rate_fig.rds") %>% readRDS()
#panel d
pll <- file.path(basedir, "life-years-lost-by-year", "excess_pll_fig.rds") %>% readRDS()
if (project == "HTN"){
aadr_indiv <- aadr_indiv + scale_y_continuous(breaks = scales::pretty_breaks(n = 10), limits = c(0, 95))
pll <- pll + scale_y_continuous(breaks = scales::pretty_breaks(n = 10), limits = c(0, 170000))
}
cowplot::plot_grid(aadr_indiv, mrr, excess_aadr, pll, nrow = 2, ncol = 2, labels = c("A", "B", "C", "D"), label_size = 25)
cowplot::plot_grid(aadr_indiv, mrr, excess_aadr, pll, nrow = 2, ncol = 2, labels = c("A", "B", "C", "D"), label_size = 25) %>% ggsave(filename = file.path("../../cdc-wonder-output/figs", project, "ACC.pdf"), plot = ., units = "in", device = cairo_pdf, width = 20, height = 16)
gc()
cowplot::plot_grid(aadr_indiv, mrr, excess_aadr, pll, nrow = 2, ncol = 2, labels = c("A", "B", "C", "D"), label_size = 25) %>% ggsave(filename = file.path("../../cdc-wonder-output/figs", project, "ACC.pdf"), plot = ., units = "in", device = cairo_pdf, width = 20, height = 16)
