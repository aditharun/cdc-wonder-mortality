df$name <- str_wrap(df$name, width = 25)
df$type <- factor(df$type, levels = c("underlying_all", "contributing_all", "underlying", "contributing"))
# Separate plots for each facet
plot1 <- ggplot(df %>% filter(type == "contributing_all"), aes(x = Year, y = value), color = "black") +
geom_line(size = 1) +
theme_minimal() +
labs(title = "Contributing Cause") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_blank()) + scale_y_continuous(breaks = seq(350, 550, 50), limits = c(350, 550)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 15)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023)) + theme(plot.margin = margin(.1,.1,.1,.1)) +geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)
plot2 <- ggplot(df %>% filter(type == "contributing"), aes(x = Year, y = value, color = name)) +
geom_line(size = 1) + theme_minimal() +
labs(title = "") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_text(size = 10, angle = 30, hjust = 1)) + scale_y_continuous(breaks = seq(0, 250, 50), limits = c(0, 250)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 15)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023), labels = (seq(1999,2023,1) %>% lapply(., function(x) ifelse(x %% 5 == 0, x, "")) %>% unlist())) + theme(plot.margin = margin(.1,.1,.1,.1)) + geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)  + scale_color_brewer(palette = "Paired") + theme(
legend.title = element_blank(),
legend.key.size = unit(0.8, "cm"),
legend.text = element_text(size = 11)
)
plot3 <- ggplot(df %>% filter(type == "underlying_all"), aes(x = Year, y = value), color = "black") +
geom_line(size = 1) +
theme_minimal() +
labs(title = "Underlying Cause") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_blank()) + scale_y_continuous(breaks = seq(200, 350, 50), limits = c(200, 350)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 15)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023)) + theme(plot.margin = margin(.1,.1,.1,.1)) + geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)
plot4 <- ggplot(df %>% filter(type == "underlying"), aes(x = Year, y = value, color = name)) +
geom_line(size = 1) + theme_minimal() +
labs(title = "") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_text(size = 10, angle = 30, hjust = 1)) + scale_y_continuous(breaks = seq(0, 200, 50), limits = c(0, 200)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 15)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023), labels = (seq(1999,2023,1) %>% lapply(., function(x) ifelse(x %% 5 == 0, x, "")) %>% unlist())) + theme(plot.margin = margin(.1,.1,.1,.1)) + theme(legend.position = "none") +
geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75) + scale_color_brewer(palette = "Paired")
# Combine with relative heights
plot3 + plot1 + plot4 + plot2 + plot_layout(widths = c(1, 1), heights = c(1,4.5))
plot1 <- ggplot(df %>% filter(type == "contributing_all"), aes(x = Year, y = value), color = "black") +
geom_line(size = 1) +
theme_minimal() +
labs(title = "Contributing Cause") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_blank()) + scale_y_continuous(breaks = seq(350, 550, 50), limits = c(350, 550)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 15)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023)) + theme(plot.margin = margin(.1,.1,.1,.1)) +geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)
plot2 <- ggplot(df %>% filter(type == "contributing"), aes(x = Year, y = value, color = name)) +
geom_line(size = 1) + theme_minimal() +
labs(title = "") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_text(size = 10, angle = 30, hjust = 1)) + scale_y_continuous(breaks = seq(0, 250, 50), limits = c(0, 250)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 15)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023), labels = (seq(1999,2023,1) %>% lapply(., function(x) ifelse(x %% 5 == 0, x, "")) %>% unlist())) + theme(plot.margin = margin(.1,.1,.1,.1)) + geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)  + scale_color_brewer(palette = "Paired") + theme(
legend.title = element_blank(),
legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 11)
)
plot3 <- ggplot(df %>% filter(type == "underlying_all"), aes(x = Year, y = value), color = "black") +
geom_line(size = 1) +
theme_minimal() +
labs(title = "Underlying Cause") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_blank()) + scale_y_continuous(breaks = seq(200, 350, 50), limits = c(200, 350)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 15)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023)) + theme(plot.margin = margin(.1,.1,.1,.1)) + geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)
plot4 <- ggplot(df %>% filter(type == "underlying"), aes(x = Year, y = value, color = name)) +
geom_line(size = 1) + theme_minimal() +
labs(title = "") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_text(size = 10, angle = 30, hjust = 1)) + scale_y_continuous(breaks = seq(0, 200, 50), limits = c(0, 200)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 15)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023), labels = (seq(1999,2023,1) %>% lapply(., function(x) ifelse(x %% 5 == 0, x, "")) %>% unlist())) + theme(plot.margin = margin(.1,.1,.1,.1)) + theme(legend.position = "none") +
geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75) + scale_color_brewer(palette = "Paired")
# Combine with relative heights
plot3 + plot1 + plot4 + plot2 + plot_layout(widths = c(1, 1), heights = c(1,4.5))
filepath <- "~/Downloads/yan-et-al-sheet.xlsx"
underlying <- readxl::read_excel(filepath, sheet = 1)
contributing <- readxl::read_excel(filepath, sheet = 2)
df <- rbind(underlying %>% pivot_longer(-Year) %>% mutate(type = "underlying"),
contributing %>% pivot_longer(-Year) %>% mutate(type = "contributing")) %>% as_tibble()
df2 <- df %>% filter(name != "Diseases of the circulatory system")
df_all <- df %>% filter(name == "Diseases of the circulatory system")
df_all <- df_all %>% mutate(type = ifelse(type == "underlying", "underlying_all", "contributing_all"))
df <- rbind(df2, df_all)
df <- df %>%
group_by(name) %>%
mutate(mean_value = mean(value)) %>%
ungroup() %>%
mutate(name = factor(
name,
levels = unique(name[order(-mean_value)])
))
df$name <- str_wrap(df$name, width = 25)
df$type <- factor(df$type, levels = c("underlying_all", "contributing_all", "underlying", "contributing"))
# Separate plots for each facet
plot1 <- ggplot(df %>% filter(type == "contributing_all"), aes(x = Year, y = value), color = "black") +
geom_line(size = 1) +
theme_minimal() +
labs(title = "Contributing Cause") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_blank()) + scale_y_continuous(breaks = seq(350, 550, 50), limits = c(350, 550)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 15)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023)) + theme(plot.margin = margin(.1,.1,.1,.1)) +geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)
plot2 <- ggplot(df %>% filter(type == "contributing"), aes(x = Year, y = value, color = name)) +
geom_line(size = 1) + theme_minimal() +
labs(title = "") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_text(size = 10, angle = 30, hjust = 1)) + scale_y_continuous(breaks = seq(0, 250, 50), limits = c(0, 250)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 11)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023), labels = (seq(1999,2023,1) %>% lapply(., function(x) ifelse(x %% 5 == 0, x, "")) %>% unlist())) + theme(plot.margin = margin(.1,.1,.1,.1)) + geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)  + scale_color_brewer(palette = "Paired") + theme(
legend.title = element_blank(),
legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 11)
)
plot3 <- ggplot(df %>% filter(type == "underlying_all"), aes(x = Year, y = value), color = "black") +
geom_line(size = 1) +
theme_minimal() +
labs(title = "Underlying Cause") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_blank()) + scale_y_continuous(breaks = seq(200, 350, 50), limits = c(200, 350)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 11)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023)) + theme(plot.margin = margin(.1,.1,.1,.1)) + geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)
plot4 <- ggplot(df %>% filter(type == "underlying"), aes(x = Year, y = value, color = name)) +
geom_line(size = 1) + theme_minimal() +
labs(title = "") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_text(size = 10, angle = 30, hjust = 1)) + scale_y_continuous(breaks = seq(0, 200, 50), limits = c(0, 200)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 15)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023), labels = (seq(1999,2023,1) %>% lapply(., function(x) ifelse(x %% 5 == 0, x, "")) %>% unlist())) + theme(plot.margin = margin(.1,.1,.1,.1)) + theme(legend.position = "none") +
geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75) + scale_color_brewer(palette = "Paired")
# Combine with relative heights
plot3 + plot1 + plot4 + plot2 + plot_layout(widths = c(1, 1), heights = c(1,4.5))
brewer.pal(9, "Dark2")
Rcolorbrewer::brewer.pal(9, "Dark2")
RColorBrewer::brewer.pal(9, "Dark2")
RColorBrewer::brewer.pal(8, "Dark2")
c(RColorBrewer::brewer.pal(9, "Dark2"), "#117733")
c(RColorBrewer::brewer.pal(8, "Dark2"), "#117733")
stringcolors <- c(RColorBrewer::brewer.pal(8, "Dark2"), "#117733")
# Separate plots for each facet
plot1 <- ggplot(df %>% filter(type == "contributing_all"), aes(x = Year, y = value), color = "black") +
geom_line(size = 1) +
theme_minimal() +
labs(title = "Contributing Cause") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_blank()) + scale_y_continuous(breaks = seq(350, 550, 50), limits = c(350, 550)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 11)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023)) + theme(plot.margin = margin(.1,.1,.1,.1)) +geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)
plot2 <- ggplot(df %>% filter(type == "contributing"), aes(x = Year, y = value, color = name)) +
geom_line(size = 1) + theme_minimal() +
labs(title = "") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_text(size = 10, angle = 30, hjust = 1)) + scale_y_continuous(breaks = seq(0, 250, 50), limits = c(0, 250)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 11)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023), labels = (seq(1999,2023,1) %>% lapply(., function(x) ifelse(x %% 5 == 0, x, "")) %>% unlist())) + theme(plot.margin = margin(.1,.1,.1,.1)) + geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)  + scale_color_manual(values = stringcolors) + theme(
legend.title = element_blank(),
legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 11)
)
plot3 <- ggplot(df %>% filter(type == "underlying_all"), aes(x = Year, y = value), color = "black") +
geom_line(size = 1) +
theme_minimal() +
labs(title = "Underlying Cause") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_blank()) + scale_y_continuous(breaks = seq(200, 350, 50), limits = c(200, 350)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 11)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023)) + theme(plot.margin = margin(.1,.1,.1,.1)) + geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)
plot4 <- ggplot(df %>% filter(type == "underlying"), aes(x = Year, y = value, color = name)) +
geom_line(size = 1) + theme_minimal() +
labs(title = "") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_text(size = 10, angle = 30, hjust = 1)) + scale_y_continuous(breaks = seq(0, 200, 50), limits = c(0, 200)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 15)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023), labels = (seq(1999,2023,1) %>% lapply(., function(x) ifelse(x %% 5 == 0, x, "")) %>% unlist())) + theme(plot.margin = margin(.1,.1,.1,.1)) + theme(legend.position = "none") +
geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75) + scale_color_manual(values = stringcolors)
# Combine with relative heights
plot3 + plot1 + plot4 + plot2 + plot_layout(widths = c(1, 1), heights = c(1,4.5))
# Separate plots for each facet
plot1 <- ggplot(df %>% filter(type == "contributing_all"), aes(x = Year, y = value), color = "black") +
geom_line(size = 1) +
theme_minimal() +
labs(title = "Contributing Cause") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_blank()) + scale_y_continuous(breaks = seq(200, 550, 100), limits = c(350, 550)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 11)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023)) + theme(plot.margin = margin(.1,.1,.1,.1)) +geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)
plot2 <- ggplot(df %>% filter(type == "contributing"), aes(x = Year, y = value, color = name)) +
geom_line(size = 1) + theme_minimal() +
labs(title = "") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_text(size = 10, angle = 30, hjust = 1)) + scale_y_continuous(breaks = seq(0, 250, 50), limits = c(0, 250)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 11)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023), labels = (seq(1999,2023,1) %>% lapply(., function(x) ifelse(x %% 5 == 0, x, "")) %>% unlist())) + theme(plot.margin = margin(.1,.1,.1,.1)) + geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)  + scale_color_manual(values = stringcolors) + theme(
legend.title = element_blank(),
legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 11)
)
plot3 <- ggplot(df %>% filter(type == "underlying_all"), aes(x = Year, y = value), color = "black") +
geom_line(size = 1) +
theme_minimal() +
labs(title = "Underlying Cause") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_blank()) + scale_y_continuous(breaks = seq(200, 550, 100), limits = c(200, 550)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 11)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023)) + theme(plot.margin = margin(.1,.1,.1,.1)) + geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)
plot4 <- ggplot(df %>% filter(type == "underlying"), aes(x = Year, y = value, color = name)) +
geom_line(size = 1) + theme_minimal() +
labs(title = "") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_text(size = 10, angle = 30, hjust = 1)) + scale_y_continuous(breaks = seq(0, 250, 50), limits = c(0, 250)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 15)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023), labels = (seq(1999,2023,1) %>% lapply(., function(x) ifelse(x %% 5 == 0, x, "")) %>% unlist())) + theme(plot.margin = margin(.1,.1,.1,.1)) + theme(legend.position = "none") +
geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75) + scale_color_manual(values = stringcolors)
# Combine with relative heights
plot3 + plot1 + plot4 + plot2 + plot_layout(widths = c(1, 1), heights = c(1,4.5))
ggplot(df %>% filter(type == "contributing_all"), aes(x = Year, y = value), color = "black") +
geom_line(size = 1) +
theme_minimal() +
labs(title = "Contributing Cause") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_blank()) + scale_y_continuous(breaks = seq(200, 550, 100), limits = c(350, 550)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 11)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023)) + theme(plot.margin = margin(.1,.1,.1,.1)) +geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)
ggplot(df %>% filter(type == "contributing_all"), aes(x = Year, y = value), color = "black") +
geom_line(size = 1) +
theme_minimal() +
labs(title = "Contributing Cause") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_blank()) + scale_y_continuous(breaks = seq(200, 550, 100), limits = c(200, 550)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 11)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023)) + theme(plot.margin = margin(.1,.1,.1,.1)) +geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)
plot1 <- ggplot(df %>% filter(type == "contributing_all"), aes(x = Year, y = value), color = "black") +
geom_line(size = 1) +
theme_minimal() +
labs(title = "Contributing Cause") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_blank()) + scale_y_continuous(breaks = seq(200, 550, 100), limits = c(200, 550)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 11)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023)) + theme(plot.margin = margin(.1,.1,.1,.1)) +geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)
plot2 <- ggplot(df %>% filter(type == "contributing"), aes(x = Year, y = value, color = name)) +
geom_line(size = 1) + theme_minimal() +
labs(title = "") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_text(size = 10, angle = 30, hjust = 1)) + scale_y_continuous(breaks = seq(0, 250, 50), limits = c(0, 250)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 11)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023), labels = (seq(1999,2023,1) %>% lapply(., function(x) ifelse(x %% 5 == 0, x, "")) %>% unlist())) + theme(plot.margin = margin(.1,.1,.1,.1)) + geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)  + scale_color_manual(values = stringcolors) + theme(
legend.title = element_blank(),
legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 11)
)
plot3 <- ggplot(df %>% filter(type == "underlying_all"), aes(x = Year, y = value), color = "black") +
geom_line(size = 1) +
theme_minimal() +
labs(title = "Underlying Cause") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_blank()) + scale_y_continuous(breaks = seq(200, 550, 100), limits = c(200, 550)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 11)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023)) + theme(plot.margin = margin(.1,.1,.1,.1)) + geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)
plot4 <- ggplot(df %>% filter(type == "underlying"), aes(x = Year, y = value, color = name)) +
geom_line(size = 1) + theme_minimal() +
labs(title = "") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_text(size = 10, angle = 30, hjust = 1)) + scale_y_continuous(breaks = seq(0, 250, 50), limits = c(0, 250)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 15)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023), labels = (seq(1999,2023,1) %>% lapply(., function(x) ifelse(x %% 5 == 0, x, "")) %>% unlist())) + theme(plot.margin = margin(.1,.1,.1,.1)) + theme(legend.position = "none") +
geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75) + scale_color_manual(values = stringcolors)
# Combine with relative heights
plot3 + plot1 + plot4 + plot2 + plot_layout(widths = c(1, 1), heights = c(1,4.5))
plot3 + plot1 + plot4 + plot2 + plot_layout(widths = c(1, 1.2), heights = c(1,4.5))
plot3 + plot1 + plot4 + plot2 + plot_layout(widths = c(1, 1.05), heights = c(1,4.5))
# Separate plots for each facet
plot1 <- ggplot(df %>% filter(type == "contributing_all"), aes(x = Year, y = value), color = "black") +
geom_line(size = 1) +
theme_minimal() +
labs(title = "Contributing Cause") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_blank()) + scale_y_continuous(breaks = seq(200, 550, 100), limits = c(200, 550)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 13)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023)) + theme(plot.margin = margin(.1,.1,.1,.1)) +geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)
plot2 <- ggplot(df %>% filter(type == "contributing"), aes(x = Year, y = value, color = name)) +
geom_line(size = 1) + theme_minimal() +
labs(title = "") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_text(size = 10, angle = 30, hjust = 1)) + scale_y_continuous(breaks = seq(0, 250, 50), limits = c(0, 250)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 11)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023), labels = (seq(1999,2023,1) %>% lapply(., function(x) ifelse(x %% 5 == 0, x, "")) %>% unlist())) + theme(plot.margin = margin(.1,.1,.1,.1)) + geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)  + scale_color_manual(values = stringcolors) + theme(
legend.title = element_blank(),
legend.key.size = unit(1, "cm"),
legend.text = element_text(size = 11)
)
plot3 <- ggplot(df %>% filter(type == "underlying_all"), aes(x = Year, y = value), color = "black") +
geom_line(size = 1) +
theme_minimal() +
labs(title = "Underlying Cause") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_blank()) + scale_y_continuous(breaks = seq(200, 550, 100), limits = c(200, 550)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 13)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023)) + theme(plot.margin = margin(.1,.1,.1,.1)) + geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75)
plot4 <- ggplot(df %>% filter(type == "underlying"), aes(x = Year, y = value, color = name)) +
geom_line(size = 1) + theme_minimal() +
labs(title = "") + xlab("") + theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),axis.ticks.y = element_line(color = "black"), axis.ticks.x = element_line(color = "black"), axis.text.x = element_text(size = 10, angle = 30, hjust = 1)) + scale_y_continuous(breaks = seq(0, 250, 50), limits = c(0, 250)) + ylab("AADR") + theme(axis.text.y = element_text(size = 11), axis.title.y = element_text(size = 15)) + theme(plot.title = element_text(hjust = 0.5, size = 15)) + scale_x_continuous(breaks = seq(1999, 2023, 1), limits = c(1999, 2023), labels = (seq(1999,2023,1) %>% lapply(., function(x) ifelse(x %% 5 == 0, x, "")) %>% unlist())) + theme(plot.margin = margin(.1,.1,.1,.1)) + theme(legend.position = "none") +
geom_vline(xintercept = 2020, color = "grey70", linetype = "dashed", size = 0.75) + scale_color_manual(values = stringcolors)
# Combine with relative heights
plot3 + plot1 + plot4 + plot2 + plot_layout(widths = c(1, 1.05), heights = c(1,4.5))
plot3 + plot1 + plot4 + plot2 + plot_layout(widths = c(1, 1.05), heights = c(1,4.5)) + plot_annotation(
title = "Global Title for All Plots",
theme = theme(
plot.title = element_text(size = 18, hjust = 0.5)))
plot3 + plot1 + plot4 + plot2 + plot_layout(widths = c(1, 1.05), heights = c(1,4.5)) + plot_annotation(
title = "Death Rates by Cardiovascular Cause (1999-2023)",
theme = theme(
plot.title = element_text(size = 18, hjust = 0.3)))
plot <- plot3 + plot1 + plot4 + plot2 + plot_layout(widths = c(1, 1.05), heights = c(1,4.5)) + plot_annotation(
title = "Death Rates by Cardiovascular Cause (1999-2023)",
theme = theme(
plot.title = element_text(size = 18, hjust = 0.3)))
ggsave(filename = "~/Downloads/yanetal-fig1.pdf", plot = plot, device = cairo_pdf, width = 12, height = 10, units = "in")
ggsave(filename = "~/Downloads/yanetal-fig1.pdf", plot = plot, device = cairo_pdf, width = 10, height = 8, units = "in")
library(tidyverse)
df <- data.frame(x = 2, y = 3); df2 <- data.frame(x = 4, y = 6); df3 <- data.frame(x = 6, y = 9)
rbind(df, df2, df3)
setwd("~/Documents/GitHub/cdc-wonder-mortality/code")
library(tidyverse)
library(optparse)
data_folder_2023 <- file.path("../raw-data", input_name, "2023")
input_name <- "cvd"
input_name <- "cvd"
data_folder_2023 <- file.path("../raw-data", input_name, "2023")
corrected_data_2023_file <- file.path("../raw-data", input_name, paste0("corrected-2023-data-", input_name, ".csv"))
newdata <- lapply(list.files(data_folder_2023, full.names = TRUE), function(x) readTextFile(x))
readTextFile <- function(filepath){
lines <- readLines(filepath)
index <- which(lines == '"---"')
if (length(index) > 0) {
lines <- lines[1:(index[1] - 1)]
}
list_of_vectors <- lapply(lines, function(x) unlist(strsplit(x, "\t")))
special_encoding <- which(is.na(list_of_vectors))
if (length(special_encoding) > 0){
for (idx in special_encoding){
Encoding(lines[idx]) <- "latin1"
}
list_of_vectors <- lapply(lines, function(x) unlist(strsplit(x, "\t")))
}
df <- do.call(rbind, lapply(list_of_vectors, function(x) as.data.frame(t(x))))
df <- df %>% as_tibble()
df[,1:11] <- lapply(df[,1:11], function(x) gsub('\\"', "", x))
colnames(df) <- df[1,]
df <- df[-1,]
df <- df %>% select(-Notes)
df
}
newdata <- lapply(list.files(data_folder_2023, full.names = TRUE), function(x) readTextFile(x))
newdata
newdata <- do.call(rbind, newdata)
newdata
which(colnames(newdata)=="Sex")
colnames(newdata)[which(colnames(newdata)=="Sex")] <- "Gender"
colnames(newdata)[(which(colnames(newdata)=="Sex"))+1] <- "Gender Code"
newdata
newdata
(which(colnames(newdata)=="Sex"))+1
(which(colnames(newdata)=="Sex"))+1
(which(colnames(newdata)=="Sex"))
newdata <- lapply(list.files(data_folder_2023, full.names = TRUE), function(x) readTextFile(x))
newdata <- do.call(rbind, newdata)
colnames(newdata)[which(colnames(newdata)=="Sex")] <- "Gender"
colnames(newdata)[(which(colnames(newdata)=="Gender") + 1)] <- "Gender Code"
newdata
newdata <- lapply(list.files(data_folder_2023, full.names = TRUE), function(x) readTextFile(x))
newdata <- do.call(rbind, newdata)
colnames(newdata)[which(colnames(newdata)=="Sex")] <- "Gender"
colnames(newdata)[(which(colnames(newdata)=="Gender") + 1)] <- "Gender Code"
newdata <- newdata %>% mutate(Race = ifelse(`Single Race 6` %in% c("Asian", "Native Hawaiian or Other Pacific Islander"), "Asian or Pacific Islander", `Single Race 6`))
newdata <- newdata %>% mutate(Deaths = ifelse(Deaths == "Suppressed", sample(c(1:9), size = sum(Deaths == "Suppressed"), replace = TRUE), Deaths)) %>% mutate(Population = ifelse(Population == "Suppressed", sample(c(1:9), size = sum(Population == "Suppressed"), replace = TRUE), Population)) %>% mutate(Population = ifelse(Population == "Unreliable", sample(c(11:19), size = sum(Population == "Unreliable"), replace = TRUE), Population)) %>% filter(Population != "Not Applicable") %>% type.convert(as.is = TRUE) %>% select(-c(`Single Race 6`, `Single Race 6 Code`)) %>% group_by_at(vars(-Deaths, -Population, -`Crude Rate`)) %>% summarize(Deaths = sum(Deaths), Population = sum(Population), `Crude Rate` = Deaths / Population) %>% ungroup()
newdata %>% group_by(Race) %>% summarize(n = sum(Deaths)) %>% mutate(frac = n / sum(n)) %>% mutate(pct = round(frac*100,2))
other <- newdata %>% filter(Race== "More than one race")
other
2023_affected_fraction <- newdata %>% group_by(Race) %>% summarize(n = sum(Deaths)) %>% mutate(frac = n / sum(n)) %>% mutate(pct = round(frac*100,2)) %>% filter(Race == "More than one race") %>% pull(pct)
2023_affected_fraction <- newdata %>% group_by(Race) %>% summarize(n = sum(Deaths)) %>% mutate(frac = n / sum(n)) %>% mutate(pct = round(frac*100,2)) %>% filter(Race == "More than one race") %>% pull(pct)
affected_fraction_2023 <- newdata %>% group_by(Race) %>% summarize(n = sum(Deaths)) %>% mutate(frac = n / sum(n)) %>% mutate(pct = round(frac*100,2)) %>% filter(Race == "More than one race") %>% pull(pct)
affected_fraction_2023
affected_fraction_2021 <-
affected_fraction_2023
affected_fraction_2022 <-
affected_fraction_2023
c(affected_fraction_2021, affected_fraction_2022, affected_fraction_2023)
paste0(c(affected_fraction_2021, affected_fraction_2022, affected_fraction_2023), sep = " ")
v
paste0(c(affected_fraction_2021, affected_fraction_2022, affected_fraction_2023), collapse = " ")
paste0(c("2021: ", affected_fraction_2021, "2022: ", affected_fraction_2022, "2023: ", affected_fraction_2023), collapse = " ")
paste0(c("2021:", affected_fraction_2021, "2022:", affected_fraction_2022, "2023:", affected_fraction_2023), collapse = " ")
paste0(c("Percent of death certificates affected by race correction each year for", input_name, "--", "2021:", affected_fraction_2021, "2022:", affected_fraction_2022, "2023:", affected_fraction_2023), collapse = " ")
v
paste0(c("% of death certificates affected by race correction each year for", input_name, "--", "2021:", affected_fraction_2021, "2022:", affected_fraction_2022, "2023:", affected_fraction_2023), collapse = " ")
data_folder_2023
paste0("../raw-data", input_name, "affected-counts.txt")
paste0("../raw-data", input_name, "/affected-counts.txt")
paste0("../raw-data/", input_name, "/affected-counts.txt")
library(tidyverse)
library(cowplot)
project <- "cvd"
first_year <- 2000
years <- seq(first_year, 2023, 1)
year_label <- scale_x_continuous(breaks=years, labels= function(x) ifelse(x %% 2 == 0, x, ""))
figdir <- file.path("../../cdc-wonder-output/figs", project)
create_output_dir(figdir)
source("preprocess-function.R")
years <- seq(first_year, 2023, 1)
year_label <- scale_x_continuous(breaks=years, labels= function(x) ifelse(x %% 2 == 0, x, ""))
figdir <- file.path("../../cdc-wonder-output/figs", project)
create_output_dir(figdir)
emby <- file.path("../results", project, "excess-mortality-by-year")
emba <- file.path("../results", project, "excess-mortality-by-age")
lylba <- file.path("../results", project, "life-years-lost-by-age")
lylby <- file.path("../results", project, "life-years-lost-by-year")
colorpal <- ggsci::pal_jama("default")(7)
colorcorrect <- function(bpal = colorpal[c(4,6)]){
scale_color_manual(values = bpal[1:2])
}
#All age adjusted derivatives (raw, -, /)
fig1 <- plot_grid(readRDS(file.path(emby, "age_adj_deaths_race_sex_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)),
readRDS(file.path(emby, "excess_death_rate_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + colorcorrect(),
readRDS(file.path(emby, "mortality_rate_ratio_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + colorcorrect() + scale_y_continuous(breaks = scales::pretty_breaks(n = 8)),
readRDS(file.path(lylby, "excess_pll_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + colorcorrect(),
nrow = 2, labels = c("A", "B", "C", "D"), label_size = 25)
fig1
emby <- file.path("../results", project, "excess-mortality-by-year")
emba <- file.path("../results", project, "excess-mortality-by-age")
lylba <- file.path("../results", project, "life-years-lost-by-age")
lylby <- file.path("../results", project, "life-years-lost-by-year")
colorpal <- ggsci::pal_jama("default")(7)
colorcorrect <- function(bpal = colorpal[c(4,6)]){
scale_color_manual(values = bpal[1:2])
}
fig_jacc <- plot_grid(readRDS(file.path(emby, "excess_death_rate_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + colorcorrect() + year_label, readRDS(file.path(lylby, "excess_pll_fig_label_correct.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + colorcorrect() + year_label, nrow = 1, labels = c("A", "B"), label_size = 22)
fig_jacc
#fig 1
if (project == "cvd"){
#30 characters
titletext <- "Overall Cardiovascular Disease"
}
#fig 3
if (project == "htncvd"){
titletext <- "Hypertension"
#12 characters
}
#fig 2
if (project == "ihdcvd"){
titletext <- "Ischemic Heart Disease"
#22 characters
}
#fig 5
if (project == "hfcvd"){
titletext <- "Heart Failure"
#13 characters
}
#fig 4
if (project == "cvcvd"){
titletext <- "Cerebrovascular Disease"
#23 characters
}
title <- ggplot() + theme_void() + theme(plot.background = element_rect(fill = "white")) + ggtitle(titletext) + theme(plot.title = element_text(size = 20, hjust = 0.5, vjust = 0.5, face = "bold")) + theme(panel.border = element_blank())
title
title <- ggplot() + theme_void() + theme(plot.background = element_rect(fill = "white")) + ggtitle(titletext) + theme(plot.title = element_text(size = 20, hjust = 0.5, vjust = 0.5, face = "bold")) + theme(panel.border = element_blank(), panel.background = element_blank())
title
title
title <- ggplot() + theme_void() + theme(plot.background = element_rect(fill = "white", color = NA)) + ggtitle(titletext) + theme(plot.title = element_text(size = 20, hjust = 0.5, vjust = 0.5, face = "bold")) + theme(panel.border = element_blank(), panel.background = element_blank())
title
title <- ggplot() + theme_void() + theme(plot.background = element_rect(fill = "white", color = NA)) + ggtitle(titletext) + theme(plot.title = element_text(size = 20, hjust = 0.5, vjust = 0.5, face = "bold")) + theme(panel.border = element_blank(), panel.background = element_blank())
fig_jacc <- plot_grid(title, fig_jacc, ncol=1, rel_heights=c(0.08, 1)) # rel_heights values control title margins
fig_jacc
legend_spec <- list(
scale_color_discrete(name = "Sex"),                         # title
guides(color = guide_legend(title.position = "top",         # title on its own line
nrow = 1,                       # labels in one row
byrow = TRUE)),
theme(legend.position = "bottom")                           # place at bottom
)
## plots ---------------------------------------------------------------
p1 <- readRDS(file.path(emby,  "excess_death_rate_fig.rds")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
colorcorrect() + year_label + legend_spec
p2 <- readRDS(file.path(lylby, "excess_pll_fig_label_correct.rds")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
colorcorrect() + year_label +
theme(legend.position = "none")          # hide here
## assemble ------------------------------------------------------------
leg <- get_legend(p1)                         # extract the formatted legend
fig_jacc <- plot_grid(
plot_grid(p1 + theme(legend.position = "none"), p2,
nrow = 1, labels = c("A", "B"), label_size = 22),
leg,
ncol = 1, rel_heights = c(1, 0.12)          # adjust as needed
)
fig_jacc
legend_spec <- list(
scale_color_discrete(name = "Sex"),
guides(color = guide_legend(title.position = "top",
nrow = 1,
byrow = TRUE)),
theme(legend.position = "bottom")
)
fig_jacc <- plot_grid(readRDS(file.path(emby, "excess_death_rate_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + colorcorrect() + year_label, readRDS(file.path(lylby, "excess_pll_fig_label_correct.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + colorcorrect() + year_label, nrow = 1, labels = c("A", "B"), label_size = 22) + legend_spec
plot_grid(readRDS(file.path(emby, "excess_death_rate_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + colorcorrect() + year_label, readRDS(file.path(lylby, "excess_pll_fig_label_correct.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + colorcorrect() + year_label, nrow = 1, labels = c("A", "B"), label_size = 22) + legend_spec
fig_jacc <- plot_grid(readRDS(file.path(emby, "excess_death_rate_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + colorcorrect() + year_label + legend_spec, readRDS(file.path(lylby, "excess_pll_fig_label_correct.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + colorcorrect() + year_label + legend_spec, nrow = 1, labels = c("A", "B"), label_size = 22)
fig_jacc
plot_grid(readRDS(file.path(emby, "excess_death_rate_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1))  + year_label + legend_spec + colorcorrect(), readRDS(file.path(lylby, "excess_pll_fig_label_correct.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + year_label + legend_spec + colorcorrect(), nrow = 1, labels = c("A", "B"), label_size = 22)
#fig 1
colorcorrect <- function(bpal = colorpal[c(4,6)]){
scale_color_manual(values = bpal[1:2], name = "Sex")
}
#All age adjusted derivatives (raw, -, /)
fig1 <- plot_grid(readRDS(file.path(emby, "age_adj_deaths_race_sex_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)),
readRDS(file.path(emby, "excess_death_rate_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + colorcorrect(),
readRDS(file.path(emby, "mortality_rate_ratio_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + colorcorrect() + scale_y_continuous(breaks = scales::pretty_breaks(n = 8)),
readRDS(file.path(lylby, "excess_pll_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + colorcorrect(),
nrow = 2, labels = c("A", "B", "C", "D"), label_size = 25)
save_plot_custom(plt = fig1, folder = figdir, width.in = 14, height.in = 10)
if (project %in% c("cvd", "htncvd", "ihdcvd", "hfcvd", "cvcvd")){
#fig_jacc <- plot_grid(readRDS(file.path(emby, "mortality_rate_ratio_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + colorcorrect() + year_label,
#readRDS(file.path(emby, "excess_death_rate_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + colorcorrect(),
#readRDS(file.path(lylby, "excess_pll_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + colorcorrect() + year_label, nrow = 1, labels = c("A", "B", "C"), label_size = 25)
legend_spec <- list(
guides(color = guide_legend(title.position = "top",
nrow = 1,
byrow = TRUE)),
theme(legend.position = "bottom")
)
fig_jacc <- plot_grid(readRDS(file.path(emby, "excess_death_rate_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1))  + year_label + legend_spec + colorcorrect(), readRDS(file.path(lylby, "excess_pll_fig_label_correct.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + year_label + legend_spec + colorcorrect(), nrow = 1, labels = c("A", "B"), label_size = 22)
fig_jacc
plot_grid(readRDS(file.path(emby, "excess_death_rate_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1))  + year_label + legend_spec + colorcorrect(), readRDS(file.path(lylby, "excess_pll_fig_label_correct.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + year_label + legend_spec + colorcorrect(), nrow = 1, labels = c("A", "B"), label_size = 22)
plot_grid(readRDS(file.path(emby, "excess_death_rate_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1))  + year_label + theme(panel.grid.major = element_blank()) + legend_spec + colorcorrect(), readRDS(file.path(lylby, "excess_pll_fig_label_correct.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + year_label + theme(panel.grid.major = element_blank()) + legend_spec + colorcorrect(), nrow = 1, labels = c("A", "B"), label_size = 22)
plot_grid(readRDS(file.path(emby, "excess_death_rate_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1))  + year_label + theme(panel.grid.major = element_blank()) + legend_spec + colorcorrect() + geom_point(), readRDS(file.path(lylby, "excess_pll_fig_label_correct.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + year_label + theme(panel.grid.major = element_blank()) + legend_spec + colorcorrect() + geom_point(), nrow = 1, labels = c("A", "B"), label_size = 22)
plot_grid(readRDS(file.path(emby, "excess_death_rate_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1))  + year_label + theme(panel.grid.major = element_blank()) + legend_spec + colorcorrect() + geom_point(size=0.3), readRDS(file.path(lylby, "excess_pll_fig_label_correct.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + year_label + theme(panel.grid.major = element_blank()) + legend_spec + colorcorrect() + geom_point(size=0.3), nrow = 1, labels = c("A", "B"), label_size = 22)
plot_grid(readRDS(file.path(emby, "excess_death_rate_fig.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1))  + year_label + theme(panel.grid.major = element_blank()) + legend_spec + colorcorrect() + geom_point(), readRDS(file.path(lylby, "excess_pll_fig_label_correct.rds")) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + year_label + theme(panel.grid.major = element_blank()) + legend_spec + colorcorrect() + geom_point(), nrow = 1, labels = c("A", "B"), label_size = 22)
