params <- list(ctdna = list(a = 1, b = 9),
ctc = list(a = 1, b = 10^3),
chip = list(a= 1, b = 9),
montecarlo.samples = 50e3,
prior.weight = 0.1)
muts <- unite(crcseq, "uid", c(patient, gene), remove = FALSE) %>%
group_by(uid) %>% nest()
muts
crcseq
extdir <- system.file("extdata", package="plasmut")
fpath <- file.path(extdir, "cairo5-matched-sequencing.csv")
df <- read_csv(fpath, show_col_types=FALSE) %>%
type.convert(as.is=TRUE)
cfdna <- df %>%
select(Gene, Patient, `cfDNA distinct mutant reads`,
`cfDNA distinct reads`,
`AAChange`,
`Nucleotide Position (hg19)`) %>%
set_colnames(c("gene", "patient", "y", "n",
"aa", "position")) %>%
mutate(analyte="plasma")
buffy <- df %>%
select(Gene, Patient, `wbc distinct reads`,
`wbc distinct mutant reads`,
`AAChange`,
`Nucleotide Position (hg19)`) %>%
set_colnames(c("gene", "patient", "n", "y",
"aa", "position")) %>%
mutate(analyte="buffy coat")
crc.data <- bind_rows(cfdna, buffy) %>%
arrange(patient, aa)
crc.data
p12 <- crc.data %>%
filter(patient == 12,
gene %in% c("APC", "HRAS"))
p13 <- crc.data %>%
filter(patient == 13, gene=="FGFR2")
p157 <- crc.data %>%
filter(patient == 157, aa=="M237K")
bind_rows(p12, p13, p157)
crc.data <- crc.data %>%
arrange(patient, gene) %>%
select(patient, gene, aa, position, analyte, y, n)
muts <- unite(crc.data, "uid", c(patient, gene, aa, position), remove = FALSE) %>%
group_by(uid) %>% nest()
muts
muts$IS <- muts$data %>% map(importance_sampler, params)
fun <- function(x){
result <- x$data %>%
select(-position) %>%
mutate(bayes_factor = x$IS$bayesfactor$bayesfactor)
return(result)
}
bf <- apply(muts, 1, fun)
bf
bf %>% do.call(rbind, .) %>%
as_tibble() %>%
select(patient, gene, aa, bayes_factor) %>%
rename(log_bf=bayes_factor) %>%
distinct()
data <- bf %>% do.call(rbind, .) %>%
as_tibble() %>%
select(patient, gene, aa, bayes_factor) %>%
rename(log_bf=bayes_factor) %>%
distinct()
data
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1))
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% arrange(prob_tumor)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% arrange(prob_tumor) %>% as.data.frame()
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r) %>% as.data.frame()
exp(-2.5) / (exp(-2.5) + 1)
exp(-3) / (exp(-3) + 1)
exp(-3) / (exp(-5) + 1)
exp(-5) / (exp(-5) + 1)
exp(-4) / (exp(-4) + 1)
exp(-3.5) / (exp(-3.5) + 1)
exp(-3.75) / (exp(-3.75) + 1)
log(0.0229 / (1 + 0.0229))
log(0.025 / (1 + 0.025))
log(0.01 / (1 + 0.01))
log(0.9 / (1 + 0.9))
log(0.95 / (1 + 0.95))
exp(0) / (exp(0) + 1)
exp(2.2) / (exp(2.2) + 1)
exp(2) / (exp(2) + 1)
exp(2.1) / (exp(2.1) + 1)
exp(2.2) / (exp(2.2) + 1)
exp(2.15) / (exp(2.15) + 1)
exp(2.16) / (exp(2.16) + 1)
exp(2.17) / (exp(2.17) + 1)
exp(2.18) / (exp(2.18) + 1)
exp(2.19) / (exp(2.19) + 1)
exp(2.195) / (exp(2.195) + 1)
data
data %>% filter(log_bf > 2.2) %>% filter(log_bf < -4.5)
data %>% filter(log_bf > 2.2) %>% filter(log_bf < -4.6)
data %>% filter(log_bf <= 2.2) %>% filter(log_bf >= -4.5)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r) %>% as.data.frame() %>% filter(log_bf <= 2.2) %>% filter(log_bf >= -4.5)
# A tibble: 47 Ã— 4
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r) %>% as.data.frame() %>% filter(log_bf <= 2.2)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r) %>% as.data.frame() %>% filter(log_bf <= 2.2) %>% filter(log_bf >= -4.6)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r) %>% as.data.frame() %>% filter(log_bf <= 2.2) %>% filter(log_bf >= -4.6) %>% as_tibble
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r) %>% as.data.frame() %>% filter(log_bf <= 2.2) %>% filter(log_bf >= -4.6) %>% as_tibble()
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r) %>% as.data.frame() %>% filter(log_bf > 2.2)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r) %>% as.data.frame() %>% filter(log_bf > 2.2) %>% as_tibble()
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r) %>% as.data.frame() %>% filter(log_bf < -4.6) %>% as_tibble()
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r) %>% as.data.frame() %>% filter(log_bf <= 2.2) %>% filter(log_bf >= -4.6) %>% as_tibble()
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r) %>% as.data.frame() %>% filter(log_bf <= 2.2) %>% filter(log_bf >= -4.6) %>% as_tibble() %>% arrange(log_bf)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r) %>% as.data.frame() %>% filter(log_bf <= 2.2) %>% filter(log_bf >= -4.6) %>% as_tibble() %>% arrange(log_bf) %>% slice(1, 47)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r) %>% as.data.frame() %>% filter(log_bf <= 2.2) %>% filter(log_bf >= -4.6) %>% as_tibble() %>% arrange(log_bf)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r)  %>% group_by(patient)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r)  %>% group_by(patient) %>% summarize(n = n())
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r)  %>% group_by(patient) %>% summarize(n = n()) %>% arrange(n)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor_r)  %>% group_by(patient) %>% summarize(n = n()) %>% filter(n > 1)
exp(2.195) / (exp(2.195) + 1)
exp(log(10)) / (exp(log(10)) + 1)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(desc(prob_tumor_r)  )
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor) %>% filter(prob_tumor > 0.95)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor) %>% filter(prob_tumor > 0.99)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor) %>% filter(prob_tumor > 0.95)
log(10)
exp(log(10)) / (exp(log(10)) + 1)
exp(exp(2.2)) / (exp() + 1)
exp(2.2)
data("crcseq")
crcseq
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor) %>% filter(prob_tumor > 0.9)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor) %>% filter(log_bf > 2.2)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor) %>% filter(log_bf > 2.2) %>% as.data.frame()
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor) %>% filter(log_bf > 2.2) %>% group_by(patient)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor) %>% filter(log_bf > 2.2) %>% group_by(patient) %>% summarize(n = n())
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor) %>% filter(log_bf > 2.2) %>% group_by(patient) %>% summarize(n = n()) %>% arrange(n)
exp(5) / (exp(5) + 1)
exp(5) / (exp(5) + 1)
exp(4) / (exp(4) + 1)
exp(5) / (exp(5) + 1)
exp(4.5) / (exp(4.5) + 1)
exp(4.6) / (exp(4.6) + 1)
exp(4.6)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor) %>% filter(log_bf > 4.6) %>% group_by(patient) %>% summarize(n = n()) %>% arrange(n)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor) %>% filter(log_bf > 4.6)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor) %>% filter(log_bf > 4.6) %>% group_by(patient)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1))
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% group_by(patient) %>% summarize(n = n())
data
data %>% group_by(patient)
crcseq
crc.data
crc.data %>% group_by(patient)
crc.data %>% group_by(patient) %>% summarize(n = n())
crc.data %>% group_by(patient) %>% summarize(n = n()) %>% filter(n > 1)
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor) %>% filter(log_bf < exp(0.1))
exp(0.1)
63+96
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor) %>% filter(log_bf > exp(10))
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor) %>% filter(log_bf < log(0.1))
data %>% mutate(prob_tumor = exp(log_bf) / (exp(log_bf) + 1)) %>% mutate(prob_tumor_r = round(prob_tumor, 3)) %>% arrange(prob_tumor) %>% filter(log_bf > log(10))
setwd("~/Documents/GitHub/cdc-wonder-mortality/code")
library(tidyverse)
library(haven)
source("preprocess-function.R")
args <- "IHD"
project <- args[1]
age_breaks <- c(0, 1, 4, 9, 14, 19, 24, 29, 34, 39, 44, 49, 54, 59, 64, 69, 74, 79, 84, Inf)
age_labels <- c("<1", "1-4", "5-9", "10-14", "15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49", "50-54", "55-59", "60-64", "65-69", "70-74", "75-79", "80-84", "85+")
if (age_first > 1) {
age_first_i <- age_first - 1
include_lowest <- FALSE
}
start_index <- which(age_breaks == age_first_i)
trimmed_age_breaks <- age_breaks[start_index:length(age_breaks)]
trimmed_age_labels <- age_labels[start_index:length(age_labels)]
start_years <- c(2020, 2013, 2006, 1999)
end_years <- c(2022, 2019, 2012, 2005)
start_year <- 1999
end_year <- 2022
race1 <- "White"
race2 <- "Black or African American"
ethnicity1 <- "Not Hispanic or Latino"
ethnicity2 <- "Not Hispanic or Latino"
include_lowest <- TRUE
age_breaks <- c(0, 1, 4, 9, 14, 19, 24, 29, 34, 39, 44, 49, 54, 59, 64, 69, 74, 79, 84, Inf)
age_labels <- c("<1", "1-4", "5-9", "10-14", "15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49", "50-54", "55-59", "60-64", "65-69", "70-74", "75-79", "80-84", "85+")
if (age_first > 1) {
age_first_i <- age_first - 1
include_lowest <- FALSE
}
start_index <- which(age_breaks == age_first_i)
trimmed_age_breaks <- age_breaks[start_index:length(age_breaks)]
trimmed_age_labels <- age_labels[start_index:length(age_labels)]
age_first <- 35
start_years <- c(2020, 2013, 2006, 1999)
end_years <- c(2022, 2019, 2012, 2005)
start_year <- 1999
end_year <- 2022
race1 <- "White"
race2 <- "Black or African American"
ethnicity1 <- "Not Hispanic or Latino"
ethnicity2 <- "Not Hispanic or Latino"
include_lowest <- TRUE
age_breaks <- c(0, 1, 4, 9, 14, 19, 24, 29, 34, 39, 44, 49, 54, 59, 64, 69, 74, 79, 84, Inf)
age_labels <- c("<1", "1-4", "5-9", "10-14", "15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49", "50-54", "55-59", "60-64", "65-69", "70-74", "75-79", "80-84", "85+")
if (age_first > 1) {
age_first_i <- age_first - 1
include_lowest <- FALSE
}
start_index <- which(age_breaks == age_first_i)
trimmed_age_breaks <- age_breaks[start_index:length(age_breaks)]
trimmed_age_labels <- age_labels[start_index:length(age_labels)]
trimmed_age_breaks
trimmed_age_breaks
trimmed_age_labels
setwd("../../pk-cdc-wonder-mortality/")
library(dplyr)
library(data.table)
indir <- "~/Documents/GitHub/pk-cdc-wonder-mortality"
outdir <- "~/Documents/pk-output"
project <- "IHD"
icd10_codes <- c("I20","I20.0","I20.1","I20.8","I20.9","I21","I21.0","I21.1","I21.2","I21.3","I21.4","I21.9","I22","I22.0","I22.1","I22.8","I22.9","I24","I24.1","I24.8","I24.9","I25","I25.0","I25.1","I25.2","I25.3","I25.4","I25.5","I25.6","I25.8","I25.9","I46","I46.0","I46.1","I46.9")
age_first <- 35
workdir <- paste0(outdir, "/", project, "/")
#start_years <- c(2019, 2014, 2009, 2004, 1999)
#end_years <- c(2022, 2018, 2013, 2008, 2003)
#years by 7 then 3 during pandemic
start_years <- c(2020, 2013, 2006, 1999)
end_years <- c(2022, 2019, 2012, 2005)
start_year <- 1999
end_year <- 2022
race1 <- "White"
race2 <- "Black or African American"
ethnicity1 <- "Not Hispanic or Latino"
ethnicity2 <- "Not Hispanic or Latino"
include_lowest <- TRUE
age_breaks <- c(0, 1, 4, 9, 14, 19, 24, 29, 34, 39, 44, 49, 54, 59, 64, 69, 74, 79, 84, Inf)
age_labels <- c("<1", "1-4", "5-9", "10-14", "15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49", "50-54", "55-59", "60-64", "65-69", "70-74", "75-79", "80-84", "85+")
if (age_first > 1) {
age_first_i <- age_first - 1
include_lowest <- FALSE
}
start_index <- which(age_breaks == age_first_i)
trimmed_age_breaks <- age_breaks[start_index:length(age_breaks)]
trimmed_age_labels <- age_labels[start_index:length(age_labels)]
#print(trimmed_age_breaks) # Should start with first age minus 1
#print(trimmed_age_labels)
pop <- read.table(paste0(indir, "/grouped_age_race_gender_population_1999_2022_national_race4pk.tsv"), header = TRUE, sep = "\t")
pop
as_tibble(po)
as_tibble(pop)
pop$Single.Year.Ages.Code <- as.character(pop$Age_groups)
pop$Single.Year.Ages.Code <- sub("-.*", "", pop$Single.Year.Ages.Code)
pop$Single.Year.Ages.Code <- sub("\\+.*", "", pop$Single.Year.Ages.Code)
pop$Single.Year.Ages.Code <- gsub("<1", "0", pop$Single.Year.Ages.Code)
pop$Single.Year.Ages.Code <- sub(" .*", "", pop$Single.Year.Ages.Code)
pop <- pop[pop$Age_group != "Not stated", ]
pop$Single.Year.Ages.Code <- as.numeric(pop$Single.Year.Ages.Code)
colnames(pop)[colnames(pop) == "Year.Code"] <- "Year"
pop <- pop[(pop$Race == race1 & pop$Hispanic.Origin == ethnicity1) |
(pop$Race == race2 & pop$Hispanic.Origin == ethnicity2), ]
dir.create(paste0(outdir, "/", project), recursive = TRUE)
datafilename <- paste0("/", project, "_1999_2022_deaths.tsv")
data <- read.table(paste0(indir, datafilename), header = TRUE, sep = "\t")
data
data$Age <- as.character(data$Age_group)
data$Age <- sub("-.*", "", data$Age)
data$Age <- sub("\\+.*", "", data$Age)
data$Age <- gsub("< 1", "0", data$Age)
data$Age <- sub(" .*", "", data$Age)
data <- data[data$Age_group != "Not stated", ]
data$Age <- as.numeric(data$Age)
colnames(data)[colnames(data) == "Race4"] <- "Race"
data <- data[(data$Race == race1 & data$Hispanic == ethnicity1) |
(data$Race == race2 & data$Hispanic == ethnicity2), ]
poisson_df <- read.table(paste0(indir, "/death_poisson_lower_upper.tsv"), header = TRUE, sep = "\t")
colnames(poisson_df) <- c("Deaths", "L95", "U95", "L96", "U96")
aa_df <- read.table(paste0(indir, "/age_2000_standard_population_final.tsv"), header = TRUE, sep = "\t")
aa_df$age_groups <- cut(aa_df$Age,
breaks = trimmed_age_breaks,
labels = trimmed_age_labels,
include.lowest = include_lowest)
aa_df <- aa_df[complete.cases(aa_df$age_groups), ]
aa_df$Age_groups <- as.character(aa_df$age_groups)
aa_df$Age_groups <- ifelse(aa_df$Age == "1", "1-4", aa_df$Age_groups)
aa_df <- aggregate(Population ~ Age_groups, aa_df, sum) # sum populations
for (i in 1:nrow(aa_df)) {aa_df$AA_proportion[i] <- aa_df$Population[i] / sum(aa_df$Population) }
data
data %>% as_tibble()
start_years
i <- 1
start_year_i <- start_years[i]
end_year_i <- end_years[i]
filtered_data <- data[data$Year >= start_year_i & data$Year <= end_year_i, ]
filtered_data$Deaths <- 1
filtered_data
filtered_data$Age <- ifelse(filtered_data$Age >= 85, 85, filtered_data$Age)
filtered_data
data
data <- data %>% filter(Age < 85)
data
pop
as_tibble(pop)
pop %>% filter(Single.Year.Ages.Code == 85)
pop %>% filter(Single.Year.Ages.Code = 85)
pop %>% filter(Single.Year.Ages.Code != 85)
setwd("../cdc-wonder-mortality/code")
library(tidyverse)
library(haven)
project <- "IHD"
project <- args[1]
#create age categorical buckets
age_intervals <- c(0, 1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, Inf)
#files with age related data
#starts with deaths_crude_race_gender_age but does not contain year in the file name
datadir <- "../../../pk-output"
agefiles <- list.files(file.path(datadir, project), "^deaths_crude_race_gender_age_", full.names=TRUE)
agefiles <- agefiles[!grepl("year", agefiles)]
#CDC Wonder input filea
# "export_deaths_crude_race_gender_age.txt"
inputfile <- file.path(file.path(datadir, project), "export_deaths_crude_race_gender_age.tsv")
#output file name and directory
outputdir <- file.path("../results", project, "excess-mortality-by-age")
#table directory
#palette of colors
cbb <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
#plot path
plotdir <- file.path("../../cdc-wonder-output", project, "excess-mortality-by-age")
tabledir <- file.path(dirname(plotdir), "tables")
create_output_dir(tabledir)
######### CODE ####################
process_df_tsv <- function(data, age_intervals){
agecodes <- data$`Single-Year Ages Code`
data <- data %>% select(-ends_with("code"))
data$age <- agecodes
data <- data %>% mutate(age=ifelse(age == 999, NA, age))
data <- data %>% type.convert()
data <- data %>% mutate(age_cat = cut(age, breaks=age_intervals, right=FALSE)) %>% mutate(age_cat=as.character(age_cat))
data <- data %>% type.convert(as.is=TRUE)
#age buckets formatting
data <- data %>% mutate(age_lb = as.numeric(sub("\\[(\\d+),.*", "\\1", age_cat)), age_ub = as.numeric(sub(".*,(\\d+)\\)", "\\1", age_cat)), age_cat = paste0(age_lb, "-", age_ub-1), age_cat=ifelse(age_cat=="0-0", "< 1", age_cat)) %>% mutate(age=age_lb) %>% select(-c(age_lb, age_ub))
data <- data %>% mutate(age_cat = ifelse(age == 85, "85+", age_cat))
return(data)
}
compute_statistics <- function(data){
data <- data %>% filter(is.finite(as.numeric(Deaths))) %>% filter(is.finite(as.numeric(Population))) %>% type.convert(as.is=TRUE)
data_agg <- data %>% group_by(age_cat, age, Gender, Race) %>% summarize(deaths=sum(Deaths), population=sum(Population),cruderate=mean(`Crude Rate`) ) %>% ungroup()
excess_deaths_age <- data_agg %>% group_by(age_cat, age, Gender) %>% summarize(unadj_excess_deaths_number = deaths[Race==1] - (population[Race==1]*(deaths[Race==3]/population[Race==3])), unadj_excess_deaths_rate = ((deaths[Race==1]/population[Race==1])*100000) - ((deaths[Race==3]/population[Race==3])*100000), ratio_unadj_excess_deaths_rate = ((deaths[Race==1]/population[Race==1])*100000) / ((deaths[Race==3]/population[Race==3])*100000), black_death_rate = (deaths[Race==1]/population[Race==1])*100000, white_death_rate = (deaths[Race==3] / population[Race==3])*100000)
return(list(data_agg=data_agg, excess_deaths_age = excess_deaths_age))
}
wrapper_age_excess_deaths <- function(relativefilepath, age_intervals){
data <- preprocess_cdc_wonder(relativefilepath)
relativefilepath <- basename(relativefilepath)
data <- process_df_tsv(data, age_intervals)
excess_deaths_age <- compute_statistics(data)$excess_deaths_age
excess_deaths_age <- excess_deaths_age %>% mutate(Year = gsub("deaths_crude_race_gender_age_|\\.txt", "", relativefilepath))
return(excess_deaths_age)
}
data <- preprocess_cdc_wonder(inputfile)
excess_deaths_age <- data %>% process_df_tsv(age_intervals) %>% compute_statistics() %>% purrr::pluck("excess_deaths_age")
age.data <- do.call(rbind, lapply(agefiles, function(x) wrapper_age_excess_deaths(x, age_intervals)))
age.data
age.data %>% filter(age > 80)
age.data %>% filter(age > 50)
age.data %>% filter(age > 75)
aadr_indiv_table <- excess_deaths_age %>% select(age_cat, age, Gender, white_death_rate, black_death_rate) %>% ungroup() %>% select(age_cat, Gender, white_death_rate, black_death_rate) %>% pivot_longer(cols = ends_with("_death_rate"), names_to = "AgeType", values_to = "Value") %>%
pivot_wider(names_from = c(AgeType, Gender),
values_from = Value) %>%
rename_with(~ str_replace_all(.x, "_death_rate", ""),
ends_with("_death_rate"))
excess_aamr_table <- excess_deaths_age %>% select(age_cat, Gender, unadj_excess_deaths_number, unadj_excess_deaths_rate) %>% ungroup() %>%
pivot_longer(cols = starts_with("unadj"),
names_to = "Metric",
values_to = "Value") %>%
pivot_wider(names_from = c(Gender, Metric),
values_from = Value) %>%
select(age_cat, starts_with("Female"), starts_with("Male"))
write_csv(aadr_indiv_table, file = file.path(tabledir, "aadr_race_sex_age.csv"))
write_csv(excess_aamr_table, file = file.path(tabledir, "excess_aadr_age.csv"))
#Graphical Component
agevector <- excess_deaths_age %>% select(age_cat, age) %>% distinct() %>% arrange(age)
#remove 85+
agevector <- agevector %>% filter(age < 85)
excess_deaths_age <- excess_deaths_age %>% filter(age < 85)
age.data <- age.data %>% filter(age < 85)
age.dat
sizing_theme <- theme(axis.text = element_text(size=12), axis.title=element_text(size=16), legend.text=element_text(size=14), legend.title=element_text(size=16), plot.title=element_text(size=18, hjust=0.5))
panel_theme <- theme_bw() + theme(panel.grid.major.x = element_blank(), panel.grid.minor=element_blank())
adj_y <- function(data, var){
vals <- data %>% pull(var)
lim_max <- max(vals) * 1.15
if (max(vals) < 10){
lim_min <- 0.75
bkpoints <- seq(lim_min, lim_max, 0.5)
} else{
lim_min <- 0
bkpoints <- seq(lim_min, lim_max, 25)
}
lims <- c(lim_min, lim_max)
return(list(lims=lims, bk=bkpoints))
}
indiv_death_rate_fig <- excess_deaths_age %>% select(age_cat, age, Gender, white_death_rate, black_death_rate) %>% ungroup() %>% pivot_longer(-c(age_cat, age, Gender)) %>% ggplot(aes(x=age, y=value, color=name)) + geom_line(size = 0.5) + ylab("Deaths per 100K individuals") + scale_color_manual(values = c("black_death_rate"="maroon", "white_death_rate"="navy"), labels = c("black_death_rate" = "Black", "white_death_rate" = "White")) + panel_theme + facet_wrap(~Gender, nrow=1) + xlab("Age group (years)") + geom_point(size = 2.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_x_continuous(limits=c(min(agevector$age),max(agevector$age)), breaks=agevector$age, labels=agevector$age_cat) + theme(legend.title = element_blank())
excess_death_rate_age_fig <- excess_deaths_age %>% ggplot(aes(x=age, y=unadj_excess_deaths_rate, group=Gender, color=Gender)) + geom_line(size=0.5) + geom_hline(yintercept=1, linetype="dashed") + sizing_theme + scale_color_manual(values=c("maroon", "navy")) + panel_theme + scale_x_continuous(limits=c(min(agevector$age),max(agevector$age)), breaks=agevector$age, labels=agevector$age_cat) + theme(axis.text.x = element_text(angle=45, hjust=1)) + xlab("Age group (years)") + geom_point(aes(color=Gender), size=2.5) + scale_y_continuous(breaks = scales::pretty_breaks(n = 8)) +  theme(plot.title = element_text(hjust = 0.5)) + ylab("Excess deaths per 100K Individuals") + ggtitle("Excess Mortality Rate By Age")
mortality_rate_ratio_fig <- excess_deaths_age %>% ggplot(aes(x=age, y=ratio_unadj_excess_deaths_rate, group=Gender, color=Gender)) + geom_line(size=.5) + ylab("Mortality Rate Ratio (Black / White)") + geom_hline(yintercept=1, linetype="dashed") + sizing_theme + scale_color_manual(values=c("maroon", "navy")) + ggtitle("Black-White Mortality Rate Ratio by Age") + panel_theme + scale_x_continuous(limits=c(min(agevector$age),max(agevector$age)), breaks=agevector$age, labels=agevector$age_cat) + theme(axis.text.x = element_text(angle=45, hjust=1)) + xlab("Age group (years)") + geom_point(aes(color=Gender), size=2.5) + scale_y_continuous(limits = adj_y(excess_deaths_age, "ratio_unadj_excess_deaths_rate")$lims, breaks=adj_y(excess_deaths_age, "ratio_unadj_excess_deaths_rate")$bk)
excess_death_rate_age_year_fig <- age.data %>% mutate(Year = str_remove(Year, ".tsv")) %>% ggplot(aes(x=age, y=unadj_excess_deaths_rate, group=Year)) + geom_line(aes(color=Year), size=0.5) + ylab("Excess deaths per 100K individuals") + geom_hline(yintercept=1, linetype="dashed") + sizing_theme + scale_color_manual(name="Year Range", values=cbb[1:6]) + ggtitle("Excess Mortality Rate Among Black Population by Age and Gender") + panel_theme + scale_x_continuous(limits=c(min(agevector$age),max(agevector$age)), breaks=agevector$age, labels=agevector$age_cat) + theme(axis.text.x = element_text(angle=45, hjust=1)) + xlab("Age group (years)") + geom_point(aes(color=Year), size=2.5) + facet_wrap(~Gender) + theme(strip.text = element_text(size=11), strip.background=element_rect(fill="transparent", color="transparent")) + scale_y_continuous(limits = adj_y(age.data, "unadj_excess_deaths_rate")$lims, breaks=adj_y(age.data, "unadj_excess_deaths_rate")$bk)
save_plot(excess_death_rate_age_fig, plotdir)
save_plot(mortality_rate_ratio_fig, plotdir)
save_plot(excess_death_rate_age_year_fig, plotdir)
save_plot(indiv_death_rate_fig, plotdir)
save_rds(excess_death_rate_age_fig, outputdir)
save_rds(mortality_rate_ratio_fig, outputdir)
save_rds(excess_death_rate_age_year_fig, outputdir)
save_rds(indiv_death_rate_fig, outputdir)
excess_death_rate_age_fig
excess_death_rate_age_year_fig
lifeexp_file <- "../data/file_life_expectancy_1999_to_2020.dta"
life_exp <- read_dta(lifeexp_file) %>% mutate(Gender=factor(gender)) %>% mutate(Gender=ifelse(Gender=="1", "Female", "Male")) %>% select(-gender) %>% mutate(Gender = as.character(Gender))
life_exp
life_exp %>% filter(age_cat > 80)
life_exp
life_exp <- life_exp %>% filter(age_cat < 85)
life_Exp
life_exp
years <- seq(1999, 2021, 1)
datadir <- "../../../pk-output"
inputfile <- file.path(file.path(datadir, project), "export_age_deaths_race_gender_year_se.tsv")
lifeexp_file <- "../data/file_life_expectancy_1999_to_2020.dta"
outputdir <- file.path("../results", project, "life-years-lost-by-year")
#create age categorical buckets
age_intervals <- c(0, 1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, Inf)
#plot path
plotdir <- file.path("../../cdc-wonder-output", project, "life-years-lost-by-year")
tabledir <- file.path(dirname(plotdir), "tables")
create_output_dir(tabledir)
#palette of colors
cbb <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
##### CODE ######
data <- preprocess_cdc_wonder(inputfile)
agecodes <- data$`Single-Year Ages Code`
data <- data %>% select(-ends_with("code"))
cols.to.rename <- c("Single-Year Ages", "Crude Rate Upper 95% Confidence Interval", "Crude Rate Standard Error", "Crude Rate Lower 95% Confidence Interval")
new.col.names <- c("agegroup", "cruderate_ci_ub", "cruderate_se", "cruderate_ci_lb")
data <- rename_columns(data, cols.to.rename, new.col.names)
data$age <- agecodes
data <- data %>% mutate(age=ifelse(age==999, NA, age))
data <- data %>% type.convert()
data <- data %>% mutate(age_cat = cut(age, breaks=age_intervals, right=FALSE)) %>% mutate(age_cat=as.character(age_cat))
data <- data %>% mutate(age_cat = ifelse(age == 85, "85+", age_cat))
data <- data %>% type.convert(as.is=TRUE)
data <- data %>% filter(!is.na(Population))
data_by_age_gender_race <- data %>% group_by(age_cat, Gender, Race, Year) %>% summarize(deaths=sum(Deaths), population=sum(Population),cruderate=mean(`Crude Rate`) ) %>% ungroup()
data_by_age_gender_race
data_by_age_gender_race %>% pull(age_cat) %>% unique()
data_by_age_gender_race %>% filter(age_cat == "[80,85)")
data
datadir <- "../../../pk-output"
inputfile <- file.path(file.path(datadir, project), "export_age_deaths_race_gender_year_se.tsv")
lifeexp_file <- "../data/file_life_expectancy_1999_to_2020.dta"
outputdir <- file.path("../results", project, "life-years-lost-by-year")
#create age categorical buckets
age_intervals <- c(0, 1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, Inf)
#plot path
plotdir <- file.path("../../cdc-wonder-output", project, "life-years-lost-by-year")
tabledir <- file.path(dirname(plotdir), "tables")
create_output_dir(tabledir)
#palette of colors
cbb <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
##### CODE ######
data <- preprocess_cdc_wonder(inputfile)
data
agecodes <- data$`Single-Year Ages Code`
data <- data %>% select(-ends_with("code"))
cols.to.rename <- c("Single-Year Ages", "Crude Rate Upper 95% Confidence Interval", "Crude Rate Standard Error", "Crude Rate Lower 95% Confidence Interval")
new.col.names <- c("agegroup", "cruderate_ci_ub", "cruderate_se", "cruderate_ci_lb")
data <- rename_columns(data, cols.to.rename, new.col.names)
data$age <- agecodes
data <- data %>% mutate(age=ifelse(age==999, NA, age))
data <- data %>% type.convert()
data
data %>% filter(age > 80)
data %>% relocate(Age)
data %>% relocate(age)
data %>% arrange(desc(age_breaks))
data %>% arrange(desc(age))
data <- data %>% mutate(age_cat = cut(age, breaks=age_intervals, right=FALSE)) %>% mutate(age_cat=as.character(age_cat))
data <- data %>% mutate(age_cat = ifelse(age == 85, "85+", age_cat))
data <- data %>% type.convert(as.is=TRUE)
data <- data %>% filter(!is.na(Population))
data
data %>% arrange(desc(age))
data %>% arrange(desc(age)) %>% relocate(age_cat)
age_intervals <- c(0, 1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85)
data <- preprocess_cdc_wonder(inputfile)
agecodes <- data$`Single-Year Ages Code`
data <- data %>% select(-ends_with("code"))
cols.to.rename <- c("Single-Year Ages", "Crude Rate Upper 95% Confidence Interval", "Crude Rate Standard Error", "Crude Rate Lower 95% Confidence Interval")
new.col.names <- c("agegroup", "cruderate_ci_ub", "cruderate_se", "cruderate_ci_lb")
data <- rename_columns(data, cols.to.rename, new.col.names)
data$age <- agecodes
data <- data %>% mutate(age=ifelse(age==999, NA, age))
data <- data %>% type.convert()
data <- data %>% mutate(age_cat = cut(age, breaks=age_intervals, right=FALSE)) %>% mutate(age_cat=as.character(age_cat))
data <- data %>% mutate(age_cat = ifelse(age == 85, "85+", age_cat))
data <- data %>% type.convert(as.is=TRUE)
data %>% arrange(desc(age)) %>% relocate(age_cat)
life_exp <- read_dta(lifeexp_file) %>% mutate(Gender=factor(gender)) %>% mutate(Gender=ifelse(Gender=="1", "Female", "Male")) %>% select(-gender) %>% mutate(Gender = as.character(Gender))
life_exp
life_exp <- life_exp %>% filter(age_cat < 80)
life_exp
life_exp <- life_exp %>% filter(age_cat < 85)
life_exp <- read_dta(lifeexp_file) %>% mutate(Gender=factor(gender)) %>% mutate(Gender=ifelse(Gender=="1", "Female", "Male")) %>% select(-gender) %>% mutate(Gender = as.character(Gender))
life_exp <- life_exp %>% filter(age_cat < 85)
life_exp
