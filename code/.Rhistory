get_jacc_data_multi <- function(x, file){
manuscript_submissions <- read_excel(path = file, sheet = x)
#All Paper, Original Research, Research Letters, (Reviews/Invited pieces)
#Only the first three matters, 2005+ has research letters
manuscript_submissions <- manuscript_submissions[manuscript_submissions$`All papers`=="Total Manuscripts" & !is.na(manuscript_submissions$`All papers`),]
manuscript_submissions <- manuscript_submissions %>% select_if(~ !all(is.na(.)))
manuscript_submissions <- manuscript_submissions %>% select(-1)
colnames(manuscript_submissions) <- c(month.name, "Total")
if (nrow(manuscript_submissions) > 2){
row <- ((read_excel(path = file, sheet = x)  %>% mutate(idx = 1:n()) %>%
filter(`All papers` == "Total Manuscripts") %>% tail(n = 1) %>% pull(idx) ) )
letter_data <- read_excel(path = file, sheet = x)[c(row-1, row), ]
letter_records <- letter_data %>% select(-1) %>% slice(1) %>% select_if(~ !all(is.na(.))) %>% unname() %>% unlist()
letter_values <- letter_data %>% select(-1) %>% slice(2) %>% select_if(~ !all(is.na(.))) %>% unname() %>% unlist()
letter_df <- rbind(data.frame(name = setdiff(c(month.name, "Total"), letter_records), value = 0), data.frame(name = letter_records, value = letter_values)) %>% mutate(type = "Letters")
manuscript_submissions <- manuscript_submissions[1:2,]
}
manuscript_submissions$type <- c("All", "Original")
year <- excel_sheets(file)[x]
data <- manuscript_submissions %>% pivot_longer(-type)
df <- rbind(data, letter_df) %>% as_tibble()
data <- data %>% mutate(year = as.numeric(year))
return(data)
}
get_jacc_data <- function(x, file){
manuscript_submissions <- read_excel(path = file, sheet = x) %>% filter(...1 == "Total Manuscripts") %>% select(-1) %>% unname() %>% unlist() %>% na.omit() %>% as.numeric()
print(length(manuscript_submissions)) #should be 13
entries <- c(month.name, "Total")
year <- excel_sheets(file)[x]
data <- data.frame(year = rep(year, length(entries)), name = entries, value = manuscript_submissions)
return(data)
}
#for single total manuscripts only showing All (old harlan file)
#df <- lapply(1:n.sheets, function(x) get_jacc_data(x = x, file = file))
df <- lapply(1:n.sheets, function(x) get_jacc_data_multi(x = x, file = file))
library(tidyverse)
library(readxl)
#file <- "~/Downloads/yearlystats-jacc.xlsx"
file <- "~/Downloads/jacc-data.xlsx"
n.sheets <- length(excel_sheets(file))
#year, month (incl total), number, article type
get_jacc_data_multi <- function(x, file){
manuscript_submissions <- read_excel(path = file, sheet = x)
#All Paper, Original Research, Research Letters, (Reviews/Invited pieces)
#Only the first three matters, 2005+ has research letters
manuscript_submissions <- manuscript_submissions[manuscript_submissions$`All papers`=="Total Manuscripts" & !is.na(manuscript_submissions$`All papers`),]
manuscript_submissions <- manuscript_submissions %>% select_if(~ !all(is.na(.)))
manuscript_submissions <- manuscript_submissions %>% select(-1)
colnames(manuscript_submissions) <- c(month.name, "Total")
if (nrow(manuscript_submissions) > 2){
row <- ((read_excel(path = file, sheet = x)  %>% mutate(idx = 1:n()) %>%
filter(`All papers` == "Total Manuscripts") %>% tail(n = 1) %>% pull(idx) ) )
letter_data <- read_excel(path = file, sheet = x)[c(row-1, row), ]
letter_records <- letter_data %>% select(-1) %>% slice(1) %>% select_if(~ !all(is.na(.))) %>% unname() %>% unlist()
letter_values <- letter_data %>% select(-1) %>% slice(2) %>% select_if(~ !all(is.na(.))) %>% unname() %>% unlist()
if (setdiff(c(month.name, "Total"), letter_records) > 0){
letter_df <- rbind(data.frame(name = setdiff(c(month.name, "Total"), letter_records), value = 0), data.frame(name = letter_records, value = letter_values)) %>% mutate(type = "Letters")
} else{
letter_df <- data.frame(name = letter_records, value = letter_values) %>% mutate(type = "Letters")
}
manuscript_submissions <- manuscript_submissions[1:2,]
}
manuscript_submissions$type <- c("All", "Original")
year <- excel_sheets(file)[x]
data <- manuscript_submissions %>% pivot_longer(-type)
df <- rbind(data, letter_df) %>% as_tibble()
data <- data %>% mutate(year = as.numeric(year))
return(data)
}
get_jacc_data <- function(x, file){
manuscript_submissions <- read_excel(path = file, sheet = x) %>% filter(...1 == "Total Manuscripts") %>% select(-1) %>% unname() %>% unlist() %>% na.omit() %>% as.numeric()
print(length(manuscript_submissions)) #should be 13
entries <- c(month.name, "Total")
year <- excel_sheets(file)[x]
data <- data.frame(year = rep(year, length(entries)), name = entries, value = manuscript_submissions)
return(data)
}
#for single total manuscripts only showing All (old harlan file)
#df <- lapply(1:n.sheets, function(x) get_jacc_data(x = x, file = file))
df <- lapply(1:n.sheets, function(x) get_jacc_data_multi(x = x, file = file))
file <- "~/Downloads/jacc-data.xlsx"
n.sheets <- length(excel_sheets(file))
#year, month (incl total), number, article type
get_jacc_data_multi <- function(x, file){
manuscript_submissions <- read_excel(path = file, sheet = x)
#All Paper, Original Research, Research Letters, (Reviews/Invited pieces)
#Only the first three matters, 2005+ has research letters
manuscript_submissions <- manuscript_submissions[manuscript_submissions$`All papers`=="Total Manuscripts" & !is.na(manuscript_submissions$`All papers`),]
manuscript_submissions <- manuscript_submissions %>% select_if(~ !all(is.na(.)))
manuscript_submissions <- manuscript_submissions %>% select(-1)
colnames(manuscript_submissions) <- c(month.name, "Total")
if (nrow(manuscript_submissions) > 2){
row <- ((read_excel(path = file, sheet = x)  %>% mutate(idx = 1:n()) %>%
filter(`All papers` == "Total Manuscripts") %>% tail(n = 1) %>% pull(idx) ) )
letter_data <- read_excel(path = file, sheet = x)[c(row-1, row), ]
letter_records <- letter_data %>% select(-1) %>% slice(1) %>% select_if(~ !all(is.na(.))) %>% unname() %>% unlist()
letter_values <- letter_data %>% select(-1) %>% slice(2) %>% select_if(~ !all(is.na(.))) %>% unname() %>% unlist()
if (length(setdiff(c(month.name, "Total"), letter_records)) > 0){
print(setdiff(c(month.name, "Total"), letter_records))
letter_df <- rbind(data.frame(name = setdiff(c(month.name, "Total"), letter_records), value = 0), data.frame(name = letter_records, value = letter_values)) %>% mutate(type = "Letters")
} else{
letter_df <- data.frame(name = letter_records, value = letter_values) %>% mutate(type = "Letters")
}
manuscript_submissions <- manuscript_submissions[1:2,]
}
manuscript_submissions$type <- c("All", "Original")
year <- excel_sheets(file)[x]
data <- manuscript_submissions %>% pivot_longer(-type)
df <- rbind(data, letter_df) %>% as_tibble()
data <- data %>% mutate(year = as.numeric(year))
return(data)
}
get_jacc_data <- function(x, file){
manuscript_submissions <- read_excel(path = file, sheet = x) %>% filter(...1 == "Total Manuscripts") %>% select(-1) %>% unname() %>% unlist() %>% na.omit() %>% as.numeric()
print(length(manuscript_submissions)) #should be 13
entries <- c(month.name, "Total")
year <- excel_sheets(file)[x]
data <- data.frame(year = rep(year, length(entries)), name = entries, value = manuscript_submissions)
return(data)
}
#for single total manuscripts only showing All (old harlan file)
#df <- lapply(1:n.sheets, function(x) get_jacc_data(x = x, file = file))
df <- lapply(1:n.sheets, function(x) get_jacc_data_multi(x = x, file = file))
df <- do.call(rbind, df)
df <- df %>% as_tibble() %>% type.convert(as.is = TRUE)
df2 <- df %>% filter(year < 2024)
settype <- "Letters"
df <- df2 %>% filter(type == settype)
yearlabel <- excel_sheets(file) %>% as.numeric() %>% range()
yearlytrend_fig <- df %>% filter(name == "Total") %>% ggplot(aes(x=year, y = value)) + geom_point(size = 3.5, color = "grey30") + geom_line(size = 0.75, color = "grey40") + theme_minimal() + scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) + scale_x_continuous(breaks = seq(yearlabel[1], yearlabel[2], 1)) + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank(), axis.ticks = element_line(color = "black"), axis.text = element_text(size = 12), axis.title = element_text(size = 15), axis.text.x = element_text(angle = 0, hjust = 0.5, size = 10)) + xlab("Year") + ylab(paste0(settype, " Submissions to JACC"))
#limits = c(3000, 7000)
month_names <- month.name
month_numeric <- match(month_names, month.name)
month_named_vector <- setNames(month_numeric, month_names)
m.df <- df %>% filter(name != "Total") %>% mutate(name = factor(name, levels = month.name)) %>% arrange(year) %>% mutate(label = paste0(name, year))
m.df$month_num <- month_named_vector[m.df$name] %>% unname()
m.df$label <- factor(m.df$label, levels = m.df$label)
m.df$year <- factor(m.df$year, levels = seq(2002, 2023, 1))
m.df$idx <- 1
monthtrend_fig <- (m.df %>% ggplot(aes(x=label, y=value, color = year, group = idx)) + geom_point(size = 2.75) + geom_line(size = 0.6, color = "grey80", alpha = 0.7) + theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank(), axis.ticks = element_line(color = "black")) + scale_color_manual(values = rep(c("navy", "navy"), 11)) + theme(legend.position = "none") + xlab("Months (2002 - 2023)") + ylab(paste0(settype, " Submissions to JACC")) + theme(axis.text = element_text(size = 14), axis.title = element_text(size = 16)) + scale_y_continuous(breaks = scales::pretty_breaks(n = 10))  + scale_x_discrete(breaks = m.df$label[seq(1, nrow(m.df), by = 12)], labels = unique(m.df$year), expand = c(0.05, 0)) )
df2
settype <- "Letters"
df <- df2 %>% filter(type == settype)
yearlabel <- excel_sheets(file) %>% as.numeric() %>% range()
yearlytrend_fig <- df %>% filter(name == "Total") %>% ggplot(aes(x=year, y = value)) + geom_point(size = 3.5, color = "grey30") + geom_line(size = 0.75, color = "grey40") + theme_minimal() + scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) + scale_x_continuous(breaks = seq(yearlabel[1], yearlabel[2], 1)) + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank(), axis.ticks = element_line(color = "black"), axis.text = element_text(size = 12), axis.title = element_text(size = 15), axis.text.x = element_text(angle = 0, hjust = 0.5, size = 10)) + xlab("Year") + ylab(paste0(settype, " Submissions to JACC"))
yearlytrend_fig
df
library(tidyverse)
library(readxl)
#file <- "~/Downloads/yearlystats-jacc.xlsx"
file <- "~/Downloads/jacc-data.xlsx"
n.sheets <- length(excel_sheets(file))
#year, month (incl total), number, article type
get_jacc_data_multi <- function(x, file){
manuscript_submissions <- read_excel(path = file, sheet = x)
#All Paper, Original Research, Research Letters, (Reviews/Invited pieces)
#Only the first three matters, 2005+ has research letters
manuscript_submissions <- manuscript_submissions[manuscript_submissions$`All papers`=="Total Manuscripts" & !is.na(manuscript_submissions$`All papers`),]
manuscript_submissions <- manuscript_submissions %>% select_if(~ !all(is.na(.)))
manuscript_submissions <- manuscript_submissions %>% select(-1)
colnames(manuscript_submissions) <- c(month.name, "Total")
if (nrow(manuscript_submissions) > 2){
row <- ((read_excel(path = file, sheet = x)  %>% mutate(idx = 1:n()) %>%
filter(`All papers` == "Total Manuscripts") %>% tail(n = 1) %>% pull(idx) ) )
letter_data <- read_excel(path = file, sheet = x)[c(row-1, row), ]
letter_records <- letter_data %>% select(-1) %>% slice(1) %>% select_if(~ !all(is.na(.))) %>% unname() %>% unlist()
letter_values <- letter_data %>% select(-1) %>% slice(2) %>% select_if(~ !all(is.na(.))) %>% unname() %>% unlist()
if (length(setdiff(c(month.name, "Total"), letter_records)) > 0){
print(setdiff(c(month.name, "Total"), letter_records))
letter_df <- rbind(data.frame(name = setdiff(c(month.name, "Total"), letter_records), value = 0), data.frame(name = letter_records, value = letter_values)) %>% mutate(type = "Letters")
} else{
letter_df <- data.frame(name = letter_records, value = letter_values) %>% mutate(type = "Letters")
}
manuscript_submissions <- manuscript_submissions[1:2,]
manuscript_submissions$type <- c("All", "Original")
year <- excel_sheets(file)[x]
data <- manuscript_submissions %>% pivot_longer(-type)
data <- rbind(data, letter_df) %>% as_tibble()
data <- data %>% mutate(year = as.numeric(year))
}
manuscript_submissions$type <- c("All", "Original")
year <- excel_sheets(file)[x]
data <- manuscript_submissions %>% pivot_longer(-type)
data <- data %>% mutate(year = as.numeric(year))
return(data)
}
get_jacc_data <- function(x, file){
manuscript_submissions <- read_excel(path = file, sheet = x) %>% filter(...1 == "Total Manuscripts") %>% select(-1) %>% unname() %>% unlist() %>% na.omit() %>% as.numeric()
print(length(manuscript_submissions)) #should be 13
entries <- c(month.name, "Total")
year <- excel_sheets(file)[x]
data <- data.frame(year = rep(year, length(entries)), name = entries, value = manuscript_submissions)
return(data)
}
#for single total manuscripts only showing All (old harlan file)
#df <- lapply(1:n.sheets, function(x) get_jacc_data(x = x, file = file))
df <- lapply(1:n.sheets, function(x) get_jacc_data_multi(x = x, file = file))
df <- do.call(rbind, df)
df <- df %>% as_tibble() %>% type.convert(as.is = TRUE)
df2 <- df %>% filter(year < 2024)
settype <- "Letters"
df <- df2 %>% filter(type == settype)
yearlabel <- excel_sheets(file) %>% as.numeric() %>% range()
yearlytrend_fig <- df %>% filter(name == "Total") %>% ggplot(aes(x=year, y = value)) + geom_point(size = 3.5, color = "grey30") + geom_line(size = 0.75, color = "grey40") + theme_minimal() + scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) + scale_x_continuous(breaks = seq(yearlabel[1], yearlabel[2], 1)) + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank(), axis.ticks = element_line(color = "black"), axis.text = element_text(size = 12), axis.title = element_text(size = 15), axis.text.x = element_text(angle = 0, hjust = 0.5, size = 10)) + xlab("Year") + ylab(paste0(settype, " Submissions to JACC"))
#limits = c(3000, 7000)
month_names <- month.name
month_numeric <- match(month_names, month.name)
month_named_vector <- setNames(month_numeric, month_names)
m.df <- df %>% filter(name != "Total") %>% mutate(name = factor(name, levels = month.name)) %>% arrange(year) %>% mutate(label = paste0(name, year))
m.df$month_num <- month_named_vector[m.df$name] %>% unname()
m.df$label <- factor(m.df$label, levels = m.df$label)
m.df$year <- factor(m.df$year, levels = seq(2002, 2023, 1))
m.df$idx <- 1
monthtrend_fig <- (m.df %>% ggplot(aes(x=label, y=value, color = year, group = idx)) + geom_point(size = 2.75) + geom_line(size = 0.6, color = "grey80", alpha = 0.7) + theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank(), axis.ticks = element_line(color = "black")) + scale_color_manual(values = rep(c("navy", "navy"), 11)) + theme(legend.position = "none") + xlab("Months (2002 - 2023)") + ylab(paste0(settype, " Submissions to JACC")) + theme(axis.text = element_text(size = 14), axis.title = element_text(size = 16)) + scale_y_continuous(breaks = scales::pretty_breaks(n = 10))  + scale_x_discrete(breaks = m.df$label[seq(1, nrow(m.df), by = 12)], labels = unique(m.df$year), expand = c(0.05, 0)) )
yearlytrend_fig
df
get_jacc_data(x =1, file = file)
get_jacc_data_multi(x =1, file = file)
get_jacc_data_multi(x =1, file = file) %>% filter(type == "Letters")
get_jacc_data_multi(x =1, file = file) %>% filter(type == "Letter")
get_jacc_data_multi <- function(x, file){
manuscript_submissions <- read_excel(path = file, sheet = x)
#All Paper, Original Research, Research Letters, (Reviews/Invited pieces)
#Only the first three matters, 2005+ has research letters
manuscript_submissions <- manuscript_submissions[manuscript_submissions$`All papers`=="Total Manuscripts" & !is.na(manuscript_submissions$`All papers`),]
manuscript_submissions <- manuscript_submissions %>% select_if(~ !all(is.na(.)))
manuscript_submissions <- manuscript_submissions %>% select(-1)
colnames(manuscript_submissions) <- c(month.name, "Total")
if (nrow(manuscript_submissions) > 2){
row <- ((read_excel(path = file, sheet = x)  %>% mutate(idx = 1:n()) %>%
filter(`All papers` == "Total Manuscripts") %>% tail(n = 1) %>% pull(idx) ) )
letter_data <- read_excel(path = file, sheet = x)[c(row-1, row), ]
letter_records <- letter_data %>% select(-1) %>% slice(1) %>% select_if(~ !all(is.na(.))) %>% unname() %>% unlist()
letter_values <- letter_data %>% select(-1) %>% slice(2) %>% select_if(~ !all(is.na(.))) %>% unname() %>% unlist()
if (length(setdiff(c(month.name, "Total"), letter_records)) > 0){
print(setdiff(c(month.name, "Total"), letter_records))
letter_df <- rbind(data.frame(name = setdiff(c(month.name, "Total"), letter_records), value = 0), data.frame(name = letter_records, value = letter_values)) %>% mutate(type = "Letters")
} else{
letter_df <- data.frame(name = letter_records, value = letter_values) %>% mutate(type = "Letters")
}
manuscript_submissions <- manuscript_submissions[1:2,]
manuscript_submissions$type <- c("All", "Original")
year <- excel_sheets(file)[x]
data <- manuscript_submissions %>% pivot_longer(-type)
data <- rbind(data, letter_df) %>% as_tibble()
data <- data %>% mutate(year = as.numeric(year))
} else{
manuscript_submissions$type <- c("All", "Original")
year <- excel_sheets(file)[x]
data <- manuscript_submissions %>% pivot_longer(-type)
data <- data %>% mutate(year = as.numeric(year))
}
return(data)
}
get_jacc_data_multi(x =1, file = file) %>% filter(type == "Letter")
x <- 5
manuscript_submissions <- read_excel(path = file, sheet = x)
#All Paper, Original Research, Research Letters, (Reviews/Invited pieces)
#Only the first three matters, 2005+ has research letters
manuscript_submissions <- manuscript_submissions[manuscript_submissions$`All papers`=="Total Manuscripts" & !is.na(manuscript_submissions$`All papers`),]
manuscript_submissions <- manuscript_submissions %>% select_if(~ !all(is.na(.)))
manuscript_submissions <- manuscript_submissions %>% select(-1)
colnames(manuscript_submissions) <- c(month.name, "Total")
manuscript_submissions
nrow(manuscript_submissions) > 2
row <- ((read_excel(path = file, sheet = x)  %>% mutate(idx = 1:n()) %>%
filter(`All papers` == "Total Manuscripts") %>% tail(n = 1) %>% pull(idx) ) )
letter_data <- read_excel(path = file, sheet = x)[c(row-1, row), ]
letter_records <- letter_data %>% select(-1) %>% slice(1) %>% select_if(~ !all(is.na(.))) %>% unname() %>% unlist()
letter_values <- letter_data %>% select(-1) %>% slice(2) %>% select_if(~ !all(is.na(.))) %>% unname() %>% unlist()
length(setdiff(c(month.name, "Total"), letter_records))
print(setdiff(c(month.name, "Total"), letter_records))
letter_df <- rbind(data.frame(name = setdiff(c(month.name, "Total"), letter_records), value = 0), data.frame(name = letter_records, value = letter_values)) %>% mutate(type = "Letters")
letter_df
manuscript_submissions <- manuscript_submissions[1:2,]
manuscript_submissions$type <- c("All", "Original")
manuscript_submissions
year <- excel_sheets(file)[x]
data <- manuscript_submissions %>% pivot_longer(-type)
data
rbind(data, letter_df) %>% as_tibble()
rbind(data, letter_df) %>% as_tibble() %>% filter(name == "Letter")
rbind(data, letter_df) %>% as_tibble() %>% filter(name == "Letters")
rbind(data, letter_df) %>% as_tibble() %>% filter(type == "Letters")
get_jacc_data_multi <- function(x, file){
manuscript_submissions <- read_excel(path = file, sheet = x)
#All Paper, Original Research, Research Letters, (Reviews/Invited pieces)
#Only the first three matters, 2005+ has research letters
manuscript_submissions <- manuscript_submissions[manuscript_submissions$`All papers`=="Total Manuscripts" & !is.na(manuscript_submissions$`All papers`),]
manuscript_submissions <- manuscript_submissions %>% select_if(~ !all(is.na(.)))
manuscript_submissions <- manuscript_submissions %>% select(-1)
colnames(manuscript_submissions) <- c(month.name, "Total")
if (nrow(manuscript_submissions) > 2){
row <- ((read_excel(path = file, sheet = x)  %>% mutate(idx = 1:n()) %>%
filter(`All papers` == "Total Manuscripts") %>% tail(n = 1) %>% pull(idx) ) )
letter_data <- read_excel(path = file, sheet = x)[c(row-1, row), ]
letter_records <- letter_data %>% select(-1) %>% slice(1) %>% select_if(~ !all(is.na(.))) %>% unname() %>% unlist()
letter_values <- letter_data %>% select(-1) %>% slice(2) %>% select_if(~ !all(is.na(.))) %>% unname() %>% unlist()
if (length(setdiff(c(month.name, "Total"), letter_records)) > 0){
print(setdiff(c(month.name, "Total"), letter_records))
letter_df <- rbind(data.frame(name = setdiff(c(month.name, "Total"), letter_records), value = 0), data.frame(name = letter_records, value = letter_values)) %>% mutate(type = "Letters")
} else{
letter_df <- data.frame(name = letter_records, value = letter_values) %>% mutate(type = "Letters")
}
manuscript_submissions <- manuscript_submissions[1:2,]
manuscript_submissions$type <- c("All", "Original")
year <- excel_sheets(file)[x]
data <- manuscript_submissions %>% pivot_longer(-type)
data <- rbind(data, letter_df) %>% as_tibble()
data <- data %>% mutate(year = as.numeric(year))
} else{
manuscript_submissions$type <- c("All", "Original")
year <- excel_sheets(file)[x]
data <- manuscript_submissions %>% pivot_longer(-type)
data <- data %>% mutate(year = as.numeric(year))
}
return(data)
}
get_jacc_data(x = x, file = file) %>% filter(type == "Letters")
get_jacc_data_multi(x = x, file = file) %>% filter(type == "Letters")
get_jacc_data_multi <- function(x, file){
manuscript_submissions <- read_excel(path = file, sheet = x)
#All Paper, Original Research, Research Letters, (Reviews/Invited pieces)
#Only the first three matters, 2005+ has research letters
manuscript_submissions <- manuscript_submissions[manuscript_submissions$`All papers`=="Total Manuscripts" & !is.na(manuscript_submissions$`All papers`),]
manuscript_submissions <- manuscript_submissions %>% select_if(~ !all(is.na(.)))
manuscript_submissions <- manuscript_submissions %>% select(-1)
colnames(manuscript_submissions) <- c(month.name, "Total")
if (nrow(manuscript_submissions) > 2){
row <- ((read_excel(path = file, sheet = x)  %>% mutate(idx = 1:n()) %>%
filter(`All papers` == "Total Manuscripts") %>% tail(n = 1) %>% pull(idx) ) )
letter_data <- read_excel(path = file, sheet = x)[c(row-1, row), ]
letter_records <- letter_data %>% select(-1) %>% slice(1) %>% select_if(~ !all(is.na(.))) %>% unname() %>% unlist()
letter_values <- letter_data %>% select(-1) %>% slice(2) %>% select_if(~ !all(is.na(.))) %>% unname() %>% unlist()
if (length(setdiff(c(month.name, "Total"), letter_records)) > 0){
print(setdiff(c(month.name, "Total"), letter_records))
letter_df <- rbind(data.frame(name = setdiff(c(month.name, "Total"), letter_records), value = 0), data.frame(name = letter_records, value = letter_values)) %>% mutate(type = "Letters")
} else{
letter_df <- data.frame(name = letter_records, value = letter_values) %>% mutate(type = "Letters")
}
manuscript_submissions <- manuscript_submissions[1:2,]
manuscript_submissions$type <- c("All", "Original")
year <- excel_sheets(file)[x]
data <- manuscript_submissions %>% pivot_longer(-type)
data <- rbind(data, letter_df) %>% as_tibble()
data <- data %>% mutate(year = as.numeric(year))
} else{
manuscript_submissions$type <- c("All", "Original")
year <- excel_sheets(file)[x]
data <- manuscript_submissions %>% pivot_longer(-type)
data <- data %>% mutate(year = as.numeric(year))
}
return(data)
}
get_jacc_data <- function(x, file){
manuscript_submissions <- read_excel(path = file, sheet = x) %>% filter(...1 == "Total Manuscripts") %>% select(-1) %>% unname() %>% unlist() %>% na.omit() %>% as.numeric()
print(length(manuscript_submissions)) #should be 13
entries <- c(month.name, "Total")
year <- excel_sheets(file)[x]
data <- data.frame(year = rep(year, length(entries)), name = entries, value = manuscript_submissions)
return(data)
}
#for single total manuscripts only showing All (old harlan file)
#df <- lapply(1:n.sheets, function(x) get_jacc_data(x = x, file = file))
df <- lapply(1:n.sheets, function(x) get_jacc_data_multi(x = x, file = file))
df
df <- do.call(rbind, df)
df <- df %>% as_tibble() %>% type.convert(as.is = TRUE)
df2 <- df %>% filter(year < 2024)
df2 %>% filter(type == "Letters")
settype <- "Letters"
df <- df2 %>% filter(type == settype)
yearlabel <- excel_sheets(file) %>% as.numeric() %>% range()
yearlytrend_fig <- df %>% filter(name == "Total") %>% ggplot(aes(x=year, y = value)) + geom_point(size = 3.5, color = "grey30") + geom_line(size = 0.75, color = "grey40") + theme_minimal() + scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) + scale_x_continuous(breaks = seq(yearlabel[1], yearlabel[2], 1)) + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank(), axis.ticks = element_line(color = "black"), axis.text = element_text(size = 12), axis.title = element_text(size = 15), axis.text.x = element_text(angle = 0, hjust = 0.5, size = 10)) + xlab("Year") + ylab(paste0(settype, " Submissions to JACC"))
yearlytrend_fig
month_names <- month.name
month_numeric <- match(month_names, month.name)
month_named_vector <- setNames(month_numeric, month_names)
m.df <- df %>% filter(name != "Total") %>% mutate(name = factor(name, levels = month.name)) %>% arrange(year) %>% mutate(label = paste0(name, year))
m.df$month_num <- month_named_vector[m.df$name] %>% unname()
m.df$label <- factor(m.df$label, levels = m.df$label)
m.df$year <- factor(m.df$year, levels = seq(2002, 2023, 1))
m.df$idx <- 1
monthtrend_fig <- (m.df %>% ggplot(aes(x=label, y=value, color = year, group = idx)) + geom_point(size = 2.75) + geom_line(size = 0.6, color = "grey80", alpha = 0.7) + theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank(), axis.ticks = element_line(color = "black")) + scale_color_manual(values = rep(c("navy", "navy"), 11)) + theme(legend.position = "none") + xlab("Months (2002 - 2023)") + ylab(paste0(settype, " Submissions to JACC")) + theme(axis.text = element_text(size = 14), axis.title = element_text(size = 16)) + scale_y_continuous(breaks = scales::pretty_breaks(n = 10))  + scale_x_discrete(breaks = m.df$label[seq(1, nrow(m.df), by = 12)], labels = unique(m.df$year), expand = c(0.05, 0)) )
cowplot::plot_grid(yearlytrend_fig, monthtrend_fig, rel_widths = c(1, 1.3)) %>% ggsave(filename = paste0("~/Downloads/JACC-", settype ,".pdf"), plot = ., units = "in", height = 9, width = 24, device = cairo_pdf)
setwd("~/Documents/GitHub/cdc-wonder-mortality/code/")
library(tidyverse)
set.seed(123)
readTextFile <- function(filepath){
lines <- readLines(filepath)
index <- which(lines == '"---"')
if (length(index) > 0) {
lines <- lines[1:(index[1] - 1)]
}
list_of_vectors <- lapply(lines, function(x) unlist(strsplit(x, "\t")))
df <- do.call(rbind, lapply(list_of_vectors, function(x) as.data.frame(t(x))))
df <- df %>% as_tibble()
df[,1:11] <- lapply(df[,1:11], function(x) gsub('\\"', "", x))
colnames(df) <- df[1,]
df <- df[-1,]
df <- df %>% select(-Notes)
df
}
race6 <- readTextFile("../raw-data/2018-2020-race-6.txt")
race4 <- readTextFile("../raw-data/2018-2020-race-4.txt")
race6 <- race6 %>% mutate(Race = ifelse(`Single Race 6` %in% c("Asian", "Native Hawaiian or Other Pacific Islander"), "Asian or Pacific Islander", `Single Race 6`))
#supressed 1-9, unreliable 10-19
death_converter <- function(race6, race4){
race6 <- race6 %>% select(`Five-Year Age Groups`, Year, Gender, `Hispanic Origin`, Race, Deaths)
race4 <- race4 %>% select(`Five-Year Age Groups`, Year, Gender,  `Hispanic Origin`, Race, Deaths)
race6 <- race6 %>% mutate(Deaths = ifelse(Deaths == "Suppressed", sample(c(1:9), size = 1), Deaths)) %>% type.convert(as.is=TRUE)
race4 <- race4 %>% mutate(Deaths = ifelse(Deaths == "Suppressed", sample(c(1:9), size = 1), Deaths)) %>% type.convert(as.is=TRUE)
#take out More than one race in race6
other <- race6 %>% filter(Race == "More than one race")
race6 <- race6 %>% filter(Race != "More than one race")
df <- left_join(race6 %>% group_by(`Five-Year Age Groups`, Year, Gender, `Hispanic Origin`, Race) %>% summarize(deaths_6 = sum(Deaths)) %>% ungroup(Race) ,
race4 %>% group_by(`Five-Year Age Groups`, Year, Gender, `Hispanic Origin`, Race) %>% summarize(deaths_4 = sum(Deaths)) %>% ungroup(Race) )
df <- df %>% mutate(diff = deaths_6 - deaths_4) %>% mutate(diff = ifelse(diff > 0, 0, diff)) #cases where race6 deaths are greater than race4 would mean that we need to remove counts from race6 which does not make sense
df <- df %>% mutate(total = sum(diff)) %>% mutate(diff = abs(diff), total = abs(total)) %>% mutate(frac = ifelse(total > 0, diff / total, 0)) %>% select(1,2,3,4,5,10) %>% group_by(`Five-Year Age Groups`, Gender, `Hispanic Origin`, Race) %>% summarize(mean_frac = mean(frac))
df
}
pop_converter <- function(race6, race4){
race6 <- race6 %>% select(-Deaths)
race4 <- race4 %>% select(-Deaths)
colnames(race4)[colnames(race4) == "Population"] <- "Deaths"
colnames(race6)[colnames(race6) == "Population"] <- "Deaths"
race6$Deaths[race6$Deaths == "Not Applicable"] <- 0
race4$Deaths[race4$Deaths == "Not Applicable"] <- 0
race6 <- race6 %>% select(`Five-Year Age Groups`, Year, Gender, `Hispanic Origin`, Race, Deaths)
race4 <- race4 %>% select(`Five-Year Age Groups`, Year, Gender,  `Hispanic Origin`, Race, Deaths)
race6 <- race6 %>% mutate(Deaths = ifelse(Deaths == "Suppressed", sample(c(1:9), size = 1), Deaths)) %>% type.convert(as.is=TRUE)
race4 <- race4 %>% mutate(Deaths = ifelse(Deaths == "Suppressed", sample(c(1:9), size = 1), Deaths)) %>% type.convert(as.is=TRUE)
race6 <- race6 %>% mutate(Deaths = ifelse(Deaths == "Unreliable", sample(c(11:19), size = 1), Deaths)) %>% type.convert(as.is=TRUE)
race4 <- race4 %>% mutate(Deaths = ifelse(Deaths == "Unreliable", sample(c(11:19), size = 1), Deaths)) %>% type.convert(as.is=TRUE)
#take out More than one race in race6
other <- race6 %>% filter(Race == "More than one race")
race6 <- race6 %>% filter(Race != "More than one race")
df <- left_join(race6 %>% group_by(`Five-Year Age Groups`, Year, Gender, `Hispanic Origin`, Race) %>% summarize(deaths_6 = sum(Deaths)) %>% ungroup(Race) ,
race4 %>% group_by(`Five-Year Age Groups`, Year, Gender, `Hispanic Origin`, Race) %>% summarize(deaths_4 = sum(Deaths)) %>% ungroup(Race) )
df <- df %>% mutate(diff = deaths_6 - deaths_4) %>% mutate(diff = ifelse(diff > 0, 0, diff)) #cases where race6 deaths are greater than race4 would mean that we need to remove counts from race6 which does not make sense
df <- df %>% mutate(total = sum(diff)) %>% mutate(diff = abs(diff), total = abs(total)) %>% mutate(frac = ifelse(total > 0, diff / total, 0)) %>% select(1,2,3,4,5,10) %>% group_by(`Five-Year Age Groups`, Gender, `Hispanic Origin`, Race) %>% summarize(mean_frac = mean(frac))
df
}
death_conversion_table <- death_converter(race6, race4)
pop_conversion_table <- pop_converter(race6, race4)
### Perform Conversion
#Rates are marked as "not applicable" when the denominator population figure is unavailable, such as "not stated" or unknown age or ethnicity. Deaths of persons with "not stated" or unknown age are not included in the calculation of age-adjusted rates.
newdata <- lapply(list.files("../raw-data/mcd/2021", full.names = TRUE), function(x) readTextFile(x))
newdata <- do.call(rbind, newdata)
newdata <- newdata %>% mutate(Race = ifelse(`Single Race 6` %in% c("Asian", "Native Hawaiian or Other Pacific Islander"), "Asian or Pacific Islander", `Single Race 6`))
newdata <- newdata %>% mutate(Deaths = ifelse(Deaths == "Suppressed", sample(c(1:9), size = 1), Deaths)) %>% mutate(Population = ifelse(Population == "Suppressed", sample(c(1:9), size = 1), Population)) %>% mutate(Population = ifelse(Population == "Unreliable", sample(c(11:19), size = 1), Population)) %>% filter(Population != "Not Applicable") %>% type.convert(as.is = TRUE) %>% select(-c(`Single Race 6`, `Single Race 6 Code`)) %>% group_by_at(vars(-Deaths, -Population, -`Crude Rate`)) %>% summarize(Deaths = sum(Deaths), Population = sum(Population), `Crude Rate` = Deaths / Population) %>% ungroup()
other <- newdata %>% filter(Race== "More than one race")
list_fin <- list()
for (x in 1:nrow(other)){
row <- other[x,]
deaths <- row$Deaths
pop <- row$Population
a <- death_conversion_table %>% ungroup() %>% filter(`Five-Year Age Groups` == row$`Five-Year Age Groups`, Gender == row$Gender, `Hispanic Origin`==row$`Hispanic Origin`) %>% select(Race, mean_frac) %>% mutate(Deaths = round(mean_frac*deaths)) %>% select(-mean_frac)
b <- pop_conversion_table %>% ungroup() %>% filter(`Five-Year Age Groups` == row$`Five-Year Age Groups`, Gender == row$Gender, `Hispanic Origin`==row$`Hispanic Origin`) %>% select(Race, mean_frac) %>% mutate(Population = round(mean_frac*pop)) %>% select(-mean_frac)
fin <- cbind(left_join(a,b), row %>% select(-c(Deaths, Race, Population, `Crude Rate`)) %>% dplyr::slice(rep(row_number(), each = nrow(a)))) %>% as_tibble()
list_fin[[x]] <- fin
}
distr_counts <- do.call(rbind, list_fin) %>% as_tibble()
data <- newdata %>% filter(Race != "More than one race" )
corrected_data <- rbind(distr_counts %>% mutate(`Crude Rate`=0), data) %>% group_by(`Five-Year Age Groups`, Gender, `Hispanic Origin`, `Multiple Cause of death Code`, Race) %>% summarize(Deaths = sum(Deaths), Population = sum(Population))  %>% ungroup() %>% relocate(Deaths, Population)
write_csv(x = corrected_data, file = "../raw-data/mcd/corrected-2021-data-htn.csv")
newdata <- lapply(list.files("../raw-data/mcd/2022", full.names = TRUE), function(x) readTextFile(x))
newdata <- do.call(rbind, newdata)
newdata <- newdata %>% mutate(Race = ifelse(`Single Race 6` %in% c("Asian", "Native Hawaiian or Other Pacific Islander"), "Asian or Pacific Islander", `Single Race 6`))
newdata <- newdata %>% mutate(Deaths = ifelse(Deaths == "Suppressed", sample(c(1:9), size = 1), Deaths)) %>% mutate(Population = ifelse(Population == "Suppressed", sample(c(1:9), size = 1), Population)) %>% mutate(Population = ifelse(Population == "Unreliable", sample(c(11:19), size = 1), Population)) %>% filter(Population != "Not Applicable") %>% type.convert(as.is = TRUE) %>% select(-c(`Single Race 6`, `Single Race 6 Code`)) %>% group_by_at(vars(-Deaths, -Population, -`Crude Rate`)) %>% summarize(Deaths = sum(Deaths), Population = sum(Population), `Crude Rate` = Deaths / Population) %>% ungroup()
other <- newdata %>% filter(Race== "More than one race")
list_fin <- list()
for (x in 1:nrow(other)){
row <- other[x,]
deaths <- row$Deaths
pop <- row$Population
a <- death_conversion_table %>% ungroup() %>% filter(`Five-Year Age Groups` == row$`Five-Year Age Groups`, Gender == row$Gender, `Hispanic Origin`==row$`Hispanic Origin`) %>% select(Race, mean_frac) %>% mutate(Deaths = round(mean_frac*deaths)) %>% select(-mean_frac)
b <- pop_conversion_table %>% ungroup() %>% filter(`Five-Year Age Groups` == row$`Five-Year Age Groups`, Gender == row$Gender, `Hispanic Origin`==row$`Hispanic Origin`) %>% select(Race, mean_frac) %>% mutate(Population = round(mean_frac*pop)) %>% select(-mean_frac)
fin <- cbind(left_join(a,b), row %>% select(-c(Deaths, Race, Population, `Crude Rate`)) %>% dplyr::slice(rep(row_number(), each = nrow(a)))) %>% as_tibble()
list_fin[[x]] <- fin
}
distr_counts <- do.call(rbind, list_fin) %>% as_tibble()
data <- newdata %>% filter(Race != "More than one race" )
corrected_data <- rbind(distr_counts %>% mutate(`Crude Rate`=0), data) %>% group_by(`Five-Year Age Groups`, Gender, `Hispanic Origin`, `Multiple Cause of death Code`, Race) %>% summarize(Deaths = sum(Deaths), Population = sum(Population))  %>% ungroup() %>% relocate(Deaths, Population)
write_csv(x = corrected_data, file = "../raw-data/mcd/corrected-2022-data-htn.csv")
new_2021 <- "../raw-data/mcd/corrected-2021-data-htn.csv" %>% read_csv() %>% mutate(Year = 2021)
new_2022 <- "../raw-data/mcd/corrected-2022-data-htn.csv" %>% read_csv() %>% mutate(Year = 2022)
new <- rbind(new_2021, new_2022) %>% as_tibble()
htn_icdcodes <- c("I10", "I11", "I12", "I13", "I15")
parse_icdcode <- function(icdcodes){
icd10_codes <- gsub("\\.", "", icdcodes)
coderegex <- icd10_codes %>% paste0(., collapse = "|")
return(coderegex)
}
htn_new <- new %>% filter(grepl(parse_icdcode(htn_icdcodes), `Multiple Cause of death Code`))
#STEP1: need to save population data for 2021 and 2022
htn_pop_2021_2022 <- htn_new %>% select(Population, `Five-Year Age Groups`, Gender, `Hispanic Origin`, Race, Year) %>% distinct()
pop_2021_2022 <- htn_pop_2021_2022 %>% distinct() %>% as_tibble()
pop_master_df <- "../raw-data/population-1999-2020.txt" %>% readTextFile(.) %>% select(Race, `Hispanic Origin`, `Five-Year Age Groups`, Year, Gender, Population) %>% distinct()
master_pop <- rbind(pop_2021_2022, pop_master_df) %>% as_tibble()
master_pop %>% write_csv(., file = "../raw-data/mcd/master-population.csv")
#STEP2: edit 2021/2022 to be in the shape of 1999-2020 form which must be in the form of below
htn_new <- htn_new %>% filter(Deaths > 0) %>% select(-Population)
htn_new
htn_1999_2020 <- lapply(paste0("../raw-data/mcd/", seq(1999, 2020, 1), "-htn.txt"), function(x) readTextFile(x) %>% select(Race, `Hispanic Origin`, `Five-Year Age Groups`, `Multiple Cause of death Code`, Gender, Deaths) %>% filter(grepl(parse_icdcode(htn_icdcodes), `Multiple Cause of death Code`)) %>% filter(Deaths > 0) %>% mutate(Year = str_sub(basename(x), 1, 4) %>% as.numeric()) )
htn_1999_2020
htn_df <- rbind(do.call(rbind, htn_1999_2020) %>% as_tibble(), htn_new) %>% as_tibble()
htn_df <- htn_df %>% mutate(Deaths = ifelse(Deaths == "Suppressed", sample(seq(1, 9, 1), replace = TRUE, size = 1), Deaths))
htn_df <- htn_df %>% type.convert(as.is = TRUE)
colnames(htn_df)[colnames(htn_df) == "Multiple Cause of death Code"] <- "Cause of death Code"
htn_df %>% write_csv(., file = "../raw-data/mcd/htn-deaths.csv")
htn_df
