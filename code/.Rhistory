excess_deaths_age
excess_deaths_age %>% select(age_cat, age, Gender, white_death_rate, black_death_rate)
excess_deaths_age %>% select(age_cat, age, Gender, white_death_rate, black_death_rate) %>% select(age_cat, Gender, white_death_rate, black_death_rate)
excess_deaths_age %>% select(age_cat, age, Gender, white_death_rate, black_death_rate) %>% ungroup() %>% select(age_cat, Gender, white_death_rate, black_death_rate)
excess_deaths_age %>% select(age_cat, age, Gender, white_death_rate, black_death_rate) %>% ungroup() %>% select(age_cat, Gender, white_death_rate, black_death_rate) %>% pivot_longer(cols = ends_with("_death_rate"),
names_to = "AgeType",
values_to = "Value") %>%
pivot_wider(names_from = c(AgeType, Gender),
values_from = Value) %>%
rename_with(~ str_replace_all(.x, "_death_rate", ""),
ends_with("_death_rate"))
excess_deaths_age %>% select(age_cat, age, Gender, white_death_rate, black_death_rate) %>% ungroup() %>% select(age_cat, Gender, white_death_rate, black_death_rate) %>% pivot_longer(cols = ends_with("_death_rate"), names_to = "AgeType", values_to = "Value") %>%
pivot_wider(names_from = c(AgeType, Gender),
values_from = Value) %>%
rename_with(~ str_replace_all(.x, "_death_rate", ""),
ends_with("_death_rate"))
excess_deaths_age
excess_deaths_age %>% select(age_cat, Gender, unadj_excess_deaths_number, unadj_excess_deaths_rate)
excess_deaths_age %>% select(age_cat, Gender, unadj_excess_deaths_number, unadj_excess_deaths_rate) %>%
pivot_longer(cols = starts_with("unadj"),
names_to = "Metric",
values_to = "Value") %>%
pivot_wider(names_from = c(Gender, Metric),
values_from = Value) %>%
select(Year, starts_with("unadj"))
excess_deaths_age %>% select(age_cat, Gender, unadj_excess_deaths_number, unadj_excess_deaths_rate) %>%
pivot_longer(cols = starts_with("unadj"),
names_to = "Metric",
values_to = "Value") %>%
pivot_wider(names_from = c(Gender, Metric),
values_from = Value) %>%
select(age_cat, starts_with("unadj"))
excess_deaths_age %>% select(age_cat, Gender, unadj_excess_deaths_number, unadj_excess_deaths_rate) %>% ungroup() %>%
pivot_longer(cols = starts_with("unadj"),
names_to = "Metric",
values_to = "Value") %>%
pivot_wider(names_from = c(Gender, Metric),
values_from = Value) %>%
select(age_cat, starts_with("unadj"))
excess_deaths_age %>% select(age_cat, Gender, unadj_excess_deaths_number, unadj_excess_deaths_rate) %>% ungroup() %>%
pivot_longer(cols = starts_with("unadj"),
names_to = "Metric",
values_to = "Value") %>%
pivot_wider(names_from = c(Gender, Metric),
values_from = Value)
excess_deaths_age %>% select(age_cat, Gender, unadj_excess_deaths_number, unadj_excess_deaths_rate) %>% ungroup()
excess_deaths_age %>% select(age_cat, Gender, unadj_excess_deaths_number, unadj_excess_deaths_rate) %>% ungroup() %>%
pivot_longer(cols = starts_with("unadj"),
names_to = "Metric",
values_to = "Value") %>%
pivot_wider(names_from = c(Gender, Metric),
values_from = Value) %>%
select(age_cat, starts_with("Female"), starts_with("Male"))
excess_deaths_age
library(splines)
project <- args[1]
years <- seq(1999, 2021, 1)
inputfile <- file.path(file.path("../data", project), "export_age_deaths_race_gender_year_se.tsv")
lifeexp_file <- "../data/file_life_expectancy_1999_to_2020.dta"
outputdir <- file.path("../results", project, "life-years-lost-by-year")
#create age categorical buckets
age_intervals <- c(0, 1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, Inf)
#plot path
plotdir <- file.path("../../cdc-wonder-output", project, "life-years-lost-by-year")
#palette of colors
cbb <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
##### CODE ######
data <- preprocess_cdc_wonder(inputfile)
agecodes <- data$`Single-Year Ages Code`
data <- data %>% select(-ends_with("code"))
cols.to.rename <- c("Single-Year Ages", "Crude Rate Upper 95% Confidence Interval", "Crude Rate Standard Error", "Crude Rate Lower 95% Confidence Interval")
new.col.names <- c("agegroup", "cruderate_ci_ub", "cruderate_se", "cruderate_ci_lb")
data <- rename_columns(data, cols.to.rename, new.col.names)
data$age <- agecodes
data <- data %>% mutate(age=ifelse(age==999, NA, age))
data <- data %>% type.convert()
data <- data %>% mutate(age_cat = cut(age, breaks=age_intervals, right=FALSE)) %>% mutate(age_cat=as.character(age_cat))
data <- data %>% mutate(age_cat = ifelse(age == 85, "85+", age_cat))
data <- data %>% type.convert(as.is=TRUE)
data <- data %>% filter(!is.na(Population))
data_by_age_gender_race <- data %>% group_by(age_cat, Gender, Race, Year) %>% summarize(deaths=sum(Deaths), population=sum(Population),cruderate=mean(`Crude Rate`) ) %>% ungroup()
#combine with life expectancy table
life_exp <- read_dta(lifeexp_file) %>% mutate(Gender=factor(gender)) %>% mutate(Gender=ifelse(Gender=="1", "Female", "Male")) %>% select(-gender) %>% mutate(Gender = as.character(Gender))
data_combined <- data_by_age_gender_race %>% mutate(age_bkt_lb = as.numeric(sub("\\[(\\d+),.*", "\\1", age_cat))) %>% left_join(life_exp, by=c("age_bkt_lb"="age_cat", "Year"="year", "Gender"="Gender")) %>% filter(!is.na(life_expectancy))
#variable life expectancy is the average remaining years people would have lived if didn't die:
data_combined <- data_combined %>% mutate(yrs_lost=life_expectancy*((deaths/population)*100000) )
#Estimating yrs_lost SE.
zcrit <- qnorm(0.975)
#Wald interval, which is based on the assumption that the sampling distribution of the proportion is approximately normal. The CI is calculated as proportion +/- z*standard_error
#standard error of binomial is sqrt(p*(1-p) / n)
lly <- data_combined %>% mutate(prop = deaths / population, se = sqrt(prop * (1-prop) * (1/population) ), yrs_lost_se = (life_expectancy * se * 100000 )^2 ) %>% group_by(Gender, Race, Year) %>% summarize(yrs_lost=mean(yrs_lost), n=n(), yrs_lost_se=sum(yrs_lost_se), population=sum(population)) %>% ungroup() %>% mutate(yrs_lost_se = sqrt(yrs_lost_se/n))
excess_pll <- lly %>% group_by(Gender, Year) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], excess_yrs_lost_se = sqrt(sum(yrs_lost_se^2) ), excess_yrs_lost_lb = excess_yrs_lost - (excess_yrs_lost_se * zcrit), excess_yrs_lost_ub = excess_yrs_lost + (excess_yrs_lost_se * zcrit), ratio_excess_yrs_lost = yrs_lost[Race==1]/yrs_lost[Race==3], exc_ypll_number = excess_yrs_lost * population[Race==1] * (1/100000), yrs_lost_black = yrs_lost[Race==1], yrs_lost_white=yrs_lost[Race==3]) %>% ungroup()
women.pll <- gender_arima_years_lost(lly, excess_pll, "Female", 2012, zcrit)
men.pll <- gender_arima_years_lost(lly, excess_pll, "Male", c(2007, 2011), zcrit)
excess_pll %>% group_by(Gender) %>% summarize(exc_ypll_number = sum(exc_ypll_number), excess_yrs_lost = mean(excess_yrs_lost), yrs_lost_black = mean(yrs_lost_black), yrs_lost_white = mean(yrs_lost_white))
excess_pll %>% group_by(Year) %>% summarize(exc_ypll_number = sum(exc_ypll_number))
excess_pll_w_pred <- excess_pll %>% left_join(women.pll$arima %>% select(-excess_yrs_lost), by=c("Gender"="Gender", "Year"="Year")) %>% left_join(., men.pll$arima %>% select(-excess_yrs_lost), by=c("Gender"="Gender", "Year"="Year")) %>% mutate(pred_excess_yrs_lost = ifelse(is.na(pred_excess_yrs_lost.x), pred_excess_yrs_lost.y, pred_excess_yrs_lost.x)) %>% select(-c(pred_excess_yrs_lost.y, pred_excess_yrs_lost.x))
excess_pll_w_pred
excess_pll_w_pred %>% select(Gender, Year, excess_yrs_lost)
excess_pll_w_pred %>% select(Gender, Year, excess_yrs_lost) %>% pull(excess_yrs_lost) %>% unique()
excess_pll_w_pred %>% select(Gender, Year, excess_yrs_lost) %>% pull(Year) %>% unique()
excess_pll_w_pred %>% select(Gender, Year, excess_yrs_lost)
excess_pll_w_pred %>% select(Gender, Year, excess_yrs_lost, exc_ypll_number)
excess_pll_w_pred %>% select(Gender, Year, excess_yrs_lost, exc_ypll_number) %>%
pivot_longer(cols = starts_with("exc"),
names_to = "AgeType",
values_to = "Value") %>%
pivot_wider(names_from = c(AgeType, Gender),
values_from = Value) %>%
rename_with(~ str_replace_all(.x, "exc_", ""),
starts_with("exc"))
excess_pll_w_pred %>% select(Gender, Year, excess_yrs_lost, exc_ypll_number) %>% magrittr::set_colnames(c("Gender", "Year", "excess_ypll_rate", "excess_ypll_number")) %>%
pivot_longer(cols = starts_with("exc"),
names_to = "AgeType",
values_to = "Value") %>%
pivot_wider(names_from = c(AgeType, Gender),
values_from = Value) %>%
rename_with(~ str_replace_all(.x, "exc_", ""),
starts_with("exc"))
excess_pll_w_pred %>% select(Gender, Year, excess_yrs_lost, exc_ypll_number) %>% magrittr::set_colnames(c("Gender", "Year", "excess_ypll_rate", "excess_ypll_number")) %>%
pivot_longer(cols = starts_with("exc"),
names_to = "AgeType",
values_to = "Value") %>%
pivot_wider(names_from = c(AgeType, Gender),
values_from = Value) %>%
rename_with(~ str_replace_all(.x, "exc_", ""),
starts_with("exc")) %>% relocate(1,2,4,3,5)
pll_indiv_table <- excess_pll_w_pred %>% select(Gender, Year, excess_yrs_lost, exc_ypll_number) %>% magrittr::set_colnames(c("Gender", "Year", "excess_ypll_rate", "excess_ypll_number")) %>%
pivot_longer(cols = starts_with("exc"),
names_to = "AgeType",
values_to = "Value") %>%
pivot_wider(names_from = c(AgeType, Gender),
values_from = Value) %>%
rename_with(~ str_replace_all(.x, "exc_", ""),
starts_with("exc")) %>% relocate(1,2,4,3,5)
tabledir <- file.path(dirname(outputdir), "tables")
age_intervals <- c(0, 1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, Inf)
#CDC Wonder input file
inputfile <- file.path(file.path("../data", project), "export_deaths_crude_race_gender_age_year.tsv")
lifeexp_file <- "../data/file_life_expectancy_1999_to_2020.dta"
#agefiles input
agefiles <- list.files(file.path("../data", project), "^deaths_crude_race_gender_age_", full.names=TRUE)
agefiles <- agefiles[grepl("year", agefiles)]
#output file name and directory
outputdir <- file.path("../results", project, "life-years-lost-by-age")
#table dir
tabledir <- file.path(dirname(outputdir), "tables")
#plot path
plotdir <- file.path("../../cdc-wonder-output", project, "life-years-lost-by-age")
#palette of colors
cbb <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
life_exp <- read_dta(lifeexp_file) %>% mutate(Gender=factor(gender)) %>% mutate(Gender=ifelse(Gender=="1", "Female", "Male")) %>% select(-gender) %>% mutate(Gender = as.character(Gender))
############ CODE ###############
process_df_ten_year_groups_tsv <- function(data){
data$age_cat <- data$`Ten-Year Age Groups`
data$age <- data$`Ten-Year Age Groups Code`
data <- data %>% mutate(age = ifelse(age==999, NA, age)) %>% type.convert() %>% mutate(age=str_extract(age, "\\d+"))
data <- data %>% select(-ends_with("code"))
data <- data %>% type.convert()
return(data)
}
process_df_tsv <- function(data, age_intervals){
if (identical(which(colnames(data) == "Single-Year Ages Code"), integer(0))) {
return( process_df_ten_year_groups_tsv(data) )
}
agecodes <- data$`Single-Year Ages Code`
data <- data %>% select(-ends_with("code"))
data$age <- agecodes
data <- data %>% mutate(age=ifelse(age==999, NA, age))
data <- data %>% type.convert()
data <- data %>% mutate(age_cat = cut(age, breaks=age_intervals, right=FALSE)) %>% mutate(age_cat=as.character(age_cat))
data <- data %>% type.convert(as.is=TRUE)
#age buckets formatting
data <- data %>% mutate(age_lb = as.numeric(sub("\\[(\\d+),.*", "\\1", age_cat)), age_ub = as.numeric(sub(".*,(\\d+)\\)", "\\1", age_cat)), age_cat = paste0(age_lb, "-", age_ub-1), age_cat=ifelse(age_cat=="0-0", "< 1", age_cat)) %>% mutate(age=age_lb) %>% select(-c(age_lb, age_ub))
data <- data %>% mutate(age_cat = ifelse(age == 85, "85+", age_cat))
return(data)
}
compute_statistics <- function(data, life_exp){
data <- data %>% filter(is.finite(as.numeric(Population))) %>% filter(is.finite(as.numeric(Deaths))) %>% filter(is.finite(as.numeric(`Crude Rate`))) %>% type.convert(as.is=TRUE)
data_agg <- data %>% group_by(age_cat, age, Gender, Race, Year) %>% summarize(deaths=sum(Deaths), population=sum(Population),cruderate=mean(`Crude Rate`) ) %>% ungroup()
data_combined <- data_agg %>% left_join(life_exp, by=c("age"="age_cat", "Year"="year", "Gender"="Gender"))
data_combined <- data_combined %>% mutate(yrs_lost=life_expectancy*((deaths/population)*100000) )
excess_ypll <- data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3]) %>% ungroup()
return(excess_ypll)
}
wrapper_pll_by_age <- function(relfilepath, life_exp, age_intervals){
data <- preprocess_cdc_wonder(relfilepath)
relfilepath <- basename(relfilepath)
data <- process_df_tsv(data, age_intervals)
excess_ypll <- compute_statistics(data, life_exp)
excess_ypll <- excess_ypll %>% mutate(Year = gsub("deaths_crude_race_gender_age_year_|\\.txt", "", relfilepath))
excess_ypll
}
data <- preprocess_cdc_wonder(inputfile)
excess_ypll <- data %>% process_df_tsv(age_intervals) %>% compute_statistics(life_exp)
age.data <- do.call(rbind, lapply(agefiles, function(x) wrapper_pll_by_age(x, life_exp, age_intervals)))
excess_ypll
aadr_indiv_table
age_intervals <- c(0, 1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, Inf)
#files with age related data
#starts with deaths_crude_race_gender_age but does not contain year in the file name
agefiles <- list.files(file.path("../data", project), "^deaths_crude_race_gender_age_", full.names=TRUE)
agefiles <- agefiles[!grepl("year", agefiles)]
#CDC Wonder input filea
# "export_deaths_crude_race_gender_age.txt"
inputfile <- file.path(file.path("../data", project), "export_deaths_crude_race_gender_age.tsv")
#output file name and directory
outputdir <- file.path("../results", project, "excess-mortality-by-age")
#table directory
tabledir <- file.path(dirname(outputdir), "tables")
#palette of colors
cbb <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
#plot path
plotdir <- file.path("../../cdc-wonder-output", project, "excess-mortality-by-age")
######### CODE ####################
process_df_tsv <- function(data, age_intervals){
agecodes <- data$`Single-Year Ages Code`
data <- data %>% select(-ends_with("code"))
data$age <- agecodes
data <- data %>% mutate(age=ifelse(age == 999, NA, age))
data <- data %>% type.convert()
data <- data %>% mutate(age_cat = cut(age, breaks=age_intervals, right=FALSE)) %>% mutate(age_cat=as.character(age_cat))
data <- data %>% type.convert(as.is=TRUE)
#age buckets formatting
data <- data %>% mutate(age_lb = as.numeric(sub("\\[(\\d+),.*", "\\1", age_cat)), age_ub = as.numeric(sub(".*,(\\d+)\\)", "\\1", age_cat)), age_cat = paste0(age_lb, "-", age_ub-1), age_cat=ifelse(age_cat=="0-0", "< 1", age_cat)) %>% mutate(age=age_lb) %>% select(-c(age_lb, age_ub))
data <- data %>% mutate(age_cat = ifelse(age == 85, "85+", age_cat))
return(data)
}
compute_statistics <- function(data){
data <- data %>% filter(is.finite(as.numeric(Deaths))) %>% filter(is.finite(as.numeric(Population))) %>% type.convert(as.is=TRUE)
data_agg <- data %>% group_by(age_cat, age, Gender, Race) %>% summarize(deaths=sum(Deaths), population=sum(Population),cruderate=mean(`Crude Rate`) ) %>% ungroup()
excess_deaths_age <- data_agg %>% group_by(age_cat, age, Gender) %>% summarize(unadj_excess_deaths_number = deaths[Race==1] - (population[Race==1]*(deaths[Race==3]/population[Race==3])), unadj_excess_deaths_rate = ((deaths[Race==1]/population[Race==1])*100000) - ((deaths[Race==3]/population[Race==3])*100000), ratio_unadj_excess_deaths_rate = ((deaths[Race==1]/population[Race==1])*100000) / ((deaths[Race==3]/population[Race==3])*100000), black_death_rate = (deaths[Race==1]/population[Race==1])*100000, white_death_rate = (deaths[Race==3] / population[Race==3])*100000)
return(list(data_agg=data_agg, excess_deaths_age = excess_deaths_age))
}
wrapper_age_excess_deaths <- function(relativefilepath, age_intervals){
data <- preprocess_cdc_wonder(relativefilepath)
relativefilepath <- basename(relativefilepath)
data <- process_df_tsv(data, age_intervals)
excess_deaths_age <- compute_statistics(data)$excess_deaths_age
excess_deaths_age <- excess_deaths_age %>% mutate(Year = gsub("deaths_crude_race_gender_age_|\\.txt", "", relativefilepath))
return(excess_deaths_age)
}
data <- preprocess_cdc_wonder(inputfile)
excess_deaths_age <- data %>% process_df_tsv(age_intervals) %>% compute_statistics() %>% purrr::pluck("excess_deaths_age")
age.data <- do.call(rbind, lapply(agefiles, function(x) wrapper_age_excess_deaths(x, age_intervals)))
#Table component
aadr_indiv_table <- excess_deaths_age %>% select(age_cat, age, Gender, white_death_rate, black_death_rate) %>% ungroup() %>% select(age_cat, Gender, white_death_rate, black_death_rate) %>% pivot_longer(cols = ends_with("_death_rate"), names_to = "AgeType", values_to = "Value") %>%
pivot_wider(names_from = c(AgeType, Gender),
values_from = Value) %>%
rename_with(~ str_replace_all(.x, "_death_rate", ""),
ends_with("_death_rate"))
aadr_indiv_table
excess_ypll
excess_ypll %>% select(Gender, age_cat, ,excess_yrs_lost)
data_combined
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], exc_pll_number = excess_yrs_lost * population[Race==1] * (1/100000) ) %>% ungroup()
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3],)
data_combined
compute_statistics <- function(data, life_exp){
data <- data %>% filter(is.finite(as.numeric(Population))) %>% filter(is.finite(as.numeric(Deaths))) %>% filter(is.finite(as.numeric(`Crude Rate`))) %>% type.convert(as.is=TRUE)
data_agg <- data %>% group_by(age_cat, age, Gender, Race, Year) %>% summarize(deaths=sum(Deaths), population=sum(Population),cruderate=mean(`Crude Rate`) ) %>% ungroup()
data_combined <- data_agg %>% left_join(life_exp, by=c("age"="age_cat", "Year"="year", "Gender"="Gender"))
data_combined <- data_combined %>% mutate(yrs_lost=life_expectancy*((deaths/population)*100000) )
excess_ypll <- data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], exc_pll_number = excess_yrs_lost * population[Race==1] * (1/100000) ) %>% ungroup()
return(excess_ypll)
}
process_df_tsv <- function(data, age_intervals){
if (identical(which(colnames(data) == "Single-Year Ages Code"), integer(0))) {
return( process_df_ten_year_groups_tsv(data) )
}
agecodes <- data$`Single-Year Ages Code`
data <- data %>% select(-ends_with("code"))
data$age <- agecodes
data <- data %>% mutate(age=ifelse(age==999, NA, age))
data <- data %>% type.convert()
data <- data %>% mutate(age_cat = cut(age, breaks=age_intervals, right=FALSE)) %>% mutate(age_cat=as.character(age_cat))
data <- data %>% type.convert(as.is=TRUE)
#age buckets formatting
data <- data %>% mutate(age_lb = as.numeric(sub("\\[(\\d+),.*", "\\1", age_cat)), age_ub = as.numeric(sub(".*,(\\d+)\\)", "\\1", age_cat)), age_cat = paste0(age_lb, "-", age_ub-1), age_cat=ifelse(age_cat=="0-0", "< 1", age_cat)) %>% mutate(age=age_lb) %>% select(-c(age_lb, age_ub))
data <- data %>% mutate(age_cat = ifelse(age == 85, "85+", age_cat))
return(data)
}
compute_statistics <- function(data, life_exp){
data <- data %>% filter(is.finite(as.numeric(Population))) %>% filter(is.finite(as.numeric(Deaths))) %>% filter(is.finite(as.numeric(`Crude Rate`))) %>% type.convert(as.is=TRUE)
data_agg <- data %>% group_by(age_cat, age, Gender, Race, Year) %>% summarize(deaths=sum(Deaths), population=sum(Population),cruderate=mean(`Crude Rate`) ) %>% ungroup()
data_combined <- data_agg %>% left_join(life_exp, by=c("age"="age_cat", "Year"="year", "Gender"="Gender"))
data_combined <- data_combined %>% mutate(yrs_lost=life_expectancy*((deaths/population)*100000) )
excess_ypll <- data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], exc_pll_number = excess_yrs_lost * population[Race==1] * (1/100000) ) %>% ungroup()
return(excess_ypll)
}
wrapper_pll_by_age <- function(relfilepath, life_exp, age_intervals){
data <- preprocess_cdc_wonder(relfilepath)
relfilepath <- basename(relfilepath)
data <- process_df_tsv(data, age_intervals)
excess_ypll <- compute_statistics(data, life_exp)
excess_ypll <- excess_ypll %>% mutate(Year = gsub("deaths_crude_race_gender_age_year_|\\.txt", "", relfilepath))
excess_ypll
}
data <- preprocess_cdc_wonder(inputfile)
excess_ypll <- data %>% process_df_tsv(age_intervals) %>% compute_statistics(life_exp)
age.data <- do.call(rbind, lapply(agefiles, function(x) wrapper_pll_by_age(x, life_exp, age_intervals)))
data <- preprocess_cdc_wonder(inputfile)
data <- data %>% process_df_tsv(age_intervals)
life_exp <- read_dta(lifeexp_file) %>% mutate(Gender=factor(gender)) %>% mutate(Gender=ifelse(Gender=="1", "Female", "Male")) %>% select(-gender) %>% mutate(Gender = as.character(Gender))
############ CODE ###############
process_df_ten_year_groups_tsv <- function(data){
data$age_cat <- data$`Ten-Year Age Groups`
data$age <- data$`Ten-Year Age Groups Code`
data <- data %>% mutate(age = ifelse(age==999, NA, age)) %>% type.convert() %>% mutate(age=str_extract(age, "\\d+"))
data <- data %>% select(-ends_with("code"))
data <- data %>% type.convert()
return(data)
}
process_df_tsv <- function(data, age_intervals){
if (identical(which(colnames(data) == "Single-Year Ages Code"), integer(0))) {
return( process_df_ten_year_groups_tsv(data) )
}
agecodes <- data$`Single-Year Ages Code`
data <- data %>% select(-ends_with("code"))
data$age <- agecodes
data <- data %>% mutate(age=ifelse(age==999, NA, age))
data <- data %>% type.convert()
data <- data %>% mutate(age_cat = cut(age, breaks=age_intervals, right=FALSE)) %>% mutate(age_cat=as.character(age_cat))
data <- data %>% type.convert(as.is=TRUE)
#age buckets formatting
data <- data %>% mutate(age_lb = as.numeric(sub("\\[(\\d+),.*", "\\1", age_cat)), age_ub = as.numeric(sub(".*,(\\d+)\\)", "\\1", age_cat)), age_cat = paste0(age_lb, "-", age_ub-1), age_cat=ifelse(age_cat=="0-0", "< 1", age_cat)) %>% mutate(age=age_lb) %>% select(-c(age_lb, age_ub))
data <- data %>% mutate(age_cat = ifelse(age == 85, "85+", age_cat))
return(data)
}
compute_statistics <- function(data, life_exp){
data <- data %>% filter(is.finite(as.numeric(Population))) %>% filter(is.finite(as.numeric(Deaths))) %>% filter(is.finite(as.numeric(`Crude Rate`))) %>% type.convert(as.is=TRUE)
data_agg <- data %>% group_by(age_cat, age, Gender, Race, Year) %>% summarize(deaths=sum(Deaths), population=sum(Population),cruderate=mean(`Crude Rate`) ) %>% ungroup()
data_combined <- data_agg %>% left_join(life_exp, by=c("age"="age_cat", "Year"="year", "Gender"="Gender"))
data_combined <- data_combined %>% mutate(yrs_lost=life_expectancy*((deaths/population)*100000) )
excess_ypll <- data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], exc_pll_number = excess_yrs_lost * population[Race==1] * (1/100000) ) %>% ungroup()
return(excess_ypll)
}
wrapper_pll_by_age <- function(relfilepath, life_exp, age_intervals){
data <- preprocess_cdc_wonder(relfilepath)
relfilepath <- basename(relfilepath)
data <- process_df_tsv(data, age_intervals)
excess_ypll <- compute_statistics(data, life_exp)
excess_ypll <- excess_ypll %>% mutate(Year = gsub("deaths_crude_race_gender_age_year_|\\.txt", "", relfilepath))
excess_ypll
}
data <- preprocess_cdc_wonder(inputfile)
excess_ypll <- data %>% process_df_tsv(age_intervals) %>% compute_statistics(life_exp)
data <- data %>% process_df_tsv(age_intervals)
data
data <- data %>% filter(is.finite(as.numeric(Population))) %>% filter(is.finite(as.numeric(Deaths))) %>% filter(is.finite(as.numeric(`Crude Rate`))) %>% type.convert(as.is=TRUE)
data_agg <- data %>% group_by(age_cat, age, Gender, Race, Year) %>% summarize(deaths=sum(Deaths), population=sum(Population),cruderate=mean(`Crude Rate`) ) %>% ungroup()
inputfile <- file.path(file.path("../data", project), "export_deaths_crude_race_gender_age_year.tsv")
lifeexp_file <- "../data/file_life_expectancy_1999_to_2020.dta"
#agefiles input
agefiles <- list.files(file.path("../data", project), "^deaths_crude_race_gender_age_", full.names=TRUE)
agefiles <- agefiles[grepl("year", agefiles)]
#output file name and directory
outputdir <- file.path("../results", project, "life-years-lost-by-age")
#table dir
tabledir <- file.path(dirname(outputdir), "tables")
#plot path
plotdir <- file.path("../../cdc-wonder-output", project, "life-years-lost-by-age")
#palette of colors
cbb <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
life_exp <- read_dta(lifeexp_file) %>% mutate(Gender=factor(gender)) %>% mutate(Gender=ifelse(Gender=="1", "Female", "Male")) %>% select(-gender) %>% mutate(Gender = as.character(Gender))
############ CODE ###############
process_df_ten_year_groups_tsv <- function(data){
data$age_cat <- data$`Ten-Year Age Groups`
data$age <- data$`Ten-Year Age Groups Code`
data <- data %>% mutate(age = ifelse(age==999, NA, age)) %>% type.convert() %>% mutate(age=str_extract(age, "\\d+"))
data <- data %>% select(-ends_with("code"))
data <- data %>% type.convert()
return(data)
}
process_df_tsv <- function(data, age_intervals){
if (identical(which(colnames(data) == "Single-Year Ages Code"), integer(0))) {
return( process_df_ten_year_groups_tsv(data) )
}
agecodes <- data$`Single-Year Ages Code`
data <- data %>% select(-ends_with("code"))
data$age <- agecodes
data <- data %>% mutate(age=ifelse(age==999, NA, age))
data <- data %>% type.convert()
data <- data %>% mutate(age_cat = cut(age, breaks=age_intervals, right=FALSE)) %>% mutate(age_cat=as.character(age_cat))
data <- data %>% type.convert(as.is=TRUE)
#age buckets formatting
data <- data %>% mutate(age_lb = as.numeric(sub("\\[(\\d+),.*", "\\1", age_cat)), age_ub = as.numeric(sub(".*,(\\d+)\\)", "\\1", age_cat)), age_cat = paste0(age_lb, "-", age_ub-1), age_cat=ifelse(age_cat=="0-0", "< 1", age_cat)) %>% mutate(age=age_lb) %>% select(-c(age_lb, age_ub))
data <- data %>% mutate(age_cat = ifelse(age == 85, "85+", age_cat))
return(data)
}
compute_statistics <- function(data, life_exp){
data <- data %>% filter(is.finite(as.numeric(Population))) %>% filter(is.finite(as.numeric(Deaths))) %>% filter(is.finite(as.numeric(`Crude Rate`))) %>% type.convert(as.is=TRUE)
data_agg <- data %>% group_by(age_cat, age, Gender, Race, Year) %>% summarize(deaths=sum(Deaths), population=sum(Population),cruderate=mean(`Crude Rate`) ) %>% ungroup()
data_combined <- data_agg %>% left_join(life_exp, by=c("age"="age_cat", "Year"="year", "Gender"="Gender"))
data_combined <- data_combined %>% mutate(yrs_lost=life_expectancy*((deaths/population)*100000) )
excess_ypll <- data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], exc_pll_number = excess_yrs_lost * population[Race==1] * (1/100000) ) %>% ungroup()
return(excess_ypll)
}
wrapper_pll_by_age <- function(relfilepath, life_exp, age_intervals){
data <- preprocess_cdc_wonder(relfilepath)
relfilepath <- basename(relfilepath)
data <- process_df_tsv(data, age_intervals)
excess_ypll <- compute_statistics(data, life_exp)
excess_ypll <- excess_ypll %>% mutate(Year = gsub("deaths_crude_race_gender_age_year_|\\.txt", "", relfilepath))
excess_ypll
}
data <- preprocess_cdc_wonder(inputfile)
excess_ypll <- data %>% process_df_tsv(age_intervals) %>% compute_statistics(life_exp)
data
compute_statistics <- function(data, life_exp){
data <- data %>% filter(is.finite(as.numeric(Population))) %>% filter(is.finite(as.numeric(Deaths))) %>% filter(is.finite(as.numeric(`Crude Rate`))) %>% type.convert(as.is=TRUE)
data_agg <- data %>% group_by(age_cat, age, Gender, Race, Year) %>% summarize(deaths=sum(Deaths), population=sum(Population),cruderate=mean(`Crude Rate`) ) %>% ungroup()
data_combined <- data_agg %>% left_join(life_exp, by=c("age"="age_cat", "Year"="year", "Gender"="Gender"))
data_combined <- data_combined %>% mutate(yrs_lost=life_expectancy*((deaths/population)*100000) )
excess_ypll <- data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], exc_pll_dnumber = excess_yrs_lost * Population[Race==1] * (1/100000) ) %>% ungroup()
return(excess_ypll)
}
wrapper_pll_by_age <- function(relfilepath, life_exp, age_intervals){
data <- preprocess_cdc_wonder(relfilepath)
relfilepath <- basename(relfilepath)
data <- process_df_tsv(data, age_intervals)
excess_ypll <- compute_statistics(data, life_exp)
excess_ypll <- excess_ypll %>% mutate(Year = gsub("deaths_crude_race_gender_age_year_|\\.txt", "", relfilepath))
excess_ypll
}
data <- preprocess_cdc_wonder(inputfile)
excess_ypll <- data %>% process_df_tsv(age_intervals) %>% compute_statistics(life_exp)
data <- data %>% process_df_tsv(age_intervals)
data
data <- data %>% filter(is.finite(as.numeric(Population))) %>% filter(is.finite(as.numeric(Deaths))) %>% filter(is.finite(as.numeric(`Crude Rate`))) %>% type.convert(as.is=TRUE)
data_agg <- data %>% group_by(age_cat, age, Gender, Race, Year) %>% summarize(deaths=sum(Deaths), population=sum(Population),cruderate=mean(`Crude Rate`) ) %>% ungroup()
data_combined <- data_agg %>% left_join(life_exp, by=c("age"="age_cat", "Year"="year", "Gender"="Gender"))
data_combined <- data_combined %>% mutate(yrs_lost=life_expectancy*((deaths/population)*100000) )
data_combined
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3])
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], exc_pll_number = excess_yrs_lost * population[Race==1] * (1/100000) ) )
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], exc_pll_number = excess_yrs_lost * population[Race==1] * (1/100000) )
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], r = Race==1
)
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], r = excess_yrs_lost)
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], r = excess_yrs_lost * population)
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], r = excess_yrs_lost * population[Race==1])
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3])
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], pop = Population[Race == 1])
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], pop = population[Race == 1])
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost)) %>% ungroup() %>% group_by(Gender, age_cat, age)
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost), pop = population) %>% ungroup() %>% group_by(Gender, age_cat, age)
data_combined %>% filter(!is.na(life_expectancy))
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost), pop = sum(population)) %>% ungroup() %>% group_by(Gender, age_cat, age)
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost), pop = sum(population[Race == 1])) %>% ungroup() %>% group_by(Gender, age_cat, age)
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost), pop = sum(population)) %>% ungroup() %>% group_by(Gender, age_cat, age)
data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost), pop = sum(population)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], exc_pll_number = excess_yrs_lost * population[Race==1] * (1/100000) ) %>% ungroup()
excess_ypll <- data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost), pop = sum(population)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], exc_pll_number = excess_yrs_lost * pop[Race==1] * (1/100000) ) %>% ungroup()
excess_ypll
compute_statistics <- function(data, life_exp){
data <- data %>% filter(is.finite(as.numeric(Population))) %>% filter(is.finite(as.numeric(Deaths))) %>% filter(is.finite(as.numeric(`Crude Rate`))) %>% type.convert(as.is=TRUE)
data_agg <- data %>% group_by(age_cat, age, Gender, Race, Year) %>% summarize(deaths=sum(Deaths), population=sum(Population),cruderate=mean(`Crude Rate`) ) %>% ungroup()
data_combined <- data_agg %>% left_join(life_exp, by=c("age"="age_cat", "Year"="year", "Gender"="Gender"))
data_combined <- data_combined %>% mutate(yrs_lost=life_expectancy*((deaths/population)*100000) )
excess_ypll <- data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost), pop = sum(population)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], exc_pll_number = excess_yrs_lost * pop[Race==1] * (1/100000) ) %>% ungroup()
return(excess_ypll)
}
wrapper_pll_by_age <- function(relfilepath, life_exp, age_intervals){
data <- preprocess_cdc_wonder(relfilepath)
relfilepath <- basename(relfilepath)
data <- process_df_tsv(data, age_intervals)
excess_ypll <- compute_statistics(data, life_exp)
excess_ypll <- excess_ypll %>% mutate(Year = gsub("deaths_crude_race_gender_age_year_|\\.txt", "", relfilepath))
excess_ypll
}
data <- preprocess_cdc_wonder(inputfile)
excess_ypll <- data %>% process_df_tsv(age_intervals) %>% compute_statistics(life_exp)
excess_yplll
excess_ypll
excess_ypll %>% group_by(age_cat, Gender) %>% select(age_cat, Gender, excess_yrs_lost, exc_pll_number)
excess_ypll %>% select(age_cat, Gender, excess_yrs_lost, exc_pll_number)
excess_ypll %>% select(age_cat, Gender, excess_yrs_lost, exc_pll_number) %>% magrittr::set_colnames(c("Age", "Gender", "excess_ypll_rate", "excess_ypll_number")) %>%
pivot_longer(cols = starts_with("excess"),
names_to = "AgeType",
values_to = "Value") %>%
pivot_wider(names_from = c(AgeType, Gender),
values_from = Value) %>%
rename_with(~ str_replace_all(.x, "exc_", ""),
starts_with("exc"))
excess_pll_age_table <- excess_ypll %>% select(age_cat, Gender, excess_yrs_lost, exc_pll_number) %>% magrittr::set_colnames(c("Age", "Gender", "excess_ypll_rate", "excess_ypll_number")) %>%
pivot_longer(cols = starts_with("excess"),
names_to = "AgeType",
values_to = "Value") %>%
pivot_wider(names_from = c(AgeType, Gender),
values_from = Value) %>%
rename_with(~ str_replace_all(.x, "exc_", ""),
starts_with("exc"))
excess_pll_age_table
compute_statistics <- function(data, life_exp){
data <- data %>% filter(is.finite(as.numeric(Population))) %>% filter(is.finite(as.numeric(Deaths))) %>% filter(is.finite(as.numeric(`Crude Rate`))) %>% type.convert(as.is=TRUE)
data_agg <- data %>% group_by(age_cat, age, Gender, Race, Year) %>% summarize(deaths=sum(Deaths), population=sum(Population),cruderate=mean(`Crude Rate`) ) %>% ungroup()
data_combined <- data_agg %>% left_join(life_exp, by=c("age"="age_cat", "Year"="year", "Gender"="Gender"))
data_combined <- data_combined %>% mutate(yrs_lost=life_expectancy*((deaths/population)*100000) )
excess_ypll <- data_combined %>% filter(!is.na(life_expectancy)) %>% group_by(Race, Gender, age_cat, age) %>% summarize(yrs_lost = mean(yrs_lost), pop = sum(population)) %>% ungroup() %>% group_by(Gender, age_cat, age) %>% summarize(excess_yrs_lost = yrs_lost[Race==1] - yrs_lost[Race==3], ratio_excess_yrs_lost = yrs_lost[Race==1] / yrs_lost[Race==3], black_years_lost = yrs_lost[Race==1], white_years_lost = yrs_lost[Race==3], exc_pll_number = excess_yrs_lost * pop[Race==1] * (1/100000) ) %>% ungroup()
return(excess_ypll)
}
wrapper_pll_by_age <- function(relfilepath, life_exp, age_intervals){
data <- preprocess_cdc_wonder(relfilepath)
relfilepath <- basename(relfilepath)
data <- process_df_tsv(data, age_intervals)
excess_ypll <- compute_statistics(data, life_exp)
excess_ypll <- excess_ypll %>% mutate(Year = gsub("deaths_crude_race_gender_age_year_|\\.txt", "", relfilepath))
excess_ypll
}
data <- preprocess_cdc_wonder(inputfile)
excess_ypll <- data %>% process_df_tsv(age_intervals) %>% compute_statistics(life_exp)
excess_ypll
